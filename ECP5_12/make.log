yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll12.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll12.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll12.v
Parsing Verilog input from `ecppll12.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$144 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$144 in module uart.
Marked 1 switch rules as full_case in process $proc$pulses.v:144$59 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:129$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:129$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 67 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$403'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$173'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$172'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$171'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:97$137'.
  Set init value: \xfer_bits = 2'01
Found init rule in `\pulses.$proc$pulses.v:91$136'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:87$135'.
  Set init value: \nutation_pulse_delay = 16'0000000100101100
Found init rule in `\pulses.$proc$pulses.v:86$134'.
  Set init value: \nutation_pulse_width = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:82$132'.
  Set init value: \block_on = 16'0000000111001100
Found init rule in `\pulses.$proc$pulses.v:81$131'.
  Set init value: \block_off = 16'0000000110011010
Found init rule in `\pulses.$proc$pulses.v:80$130'.
  Set init value: \sync_down = 16'0000000100000100
Found init rule in `\pulses.$proc$pulses.v:79$129'.
  Set init value: \p2start = 16'0000000011100110
Found init rule in `\pulses.$proc$pulses.v:77$128'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulses.$proc$pulses.v:76$127'.
  Set init value: \block = 1'1
Found init rule in `\pulses.$proc$pulses.v:75$126'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulses.$proc$pulses.v:74$125'.
  Set init value: \pulse_block_off = 16'0000000001100100
Found init rule in `\pulses.$proc$pulses.v:73$124'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:72$123'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:71$122'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulses.$proc$pulses.v:70$121'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:69$120'.
  Set init value: \period = 65536
Found init rule in `\pulses.$proc$pulses.v:57$119'.
  Set init value: \cw = 1'0
Found init rule in `\pulses.$proc$pulses.v:48$117'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:126$45'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:109$44'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:108$43'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:106$41'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:45$40'.
  Set init value: \nut_wid = 8'00000000
Found init rule in `\pulse_control.$proc$pulse_control.v:44$39'.
  Set init value: \nut_del = 16'0000000000000000
Found init rule in `\pulse_control.$proc$pulse_control.v:43$38'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:42$37'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:41$36'.
  Set init value: \cpmg = 8'00000001
Found init rule in `\pulse_control.$proc$pulse_control.v:39$34'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:38$33'.
  Set init value: \p2width = 16'0000000000111100
Found init rule in `\pulse_control.$proc$pulse_control.v:37$32'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:36$31'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:35$30'.
  Set init value: \period = 983040

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$403'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$396'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_EN[3:0]$378
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_DATA[3:0]$377
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_ADDR[3:0]$376
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$342'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_EN[3:0]$323
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_DATA[3:0]$322
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_ADDR[3:0]$321
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
Creating decoders for process `\uart.$proc$uart.v:106$173'.
Creating decoders for process `\uart.$proc$uart.v:105$172'.
Creating decoders for process `\uart.$proc$uart.v:101$171'.
Creating decoders for process `\uart.$proc$uart.v:135$144'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:97$137'.
Creating decoders for process `\pulses.$proc$pulses.v:91$136'.
Creating decoders for process `\pulses.$proc$pulses.v:87$135'.
Creating decoders for process `\pulses.$proc$pulses.v:86$134'.
Creating decoders for process `\pulses.$proc$pulses.v:85$133'.
Creating decoders for process `\pulses.$proc$pulses.v:82$132'.
Creating decoders for process `\pulses.$proc$pulses.v:81$131'.
Creating decoders for process `\pulses.$proc$pulses.v:80$130'.
Creating decoders for process `\pulses.$proc$pulses.v:79$129'.
Creating decoders for process `\pulses.$proc$pulses.v:77$128'.
Creating decoders for process `\pulses.$proc$pulses.v:76$127'.
Creating decoders for process `\pulses.$proc$pulses.v:75$126'.
Creating decoders for process `\pulses.$proc$pulses.v:74$125'.
Creating decoders for process `\pulses.$proc$pulses.v:73$124'.
Creating decoders for process `\pulses.$proc$pulses.v:72$123'.
Creating decoders for process `\pulses.$proc$pulses.v:71$122'.
Creating decoders for process `\pulses.$proc$pulses.v:70$121'.
Creating decoders for process `\pulses.$proc$pulses.v:69$120'.
Creating decoders for process `\pulses.$proc$pulses.v:57$119'.
Creating decoders for process `\pulses.$proc$pulses.v:56$118'.
Creating decoders for process `\pulses.$proc$pulses.v:48$117'.
Creating decoders for process `\pulses.$proc$pulses.v:144$59'.
     1/13: $0\cblock_on[31:0]
     2/13: $0\cblock_delay[31:0]
     3/13: $0\cpulse[31:0]
     4/13: $0\cdelay[31:0]
     5/13: $0\ccount[7:0]
     6/13: $0\nutation_pulse_stop[23:0]
     7/13: $0\nutation_pulse_start[23:0]
     8/13: $0\inh[0:0]
     9/13: $0\nut_pulse[0:0]
    10/13: $0\pulse[0:0]
    11/13: $0\sync[0:0]
    12/13: $0\counter[31:0]
    13/13: $0\pulses[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:109$46'.
     1/10: $0\nutation_pulse_delay[15:0]
     2/10: $0\nutation_pulse_width[7:0]
     3/10: $0\cpmg[7:0]
     4/10: $0\pulse_block_off[15:0]
     5/10: $0\pulse_block[7:0]
     6/10: $0\block[0:0]
     7/10: $0\p2width[15:0]
     8/10: $0\delay[15:0]
     9/10: $0\p1width[15:0]
    10/10: $0\period[31:0]
Creating decoders for process `\pulse_control.$proc$pulse_control.v:126$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:109$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:108$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:107$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:106$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:36$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:35$30'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:129$3'.
     1/31: $2\rx_done[0:0]
     2/31: $4$bitselwrite$data$pulse_control.v:145$2[31:0]$14
     3/31: $4$bitselwrite$mask$pulse_control.v:145$1[31:0]$13
     4/31: $4\vinput[31:0]
     5/31: $3$bitselwrite$data$pulse_control.v:145$2[31:0]$11
     6/31: $3$bitselwrite$mask$pulse_control.v:145$1[31:0]$10
     7/31: $3\vinput[31:0]
     8/31: $2$bitselwrite$data$pulse_control.v:145$2[31:0]$9
     9/31: $2$bitselwrite$mask$pulse_control.v:145$1[31:0]$8
    10/31: $2\vinput[31:0]
    11/31: $1$bitselwrite$data$pulse_control.v:145$2[31:0]$7
    12/31: $1$bitselwrite$mask$pulse_control.v:145$1[31:0]$6
    13/31: $1\vinput[31:0]
    14/31: $1\voutput[7:0]
    15/31: $1\rx_done[0:0]
    16/31: $0\state[2:0]
    17/31: $0\readcount[5:0]
    18/31: $0\readstate[1:0]
    19/31: $0\writestate[0:0]
    20/31: $0\vcontrol[7:0]
    21/31: $0\tx_byte[7:0]
    22/31: $0\transmit[0:0]
    23/31: $0\cpmg[7:0]
    24/31: $0\pulse_block[7:0]
    25/31: $0\block[0:0]
    26/31: $0\nut_wid[7:0]
    27/31: $0\nut_del[15:0]
    28/31: $0\p2width[15:0]
    29/31: $0\delay[15:0]
    30/31: $0\p1width[15:0]
    31/31: $0\period[31:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\nutation_pulse' from process `\pulses.$proc$pulses.v:85$133'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:56$118'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:107$42'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:40$35'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
  created $dff cell `$procdff$1441' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$396'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
  created $dff cell `$procdff$1442' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
  created $dff cell `$procdff$1443' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
  created $dff cell `$procdff$1444' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$342'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
  created $dff cell `$procdff$1445' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
  created $dff cell `$procdff$1446' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
  created $dff cell `$procdff$1447' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1448' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1449' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1450' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1451' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1452' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1453' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1454' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1455' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1456' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1457' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1458' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1459' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1460' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1461' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1462' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1463' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1464' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1465' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1466' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1467' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1468' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1469' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1470' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:144$59'.
  created $dff cell `$procdff$1471' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1472' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1473' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1474' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1475' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1476' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1477' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_off' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1478' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1479' with positive edge clock.
Creating register for signal `\pulses.\rx_done' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1480' with positive edge clock.
Creating register for signal `\pulses.\cw' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1481' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1482' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1483' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1484' with positive edge clock.
Creating register for signal `\pulses.\block_on' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1485' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1486' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1487' with positive edge clock.
Creating register for signal `\pulses.\xfer_bits' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1488' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1489' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1490' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1491' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1492' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1493' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1494' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1495' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1496' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1497' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1498' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1499' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1500' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1501' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1502' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1503' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1504' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1505' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1506' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1507' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:145$1' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1508' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:145$2' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1509' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$403'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$396'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$342'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
Removing empty process `uart.$proc$uart.v:106$173'.
Removing empty process `uart.$proc$uart.v:105$172'.
Removing empty process `uart.$proc$uart.v:101$171'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$144'.
Removing empty process `uart.$proc$uart.v:135$144'.
Removing empty process `pulses.$proc$pulses.v:97$137'.
Removing empty process `pulses.$proc$pulses.v:91$136'.
Removing empty process `pulses.$proc$pulses.v:87$135'.
Removing empty process `pulses.$proc$pulses.v:86$134'.
Removing empty process `pulses.$proc$pulses.v:85$133'.
Removing empty process `pulses.$proc$pulses.v:82$132'.
Removing empty process `pulses.$proc$pulses.v:81$131'.
Removing empty process `pulses.$proc$pulses.v:80$130'.
Removing empty process `pulses.$proc$pulses.v:79$129'.
Removing empty process `pulses.$proc$pulses.v:77$128'.
Removing empty process `pulses.$proc$pulses.v:76$127'.
Removing empty process `pulses.$proc$pulses.v:75$126'.
Removing empty process `pulses.$proc$pulses.v:74$125'.
Removing empty process `pulses.$proc$pulses.v:73$124'.
Removing empty process `pulses.$proc$pulses.v:72$123'.
Removing empty process `pulses.$proc$pulses.v:71$122'.
Removing empty process `pulses.$proc$pulses.v:70$121'.
Removing empty process `pulses.$proc$pulses.v:69$120'.
Removing empty process `pulses.$proc$pulses.v:57$119'.
Removing empty process `pulses.$proc$pulses.v:56$118'.
Removing empty process `pulses.$proc$pulses.v:48$117'.
Found and cleaned up 7 empty switches in `\pulses.$proc$pulses.v:144$59'.
Removing empty process `pulses.$proc$pulses.v:144$59'.
Found and cleaned up 1 empty switch in `\pulses.$proc$pulses.v:109$46'.
Removing empty process `pulses.$proc$pulses.v:109$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:126$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:109$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:108$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:107$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:106$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:36$31'.
Removing empty process `pulse_control.$proc$pulse_control.v:35$30'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:129$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:129$3'.
Cleaned up 38 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~107 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 45 unused cells and 358 unused wires.
<suppressed ~60 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~612 debug messages>
Removed a total of 204 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1314: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1312: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1316: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$528.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$536.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$544.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$577.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$587.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$589.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$599.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$601.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$611.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$613.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$622.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$631.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$640.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$649.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$658.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$667.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$678.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$680.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$690.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$700.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$710.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$720.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$732.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$734.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$746.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$748.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$760.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$762.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$774.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$776.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$788.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$790.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$801.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$812.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$823.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$834.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$845.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$857.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$869.
    dead port 2/2 on $mux $flatten\control.$procmux$1125.
    dead port 2/2 on $mux $flatten\control.$procmux$1166.
    dead port 2/2 on $mux $flatten\control.$procmux$1168.
    dead port 2/2 on $mux $flatten\control.$procmux$1170.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$427.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$429.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$437.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$439.
    dead port 2/2 on $mux $flatten\control.$procmux$1204.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$447.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$449.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$457.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$459.
    dead port 2/2 on $mux $flatten\control.$procmux$1206.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$467.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$469.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$476.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$483.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$490.
    dead port 2/2 on $mux $flatten\control.$procmux$1233.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$497.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$504.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$512.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$520.
Removed 63 multiplexer ports.
<suppressed ~56 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$561: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1511 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1280: { $flatten\control.$procmux$1171_CMP $auto$opt_reduce.cc:134:opt_mux$1513 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$566: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1515 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$880: { $flatten\control.\uart0.$procmux$858_CMP $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP $flatten\control.\uart0.$procmux$874_CMP $auto$opt_reduce.cc:134:opt_mux$1517 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$889: { $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1519 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$898: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1521 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$907: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1523 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$916: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1525 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1008: $auto$opt_reduce.cc:134:opt_mux$1527
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1028: $auto$opt_reduce.cc:134:opt_mux$1529
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$546: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1531 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$952: $auto$opt_reduce.cc:134:opt_mux$1533
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$972: $auto$opt_reduce.cc:134:opt_mux$1535
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$990: $auto$opt_reduce.cc:134:opt_mux$1537
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1539 }
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 275 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.pulses.pulse_block_off as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pulses.$procdff$1487 ($dff) from module pulse_gen (D = \control.nut_del, Q = \pulses.nutation_pulse_delay).
Adding EN signal on $flatten\pulses.$procdff$1486 ($dff) from module pulse_gen (D = \control.nut_wid, Q = \pulses.nutation_pulse_width).
Adding EN signal on $flatten\pulses.$procdff$1479 ($dff) from module pulse_gen (D = \control.cpmg, Q = \pulses.cpmg).
Adding EN signal on $flatten\pulses.$procdff$1478 ($dff) from module pulse_gen (D = 16'0000000000110010, Q = \pulses.pulse_block_off).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 5 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1543 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1477 ($dff) from module pulse_gen (D = \control.pulse_block, Q = \pulses.pulse_block).
Adding EN signal on $flatten\pulses.$procdff$1476 ($dff) from module pulse_gen (D = \control.block, Q = \pulses.block).
Adding EN signal on $flatten\pulses.$procdff$1475 ($dff) from module pulse_gen (D = \control.p2width, Q = \pulses.p2width).
Adding EN signal on $flatten\pulses.$procdff$1474 ($dff) from module pulse_gen (D = \control.delay, Q = \pulses.delay).
Adding EN signal on $flatten\pulses.$procdff$1473 ($dff) from module pulse_gen (D = \control.p1width, Q = \pulses.p1width).
Adding EN signal on $flatten\pulses.$procdff$1472 ($dff) from module pulse_gen (D = \control.period, Q = \pulses.period).
Adding EN signal on $flatten\pulses.$procdff$1471 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$949_Y, Q = \pulses.cblock_on).
Adding EN signal on $flatten\pulses.$procdff$1470 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$969_Y, Q = \pulses.cblock_delay).
Adding EN signal on $flatten\pulses.$procdff$1469 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$987_Y, Q = \pulses.cpulse).
Adding EN signal on $flatten\pulses.$procdff$1468 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1005_Y, Q = \pulses.cdelay).
Adding EN signal on $flatten\pulses.$procdff$1467 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1025_Y, Q = \pulses.ccount).
Adding SRST signal on $auto$opt_dff.cc:764:run$1636 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$1023_Y, Q = \pulses.ccount, rval = 8'00000000).
Adding EN signal on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:148$61_Y [23:0], Q = \pulses.nutation_pulse_stop).
Adding EN signal on $flatten\pulses.$procdff$1465 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:148$62_Y [23:0], Q = \pulses.nutation_pulse_start).
Adding EN signal on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1054_Y, Q = \pulses.inh).
Adding EN signal on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:151$67_Y [0], Q = \pulses.nut_pulse).
Adding SRST signal on $auto$opt_dff.cc:764:run$1659 ($dffe) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:152$66_Y [0], Q = \pulses.nut_pulse, rval = 1'0).
Adding EN signal on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen (D = $flatten\pulses.$logic_or$pulses.v:233$116_Y, Q = \pulses.pulse).
Adding EN signal on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1074_Y, Q = \pulses.sync).
Adding EN signal on $flatten\pulses.$procdff$1460 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:232$115_Y, Q = \pulses.counter).
Adding SRST signal on $auto$opt_dff.cc:764:run$1677 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:232$114_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1096_Y, Q = \pulses.pulses).
Adding EN signal on $flatten\control.\uart0.$procdff$1458 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1457 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1456 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1455 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1454 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1453 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1452 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1449 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1448 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1507 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1506 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1505 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1300_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1504 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1503 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:162$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1502 ($dff) from module pulse_gen (D = \control.uart0.rx_data, Q = \control.vcontrol).
Adding EN signal on $flatten\control.$procdff$1501 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1500 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1499 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1498 ($dff) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.rx_done).
Adding EN signal on $flatten\control.$procdff$1497 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.cpmg).
Adding EN signal on $flatten\control.$procdff$1496 ($dff) from module pulse_gen (D = \control.vinput [15:8], Q = \control.pulse_block).
Adding EN signal on $flatten\control.$procdff$1495 ($dff) from module pulse_gen (D = \control.vinput [1], Q = \control.block).
Adding EN signal on $flatten\control.$procdff$1494 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.nut_wid).
Adding EN signal on $flatten\control.$procdff$1493 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.nut_del).
Adding EN signal on $flatten\control.$procdff$1492 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p2width).
Adding EN signal on $flatten\control.$procdff$1491 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.delay).
Adding EN signal on $flatten\control.$procdff$1490 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p1width).
Adding EN signal on $flatten\control.$procdff$1489 ($dff) from module pulse_gen (D = \control.vinput, Q = \control.period).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 63 unused cells and 63 unused wires.
<suppressed ~64 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~21 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$546: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$561: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$889: $flatten\control.\uart0.$procmux$590_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$898: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$590_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$907: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$916: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 7 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~198 debug messages>
Removed a total of 66 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 9) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1643 ($ne).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1645 ($ne).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1665 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1671 ($ne).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1682 ($ne).
Removed top 1 bits (of 6) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1684 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1697 ($ne).
Removed top 1 bits (of 5) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1591 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$156 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$158 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$162 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$169 ($mux).
Removed top 4 bits (of 5) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1555 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$430_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$435 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$445 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$465 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$474 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$481 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$488 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$495 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$510 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$518 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$526 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$542 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$575 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$590_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$597 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$620 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$638 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$647 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$656 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$665 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$676 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$681_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$688 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$698 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$718 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$730 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$735_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$744 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$772 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$799 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$810 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$832 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$843 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$855 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$889 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1438_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1426_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1402_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1392_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1385_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1370_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1361_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1350 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1346 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1306 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1304 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1301_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1298 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1291 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1289 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1276 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1274 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1272 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1262 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1258 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1253_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1553 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1126_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:146$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:146$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1818 ($ne).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1796 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1794 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1790 ($ne).
Removed cell pulse_gen.$flatten\pulses.$procmux$1087 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1076 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1069 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1067 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1065 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1049 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1047 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1045 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1041 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1039 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1037 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1023 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1021 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1019 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1017 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1015 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1013 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$procmux$1009_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$1003 ($mux).
Removed top 16 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$1004_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$1001 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$999 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$997 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$985 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$983 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$981 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$979 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$967 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$965 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$963 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$961 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$959 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$957 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$947 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$945 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$943 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$941 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$939 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$937 ($mux).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:232$114 ($add).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:226$112 ($add).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:226$112 ($add).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:224$111 ($add).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:210$107 ($mux).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$sub$pulses.v:210$104 ($sub).
Removed top 23 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$sub$pulses.v:210$104 ($sub).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:197$97 ($mux).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:187$94 ($add).
Removed top 15 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:184$86 ($add).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:170$85 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:167$83 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:168$81 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:163$77 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:164$76 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:165$74 ($mux).
Removed top 1 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$eq$pulses.v:157$69 ($eq).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:152$66 ($mux).
Removed top 8 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$sub$pulses.v:148$62 ($sub).
Removed top 8 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:148$62 ($sub).
Removed top 8 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$sub$pulses.v:148$61 ($sub).
Removed top 8 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:148$61 ($sub).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:138$58 ($mux).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$gt$pulses.v:138$57 ($gt).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:146$23_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1304_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$156_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$162_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$169_Y.
Removed top 15 bits (of 32) from wire pulse_gen.$flatten\pulses.$add$pulses.v:184$86_Y.
Removed top 8 bits (of 32) from wire pulse_gen.$flatten\pulses.$sub$pulses.v:148$61_Y.
Removed top 8 bits (of 32) from wire pulse_gen.$flatten\pulses.$sub$pulses.v:148$62_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:152$66_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:163$77_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 96 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~170 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:146$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$153 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$146 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$148 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$154 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$159 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$167 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:127$47 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:128$49 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:129$52 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:184$86 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:185$88 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:186$91 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:187$94 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:205$100 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:205$99 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:206$103 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:223$110 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:224$111 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:226$112 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:232$114 ($add).
  creating $macc model for $flatten\pulses.$sub$pulses.v:129$53 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:148$61 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:148$62 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:210$104 ($sub).
  merging $macc model for $flatten\pulses.$add$pulses.v:205$99 into $flatten\pulses.$add$pulses.v:205$100.
  merging $macc model for $flatten\control.$add$pulse_control.v:162$26 into $flatten\control.$add$pulse_control.v:162$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:162$25 into $flatten\control.$add$pulse_control.v:162$27.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:129$53.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:232$114.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:226$112.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:224$111.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:223$110.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:206$103.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:148$61.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:187$94.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:186$91.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:185$88.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:184$86.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:129$52.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:128$49.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:127$47.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$167.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$159.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$154.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$148.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$146.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$153.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:148$62.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:210$104.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:146$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:162$27: $auto$alumacc.cc:365:replace_macc$1898
  creating $macc cell for $flatten\pulses.$add$pulses.v:205$100: $auto$alumacc.cc:365:replace_macc$1899
  creating $alu model for $flatten\pulses.$gt$pulses.v:138$57 ($gt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:151$64 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:152$65 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:163$70 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:164$71 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:165$72 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:167$78 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:168$79 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:197$95 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:232$113 ($lt): new $alu
  creating $alu model for $flatten\pulses.$procmux$1004_CMP0 ($eq): merged with $flatten\pulses.$lt$pulses.v:163$70.
  creating $alu cell for $flatten\pulses.$lt$pulses.v:232$113: $auto$alumacc.cc:485:replace_alu$1910
  creating $alu cell for $flatten\pulses.$lt$pulses.v:197$95: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\pulses.$lt$pulses.v:168$79: $auto$alumacc.cc:485:replace_alu$1920
  creating $alu cell for $flatten\pulses.$lt$pulses.v:167$78: $auto$alumacc.cc:485:replace_alu$1931
  creating $alu cell for $flatten\pulses.$lt$pulses.v:165$72: $auto$alumacc.cc:485:replace_alu$1942
  creating $alu cell for $flatten\pulses.$lt$pulses.v:164$71: $auto$alumacc.cc:485:replace_alu$1953
  creating $alu cell for $flatten\pulses.$lt$pulses.v:163$70, $flatten\pulses.$procmux$1004_CMP0: $auto$alumacc.cc:485:replace_alu$1964
  creating $alu cell for $flatten\pulses.$lt$pulses.v:152$65: $auto$alumacc.cc:485:replace_alu$1975
  creating $alu cell for $flatten\pulses.$lt$pulses.v:151$64: $auto$alumacc.cc:485:replace_alu$1986
  creating $alu cell for $flatten\pulses.$gt$pulses.v:138$57: $auto$alumacc.cc:485:replace_alu$1997
  creating $alu cell for $flatten\control.$add$pulse_control.v:146$23: $auto$alumacc.cc:485:replace_alu$2002
  creating $alu cell for $flatten\pulses.$sub$pulses.v:210$104: $auto$alumacc.cc:485:replace_alu$2005
  creating $alu cell for $flatten\pulses.$sub$pulses.v:148$62: $auto$alumacc.cc:485:replace_alu$2008
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$153: $auto$alumacc.cc:485:replace_alu$2011
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$146: $auto$alumacc.cc:485:replace_alu$2014
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$148: $auto$alumacc.cc:485:replace_alu$2017
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$154: $auto$alumacc.cc:485:replace_alu$2020
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$159: $auto$alumacc.cc:485:replace_alu$2023
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$167: $auto$alumacc.cc:485:replace_alu$2026
  creating $alu cell for $flatten\pulses.$add$pulses.v:128$49: $auto$alumacc.cc:485:replace_alu$2029
  creating $alu cell for $flatten\pulses.$add$pulses.v:129$52: $auto$alumacc.cc:485:replace_alu$2032
  creating $alu cell for $flatten\pulses.$add$pulses.v:127$47: $auto$alumacc.cc:485:replace_alu$2035
  creating $alu cell for $flatten\pulses.$add$pulses.v:184$86: $auto$alumacc.cc:485:replace_alu$2038
  creating $alu cell for $flatten\pulses.$add$pulses.v:185$88: $auto$alumacc.cc:485:replace_alu$2041
  creating $alu cell for $flatten\pulses.$add$pulses.v:186$91: $auto$alumacc.cc:485:replace_alu$2044
  creating $alu cell for $flatten\pulses.$add$pulses.v:187$94: $auto$alumacc.cc:485:replace_alu$2047
  creating $alu cell for $flatten\pulses.$sub$pulses.v:148$61: $auto$alumacc.cc:485:replace_alu$2050
  creating $alu cell for $flatten\pulses.$add$pulses.v:206$103: $auto$alumacc.cc:485:replace_alu$2053
  creating $alu cell for $flatten\pulses.$add$pulses.v:223$110: $auto$alumacc.cc:485:replace_alu$2056
  creating $alu cell for $flatten\pulses.$add$pulses.v:224$111: $auto$alumacc.cc:485:replace_alu$2059
  creating $alu cell for $flatten\pulses.$add$pulses.v:226$112: $auto$alumacc.cc:485:replace_alu$2062
  creating $alu cell for $flatten\pulses.$add$pulses.v:232$114: $auto$alumacc.cc:485:replace_alu$2065
  creating $alu cell for $flatten\pulses.$sub$pulses.v:129$53: $auto$alumacc.cc:485:replace_alu$2068
  created 33 $alu and 2 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~10 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$907: { $flatten\control.\uart0.$procmux$681_CMP $auto$opt_reduce.cc:134:opt_mux$2072 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$916: { $flatten\control.\uart0.$procmux$681_CMP $auto$opt_reduce.cc:134:opt_mux$2074 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1617 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:205$100_Y [31:17], Q = \pulses.cdelay [31:17], rval = 15'000000000000000).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 12 unused cells and 25 unused wires.
<suppressed ~13 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~190 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1851 ($dffe) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1824 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1314_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1821 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1881 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1812 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1880 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1788 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1773 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1747 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1729 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1702 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 54 unused wires.
<suppressed ~10 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1602 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:206$103_Y [31:18], Q = \pulses.cpulse [31:18], rval = 14'00000000000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1587 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:223$110_Y [31:19], Q = \pulses.cblock_delay [31:19], rval = 13'0000000000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1568 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:224$111_Y [31:19], Q = \pulses.cblock_on [31:19], rval = 13'0000000000000).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Rerunning OPT passes. (Removed registers in this run.)

6.30.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.13. Executing OPT_DFF pass (perform DFF optimizations).

6.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.15. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1260:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1260_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1260_Y [1]
      New connections: { $flatten\control.$procmux$1260_Y [2] $flatten\control.$procmux$1260_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1300:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1881 [0] }, B=2'00, Y=$flatten\control.$procmux$1300_Y
      New ports: A=$auto$wreduce.cc:454:run$1881 [0], B=1'0, Y=$flatten\control.$procmux$1300_Y [0]
      New connections: $flatten\control.$procmux$1300_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$435:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1884 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1884 [9] $auto$wreduce.cc:454:run$1884 [1] }
      New connections: { $auto$wreduce.cc:454:run$1884 [8:2] $auto$wreduce.cc:454:run$1884 [0] } = { 1'0 $auto$wreduce.cc:454:run$1884 [1] $auto$wreduce.cc:454:run$1884 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$585:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$597:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1886 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1886 [2] $auto$wreduce.cc:454:run$1886 [0] }
      New connections: { $auto$wreduce.cc:454:run$1886 [9:3] $auto$wreduce.cc:454:run$1886 [1] } = { $auto$wreduce.cc:454:run$1886 [0] $auto$wreduce.cc:454:run$1886 [2] $auto$wreduce.cc:454:run$1886 [2] 1'1 $auto$wreduce.cc:454:run$1886 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$609:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$758:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$164:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$164_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$164_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$164_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$164_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$170:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$170_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$170_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$170_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$170_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1265:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1260_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1260_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1821 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1803 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \pulses.cpulse (32 bits, unsigned)
  add \pulses.delay (16 bits, unsigned)
  add \pulses.delay (16 bits, unsigned)
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=9 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=8\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=16\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=8\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~3574 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~2379 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~1812 debug messages>
Removed a total of 604 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5362 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5362 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5363 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5363 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5364 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5364 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1359 unused cells and 2668 unused wires.
<suppressed ~1360 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5138 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1265.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5137 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1265.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2751 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$871.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2750 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$871.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2749 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$871.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2696 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2670 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$556.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2669 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$556.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
No more expansions possible.
<suppressed ~815 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3341 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 1898 gates and 2547 wires to a netlist network with 647 inputs and 344 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     299.
ABC: Participating nodes from both networks       =     754.
ABC: Participating nodes from the first network   =     348. (  52.41 % of nodes)
ABC: Participating nodes from the second network  =     406. (  61.14 % of nodes)
ABC: Node pairs (any polarity)                    =     348. (  52.41 % of names can be moved)
ABC: Node pairs (same polarity)                   =     321. (  48.34 % of names can be moved)
ABC: Total runtime =     0.07 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      663
ABC RESULTS:        internal signals:     1556
ABC RESULTS:           input signals:      647
ABC RESULTS:          output signals:      344
Removing temp directory.
Removed 0 unused cells and 1405 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod$e10ca4aca4e4c8627be5bb912095a9253494b061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000010010000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000011010000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod$d611654eaf2cfdde5476b49ff7dde7a3d8cbca2c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000000000000 for cells of type $lut.
Using template $paramod$629bea346f0daddb39cb1ebf17c36b3d1144d5d1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod$1929d44748517239e36a599c0facfb62ddb99607\$lut for cells of type $lut.
Using template $paramod$b5cd238a527d851ba52055b76f8b8313ff4d0a1d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod$fcd45dac87ecaf8167f012f6f6d6fa7b369dedb8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111100 for cells of type $lut.
Using template $paramod$d544e1f300ff74c4dad472b8a1469bb47c58f1ad\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod$d15f39da4cdda7162c5b1d8de7c7e77e72dbe4aa\$lut for cells of type $lut.
Using template $paramod$3dd1cfeaac2399e8e1df42382a37ba2eafacb216\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000000000000000000000000 for cells of type $lut.
Using template $paramod$2112a70fa1dfed7009af2d1b2a9304edd7f76cef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod$57619346c001bba14f685682aaa48a843cd5a7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=2131689472 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111110100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=401139735 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod$f8bdca125e424c8e9c5f5e84960e0e034e7c473c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000000000000000000000 for cells of type $lut.
Using template $paramod$5fba6fa4affd3d8cb90b92595f737467c857f3c8\$lut for cells of type $lut.
Using template $paramod$5547587bde2f1ca8d884d89fe5b90567ab8bb30e\$lut for cells of type $lut.
Using template $paramod$7b0e90364e815a4f852d1e2756ae8a5cd5cc152a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod$d87c03593b9affbae2c10ea3e929e67921fb56e7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod$e66cc471b5df98af045e5a88d12e8d811847cf43\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod$1e0dd002ad55c9de3e100593284e27da0ceeafab\$lut for cells of type $lut.
Using template $paramod$f78689128b22f4dca36b8e3adbad7168cdba8784\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101111000011110000111100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1073741824 for cells of type $lut.
Using template $paramod$b06492dfcfb8a8416d306ffa6cc98388995fec55\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=33023 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod$2fa2f3bfc0852a2c726cc8c189ba14f68ee17faa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod$f451e273eebdce42d2b73b0ce4f6a167f75d0e5b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=184549387 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1090519040 for cells of type $lut.
Using template $paramod$50ddde3c53ed9f3a904830da716060dc2a4a6794\$lut for cells of type $lut.
Using template $paramod$880ddf4469b174b70c2a7aa320dd9ec59396117a\$lut for cells of type $lut.
Using template $paramod$99d6af099a5309ae887d8dbb77ad6c20e2e05a5a\$lut for cells of type $lut.
Using template $paramod$4ab80866f6f76cbf39001d3cec8b8d12909949d6\$lut for cells of type $lut.
Using template $paramod$c38a2c02ce7163e8d111af40296e77c246f504d9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=8323072 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000000011111000100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100010001111111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11000000010101011111111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod$9703ff836e175b1c6b47f169dada293f15d54a17\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=268435456 for cells of type $lut.
No more expansions possible.
<suppressed ~2199 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12436.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12586.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12586.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut5 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12583.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12583.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12660.lut3 (4 -> 2)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut6 (4 -> 2)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut6 (4 -> 2)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12704.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12704.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12671.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12667.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12601.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12590.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12592.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12594.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12578.lut2 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12543.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12451.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12497.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12509.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12524.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12525.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12525.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12526.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12526.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12510.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12513.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12513.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12514.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12514.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12522.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12483.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12483.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12484.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12488.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12488.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12487.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12452.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12456.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12455.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12455.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12677.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12782.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12707.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12839.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12839.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut5 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12376.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12376.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12386.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12392.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12396.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12396.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12401.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12401.lut2 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12401.lut3 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12402.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12397.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut2 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut3 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut4 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut5 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut6 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12822.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12821.lut2 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12821.lut3 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12820.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12819.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut2 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut3 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut4 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut5 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut6 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12542.lut7 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12376.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12386.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12380.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12381.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12386.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12391.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12396.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12814.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12821.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12419.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12435.lut0 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12436.lut0 (4 -> 2)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12403.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12438.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12440.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12446.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12451.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12452.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12456.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12452.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12471.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12478.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12484.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12484.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12487.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12491.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12497.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12498.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12504.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12509.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12510.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12517.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12522.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12523.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12510.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12524.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12529.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12541.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12543.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12551.lut1 (4 -> 2)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12551.lut0 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12557.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12559.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12577.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12578.lut0 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12581.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12586.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12588.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12589.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12594.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12584.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12592.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12597.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12601.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12608.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12612.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12601.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12617.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12583.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12582.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12660.lut1 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12660.lut0 (4 -> 2)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12662.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12668.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12671.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12677.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12677.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12698.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12702.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12839.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12707.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12782.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12782.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12792.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12793.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12799.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12800.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut1 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12818.lut0 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12825.lut0 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12826.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12829.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12830.lut0 (4 -> 1)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12687.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12836.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12843.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12849.lut0 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12497.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12578.lut1 (4 -> 3)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12543.lut1 (4 -> 0)
  Optimizing lut $abc$12374$auto$blifparse.cc:498:parse_blif$12539.lut1 (4 -> 0)
Removed 0 unused cells and 1462 unused wires.

6.47. Executing AUTONAME pass.
Renamed 62675 objects in module pulse_gen (122 iterations).
<suppressed ~3306 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:               1198
   Number of wire bits:           4594
   Number of public wires:        1198
   Number of public wire bits:    4594
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2236
     CCU2C                         336
     EHXPLLL                         1
     L6MUX21                        98
     LUT4                          931
     PFUMX                         208
     TRELLIS_FF                    662

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: 4dd484a771, CPU: user 7.81s system 0.40s, MEM: 251.21 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 15% 8x techmap (1 sec), 15% 1x autoname (1 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 12.00 MHz
Info: constraining clock net 'clk_pll' to 200.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:      1603/83640     1%
Info:         logic LUTs:    931/83640     1%
Info:         carry LUTs:    672/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:      1324/83640     1%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y41/PIOD'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y41/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y41/PIOB'.
Info: pin 'clk$tr_io' constrained to Bel 'X63/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X0/Y47/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 12.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info:     promoting clock net clk_pll to global network
Info: Checksum: 0x30f65078

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x7755bb85

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:  1268/41820     3%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 804 cells, random placement wirelen = 138399.
Info:     at initial placer iter 0, wirelen = 1724
Info:     at initial placer iter 1, wirelen = 1592
Info:     at initial placer iter 2, wirelen = 1600
Info:     at initial placer iter 3, wirelen = 1575
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 1545, spread = 12514, legal = 12998; time = 0.03s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 2086, spread = 10307, legal = 10886; time = 0.05s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 2289, spread = 9145, legal = 9996; time = 0.07s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 2339, spread = 8958, legal = 10252; time = 0.04s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 2687, spread = 8937, legal = 10105; time = 0.09s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 2902, spread = 9184, legal = 10161; time = 0.04s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 3239, spread = 9322, legal = 10062; time = 0.04s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 3433, spread = 9068, legal = 9699; time = 0.05s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 3645, spread = 9437, legal = 10336; time = 0.05s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 4001, spread = 9736, legal = 10367; time = 0.06s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 4123, spread = 9434, legal = 10089; time = 0.04s
Info:     at iteration #12, type TRELLIS_SLICE: wirelen solved = 4257, spread = 9064, legal = 9831; time = 0.04s
Info:     at iteration #13, type TRELLIS_SLICE: wirelen solved = 4664, spread = 9434, legal = 10096; time = 0.04s
Info: HeAP Placer Time: 1.40s
Info:   of which solving equations: 0.61s
Info:   of which spreading cells: 0.08s
Info:   of which strict legalisation: 0.05s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 404, wirelen = 9699
Info:   at iteration #5: temp = 0.000000, timing cost = 324, wirelen = 8496
Info:   at iteration #10: temp = 0.000000, timing cost = 287, wirelen = 8140
Info:   at iteration #15: temp = 0.000000, timing cost = 256, wirelen = 7894
Info:   at iteration #17: temp = 0.000000, timing cost = 255, wirelen = 7850 
Info: SA placement time 3.43s

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 165.45 MHz (PASS at 12.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 135.63 MHz (FAIL at 200.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 6.58 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 5.46 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 4.20 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 6.67 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 7.76 ns

Info: Slack histogram:
Info:  legend: * represents 13 endpoint(s)
Info:          + represents [1,13) endpoint(s)
Info: [ -2373,   1881) |************************************************************ 
Info: [  1881,   6135) |*********+
Info: [  6135,  10389) | 
Info: [ 10389,  14643) | 
Info: [ 14643,  18897) | 
Info: [ 18897,  23151) | 
Info: [ 23151,  27405) | 
Info: [ 27405,  31659) | 
Info: [ 31659,  35913) | 
Info: [ 35913,  40167) | 
Info: [ 40167,  44421) | 
Info: [ 44421,  48675) | 
Info: [ 48675,  52929) | 
Info: [ 52929,  57183) | 
Info: [ 57183,  61437) | 
Info: [ 61437,  65691) | 
Info: [ 65691,  69945) | 
Info: [ 69945,  74199) | 
Info: [ 74199,  78453) |*****+
Info: [ 78453,  82707) |*************************************+
Info: Checksum: 0x9061a94c
Info: Routing globals...
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 0
Info:     routing clock net $glbnet$clk_pll using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 5575 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        1        998 |    1   998 |      4577|       1.49       1.49|
Info:       2000 |        9       1990 |    8   992 |      3616|       0.84       2.33|
Info:       3000 |       26       2973 |   17   983 |      2637|       1.05       3.39|
Info:       4000 |       49       3950 |   23   977 |      1664|       1.01       4.40|
Info:       5000 |       58       4941 |    9   991 |       677|       1.07       5.47|
Info:       5694 |       71       5623 |   13   682 |         0|       1.28       6.74|
Info: Routing complete.
Info: Router1 time 6.74s
Info: Checksum: 0xb8842e74

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.delay_TRELLIS_FF_Q_12_SLICE.Q0
Info:  1.4  1.7    Net pulses.delay[3] budget 16.139000 ns (13,32) -> (11,39)
Info:                Sink pulses.p2start_TRELLIS_FF_Q_DI_CCU2C_S0_3$CCU2_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:71.20-71.25
Info:  0.3  2.0  Source pulses.p2start_TRELLIS_FF_Q_DI_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  2.0    Net pulses.p2start_TRELLIS_FF_Q_DI_CCU2C_S0_4_COUT[3] budget 0.000000 ns (11,39) -> (11,39)
Info:                Sink pulses.p2start_TRELLIS_FF_Q_DI_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:127.14-127.29
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  2.3  Source pulses.p2start_TRELLIS_FF_Q_DI_CCU2C_S0_2$CCU2_SLICE.F0
Info:  1.3  3.5    Net pulses.p2start_TRELLIS_FF_Q_DI[4] budget 16.138000 ns (11,39) -> (11,43)
Info:                Sink pulses.sync_down_TRELLIS_FF_Q_DI_CCU2C_S0_2$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:128.16-128.41
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:30.22-30.23
Info:  0.3  3.8  Source pulses.sync_down_TRELLIS_FF_Q_DI_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  3.8    Net pulses.sync_down_TRELLIS_FF_Q_DI_CCU2C_S0_4_COUT[5] budget 0.000000 ns (11,43) -> (12,43)
Info:                Sink pulses.sync_down_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:128.16-128.41
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  4.1  Source pulses.sync_down_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.F1
Info:  1.1  5.2    Net pulses.sync_down_TRELLIS_FF_Q_DI[7] budget 16.138000 ns (12,43) -> (12,44)
Info:                Sink pulses.block_on_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:128.16-128.41
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  5.5  Source pulses.block_on_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  5.5    Net pulses.block_on_TRELLIS_FF_Q_DI_CCU2C_S0_4_COUT[7] budget 0.000000 ns (12,44) -> (12,44)
Info:                Sink pulses.block_on_TRELLIS_FF_Q_DI_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:129.16-129.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  5.7  Source pulses.block_on_TRELLIS_FF_Q_DI_CCU2C_S0$CCU2_SLICE.F0
Info:  1.3  7.0    Net pulses.block_on_TRELLIS_FF_Q_DI[8] budget 16.138000 ns (12,44) -> (15,44)
Info:                Sink pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:129.16-129.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  7.3  Source pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  7.3    Net pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1_COUT[9] budget 0.000000 ns (15,44) -> (15,44)
Info:                Sink pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:129.16-129.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  7.4  Source pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  7.4    Net pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1_COUT[11] budget 0.000000 ns (15,44) -> (15,44)
Info:                Sink pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:129.16-129.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  7.4  Source pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  7.4    Net pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1_COUT[13] budget 0.000000 ns (15,44) -> (16,44)
Info:                Sink pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:129.16-129.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  7.7  Source pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.F1
Info:  0.1  7.8    Net pulses.block_off_TRELLIS_FF_Q_DI[15] budget 16.138000 ns (16,44) -> (16,44)
Info:                Sink pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.DI1
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:129.16-129.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.0  7.8  Setup pulses.block_off_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.DI1
Info: 2.6 ns logic, 5.2 ns routing

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.Q1
Info:  1.5  1.8    Net pulses.counter[29] budget 0.000000 ns (14,35) -> (17,45)
Info:                Sink pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_SD_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.C1
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:48.18-48.25
Info:  0.2  2.1  Source pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_SD_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  2.1    Net pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_SD_L6MUX21_Z_1_D1 budget 0.000000 ns (17,45) -> (17,45)
Info:                Sink pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_SD_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  2.2  Source pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_SD_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.OFX1
Info:  0.4  2.6    Net pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_SD[2] budget 0.000000 ns (17,45) -> (19,45)
Info:                Sink pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_D1_PFUMX_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  2.9  Source pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  2.9    Net pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_D1 budget 0.000000 ns (19,45) -> (19,45)
Info:                Sink pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  3.0  Source pulses.block_LUT4_D_A_LUT4_Z_B_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.7  3.7    Net pulses.block_LUT4_D_A_LUT4_Z_B[2] budget 0.000000 ns (19,45) -> (19,39)
Info:                Sink pulses.cw_LUT4_B_D_LUT4_C_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  4.0  Source pulses.cw_LUT4_B_D_LUT4_C_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  4.0    Net pulses.cw_LUT4_B_D_LUT4_C_Z_L6MUX21_Z_1_D1 budget 0.000000 ns (19,39) -> (19,39)
Info:                Sink pulses.cw_LUT4_B_D_LUT4_C_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  4.1  Source pulses.cw_LUT4_B_D_LUT4_C_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.OFX1
Info:  0.8  4.9    Net pulses.cw_LUT4_B_D_LUT4_C_Z[4] budget 0.000000 ns (19,39) -> (20,39)
Info:                Sink pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  5.1  Source pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  5.1    Net pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D0 budget 0.000000 ns (20,39) -> (20,39)
Info:                Sink pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.58-158.60
Info:  0.1  5.2  Source pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  5.2    Net pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1 budget 0.000000 ns (20,39) -> (20,39)
Info:                Sink pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  5.3  Source pulses.ccount_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  1.4  6.7    Net pulses.ccount_TRELLIS_FF_Q_CE budget 0.701000 ns (20,39) -> (21,47)
Info:                Sink pulses.cblock_delay_TRELLIS_FF_Q_11_SLICE.CE
Info:  0.0  6.7  Setup pulses.cblock_delay_TRELLIS_FF_Q_11_SLICE.CE
Info: 1.9 ns logic, 4.8 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  2.4  2.4    Net RS232_Rx$TRELLIS_IO_IN budget 0.000000 ns (0,92) -> (4,44)
Info:                Sink RS232_Rx_LUT4_C_2_SLICE.C0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:78.7-90.4
Info:  0.1  2.6  Source RS232_Rx_LUT4_C_2_SLICE.F0
Info:  0.8  3.4    Net RS232_Rx_LUT4_B_Z[1] budget 0.000000 ns (4,44) -> (4,51)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.6  Source control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  3.6    Net control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D1 budget 0.000000 ns (4,51) -> (4,51)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.62-158.64
Info:  0.1  3.8  Source control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  3.8    Net control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1 budget 0.000000 ns (4,51) -> (4,51)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  3.9  Source control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.8  4.8    Net control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D[2] budget 16.218000 ns (4,51) -> (2,48)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_LUT4_A_SLICE.C0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  4.9  Source control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_LUT4_A_SLICE.F0
Info:  0.1  5.0    Net RS232_Rx_LUT4_A_Z_LUT4_D_Z[0] budget 16.218000 ns (2,48) -> (2,48)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_LUT4_A_SLICE.DI0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:0.0-0.0
Info:                  uart.v:155.9-258.16
Info:                  pulse_control.v:78.7-90.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  5.0  Setup control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_D_LUT4_A_SLICE.DI0
Info: 0.8 ns logic, 4.2 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.0  0.0  Source resetn$tr_io.O
Info:  1.4  1.4    Net resetn$TRELLIS_IO_IN budget 0.000000 ns (0,47) -> (14,38)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:5.9-5.15
Info:  0.1  1.5  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.F1
Info:  0.9  2.4    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D[6] budget 0.606000 ns (14,38) -> (9,39)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.M1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.6  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  1.2  3.8    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z[5] budget 0.606000 ns (9,39) -> (13,50)
Info:                Sink pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_SLICE.M1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.9  Source pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.2  4.1    Net pulses.sync_TRELLIS_FF_Q_CE budget 0.605000 ns (13,50) -> (13,50)
Info:                Sink pulses.sync_TRELLIS_FF_Q_DI_PFUMX_Z_SLICE.CE
Info:  0.0  4.1  Setup pulses.sync_TRELLIS_FF_Q_DI_PFUMX_Z_SLICE.CE
Info: 0.4 ns logic, 3.7 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.transmit_LUT4_B_A_LUT4_Z_1_SLICE.Q1
Info:  2.8  3.1    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (6,42) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:105.9-105.15
Info:                  pulse_control.v:78.7-90.4
Info: 0.3 ns logic, 2.8 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.3  0.3  Source pulses.cpmg_TRELLIS_FF_Q_4_SLICE.Q0
Info:  1.2  1.5    Net pulses.cpmg[3] budget 0.000000 ns (15,30) -> (16,31)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_S0_CCU2C_S1$CCU2_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:75.20-75.24
Info:  0.3  1.8  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_S0_CCU2C_S1$CCU2_SLICE.FCO
Info:  0.0  1.8    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_COUT[4] budget 0.000000 ns (16,31) -> (16,31)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:210.26-210.34
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:65.22-65.25
Info:  0.0  1.8  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1$CCU2_SLICE.FCO
Info:  0.0  1.8    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_COUT[6] budget 0.000000 ns (16,31) -> (17,31)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:210.26-210.34
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:65.22-65.25
Info:  0.3  2.1  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_S0_CCU2C_S0$CCU2_SLICE.F1
Info:  0.4  2.5    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_CCU2C_S1_S0[7] budget 0.485000 ns (17,31) -> (17,31)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_PFUMX_Z_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:210.26-210.34
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:65.27-65.29
Info:  0.2  2.8  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0_PFUMX_Z_SLICE.OFX0
Info:  0.6  3.4    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_C0[2] budget 0.401000 ns (17,31) -> (17,30)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.6  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C_PFUMX_Z_SLICE.OFX0
Info:  0.5  4.1    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_C[2] budget 0.401000 ns (17,30) -> (17,32)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_SLICE.D0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  4.3  Source pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z_LUT4_Z_SLICE.F0
Info:  1.7  6.0    Net pulses.pulses_TRELLIS_FF_Q_CE_LUT4_Z_D_L6MUX21_SD_Z[2] budget 0.401000 ns (17,32) -> (13,50)
Info:                Sink pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D0_PFUMX_Z_SLICE.A1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  6.2  Source pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  6.2    Net pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D0 budget 0.000000 ns (13,50) -> (13,50)
Info:                Sink pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.34-142.36
Info:  0.1  6.3  Source pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.2  6.6    Net pulses.sync_TRELLIS_FF_Q_CE budget 0.605000 ns (13,50) -> (13,50)
Info:                Sink pulses.sync_TRELLIS_FF_Q_DI_PFUMX_Z_SLICE.CE
Info:  0.0  6.6  Setup pulses.sync_TRELLIS_FF_Q_DI_PFUMX_Z_SLICE.CE
Info: 1.9 ns logic, 4.7 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.sync_TRELLIS_FF_Q_DI_PFUMX_Z_SLICE.Q0
Info:  4.7  5.0    Net Sync$TRELLIS_IO_OUT budget 83.024002 ns (13,50) -> (126,41)
Info:                Sink Sync$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:41.13-41.20
Info: 0.3 ns logic, 4.7 ns routing

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 128.65 MHz (PASS at 12.00 MHz)
ERROR: Max frequency for clock           '$glbnet$clk_pll': 149.61 MHz (FAIL at 200.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 5.01 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 4.15 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 3.14 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 6.57 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 4.99 ns

Info: Slack histogram:
Info:  legend: * represents 13 endpoint(s)
Info:          + represents [1,13) endpoint(s)
Info: [ -1684,   2538) |************************************************************ 
Info: [  2538,   6760) |********+
Info: [  6760,  10982) | 
Info: [ 10982,  15204) | 
Info: [ 15204,  19426) | 
Info: [ 19426,  23648) | 
Info: [ 23648,  27870) | 
Info: [ 27870,  32092) | 
Info: [ 32092,  36314) | 
Info: [ 36314,  40536) | 
Info: [ 40536,  44758) | 
Info: [ 44758,  48980) | 
Info: [ 48980,  53202) | 
Info: [ 53202,  57424) | 
Info: [ 57424,  61646) | 
Info: [ 61646,  65868) | 
Info: [ 65868,  70090) | 
Info: [ 70090,  74312) | 
Info: [ 74312,  78534) |******+
Info: [ 78534,  82756) |************************************+
0 warnings, 1 error
Makefile:23: recipe for target 'pulse_gen_out.config' failed
make: *** [pulse_gen_out.config] Error 1
rm pulse_gen_out.config pulse_gen.json
