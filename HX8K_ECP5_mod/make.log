yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$244'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$324 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$69 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$69 in module uart.
Removed 1 dead cases from process $proc$pulse_control.v:126$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:126$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 52 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$328'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$98'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$97'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$96'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:80$61'.
  Set init value: \period = 24'000000000000000110001000
Found init rule in `\pulses.$proc$pulses.v:53$60'.
  Set init value: \cw = 1'0
Found init rule in `\pulses.$proc$pulses.v:46$58'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:123$41'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:108$40'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:107$39'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:105$37'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:37$36'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:36$35'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:35$34'.
  Set init value: \cpmg = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:34$33'.
  Set init value: \p2width = 16'0000000000111100
Found init rule in `\pulse_control.$proc$pulse_control.v:33$32'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:32$31'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:31$30'.
  Set init value: \period = 24'000000000000000110001000

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$328'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$324'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$321'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$300'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$299_EN[3:0]$303
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$299_DATA[3:0]$302
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$299_ADDR[3:0]$301
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$267'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$245'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$243_EN[3:0]$248
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$243_DATA[3:0]$247
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$243_ADDR[3:0]$246
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$244'.
Creating decoders for process `\uart.$proc$uart.v:106$98'.
Creating decoders for process `\uart.$proc$uart.v:105$97'.
Creating decoders for process `\uart.$proc$uart.v:101$96'.
Creating decoders for process `\uart.$proc$uart.v:135$69'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:86$62'.
Creating decoders for process `\pulses.$proc$pulses.v:80$61'.
Creating decoders for process `\pulses.$proc$pulses.v:53$60'.
Creating decoders for process `\pulses.$proc$pulses.v:52$59'.
Creating decoders for process `\pulses.$proc$pulses.v:46$58'.
Creating decoders for process `\pulses.$proc$pulses.v:152$53'.
     1/3: $0\inh[0:0]
     2/3: $0\pulse[0:0]
     3/3: $0\sync[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:119$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:123$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:108$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:107$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:106$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:105$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:36$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:35$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:34$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:33$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:32$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:31$30'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:126$3'.
     1/28: $2\rx_done[0:0]
     2/28: $4$bitselwrite$data$pulse_control.v:142$2[31:0]$14
     3/28: $4$bitselwrite$mask$pulse_control.v:142$1[31:0]$13
     4/28: $4\vinput[31:0]
     5/28: $3$bitselwrite$data$pulse_control.v:142$2[31:0]$11
     6/28: $3$bitselwrite$mask$pulse_control.v:142$1[31:0]$10
     7/28: $3\vinput[31:0]
     8/28: $2$bitselwrite$data$pulse_control.v:142$2[31:0]$9
     9/28: $2$bitselwrite$mask$pulse_control.v:142$1[31:0]$8
    10/28: $2\vinput[31:0]
    11/28: $1$bitselwrite$data$pulse_control.v:142$2[31:0]$7
    12/28: $1$bitselwrite$mask$pulse_control.v:142$1[31:0]$6
    13/28: $1\vinput[31:0]
    14/28: $1\voutput[7:0]
    15/28: $1\rx_done[0:0]
    16/28: $0\state[2:0]
    17/28: $0\readcount[5:0]
    18/28: $0\readstate[1:0]
    19/28: $0\writestate[0:0]
    20/28: $0\vcontrol[7:0]
    21/28: $0\tx_byte[7:0]
    22/28: $0\transmit[0:0]
    23/28: $0\cpmg[0:0]
    24/28: $0\block[0:0]
    25/28: $0\p2width[15:0]
    26/28: $0\delay[15:0]
    27/28: $0\p1width[15:0]
    28/28: $0\period[23:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\pulse_block' from process `\pulses.$proc$pulses.v:86$62'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:52$59'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:106$38'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$324'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$321'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$299_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$300'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$299_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$300'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$299_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$300'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$267'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$243_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$245'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$243_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$245'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$243_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$245'.
  created $dff cell `$procdff$1186' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$244'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1187' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1188' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1189' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1190' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1191' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$69'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:152$53'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:152$53'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:152$53'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:152$53'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\pulses.\cw' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:119$42'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:142$1' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:142$2' using process `\pulse_control.$proc$pulse_control.v:126$3'.
  created $dff cell `$procdff$1229' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$328'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$324'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$324'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$321'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$300'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$300'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$267'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$245'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$245'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$244'.
Removing empty process `uart.$proc$uart.v:106$98'.
Removing empty process `uart.$proc$uart.v:105$97'.
Removing empty process `uart.$proc$uart.v:101$96'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$69'.
Removing empty process `uart.$proc$uart.v:135$69'.
Removing empty process `pulses.$proc$pulses.v:86$62'.
Removing empty process `pulses.$proc$pulses.v:80$61'.
Removing empty process `pulses.$proc$pulses.v:53$60'.
Removing empty process `pulses.$proc$pulses.v:52$59'.
Removing empty process `pulses.$proc$pulses.v:46$58'.
Found and cleaned up 1 empty switch in `\pulses.$proc$pulses.v:152$53'.
Removing empty process `pulses.$proc$pulses.v:152$53'.
Removing empty process `pulses.$proc$pulses.v:119$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:123$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:108$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:107$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:106$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:105$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:36$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:35$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:34$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:33$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:32$31'.
Removing empty process `pulse_control.$proc$pulse_control.v:31$30'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:126$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:126$3'.
Cleaned up 31 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~81 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 88 unused cells and 320 unused wires.
<suppressed ~100 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~399 debug messages>
Removed a total of 133 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1087: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1085: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1089: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$422.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$429.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$437.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$445.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$453.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$461.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$469.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$502.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$512.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$514.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$524.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$526.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$536.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$538.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$547.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$556.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$565.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$574.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$583.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$592.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$603.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$605.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$615.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$625.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$635.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$645.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$657.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$659.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$671.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$673.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$685.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$687.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$699.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$701.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$713.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$715.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$726.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$737.
    dead port 2/2 on $mux $flatten\control.$procmux$939.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$748.
    dead port 2/2 on $mux $flatten\control.$procmux$941.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$759.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$770.
    dead port 2/2 on $mux $flatten\control.$procmux$943.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$782.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$794.
    dead port 2/2 on $mux $flatten\control.$procmux$977.
    dead port 2/2 on $mux $flatten\control.$procmux$1006.
    dead port 2/2 on $mux $flatten\control.$procmux$979.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$352.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$354.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$362.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$364.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$372.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$374.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$382.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$384.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$392.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$394.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$401.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$408.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$415.
Removed 62 multiplexer ports.
<suppressed ~27 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$471: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP $auto$opt_reduce.cc:134:opt_mux$1231 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1053: { $flatten\control.$procmux$1007_CMP $auto$opt_reduce.cc:134:opt_mux$1233 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$476: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP $auto$opt_reduce.cc:134:opt_mux$1235 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$486: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP $auto$opt_reduce.cc:134:opt_mux$1237 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$491: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP $auto$opt_reduce.cc:134:opt_mux$1239 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$805: { $flatten\control.\uart0.$procmux$783_CMP $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$606_CMP $flatten\control.\uart0.$procmux$515_CMP $flatten\control.\uart0.$procmux$799_CMP $auto$opt_reduce.cc:134:opt_mux$1241 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$814: { $flatten\control.\uart0.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_mux$1243 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$823: { $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_mux$1245 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$832: { $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$606_CMP $flatten\control.\uart0.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_mux$1247 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$841: { $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$606_CMP $flatten\control.\uart0.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_mux$1249 }
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1206 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1205 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1204 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1203 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 16 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 17 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 18 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 19 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 20 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 21 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 22 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.
Setting constant 0-bit at position 23 on $flatten\pulses.$procdff$1202 ($dff) from module pulse_gen.

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 198 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~4 debug messages>

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Rerunning OPT passes. (Maybe there is more to do..)

6.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1209 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1208 ($dff) from module pulse_gen.

6.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~4 debug messages>

6.11.23. Rerunning OPT passes. (Maybe there is more to do..)

6.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.27. Executing OPT_DFF pass (perform DFF optimizations).

6.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

6.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.30. Rerunning OPT passes. (Maybe there is more to do..)

6.11.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1211 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 16 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 17 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 18 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 19 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 20 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 21 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 22 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.
Setting constant 0-bit at position 23 on $flatten\pulses.$procdff$1210 ($dff) from module pulse_gen.

6.11.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.37. Rerunning OPT passes. (Maybe there is more to do..)

6.11.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.41. Executing OPT_DFF pass (perform DFF optimizations).

6.11.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.44. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\pulses.$procdff$1201 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$870_Y, Q = \pulses.inh, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$1250 ($sdff) from module pulse_gen (D = $flatten\pulses.$procmux$864_Y, Q = \pulses.inh).
Adding SRST signal on $flatten\pulses.$procdff$1200 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$880_Y, Q = \pulses.pulse, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$1262 ($sdff) from module pulse_gen (D = $flatten\pulses.$procmux$880_Y, Q = \pulses.pulse).
Adding SRST signal on $flatten\pulses.$procdff$1199 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$890_Y, Q = \pulses.sync, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$1266 ($sdff) from module pulse_gen (D = 1'0, Q = \pulses.sync).
Adding SRST signal on $flatten\pulses.$procdff$1198 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:213$56_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\control.\uart0.$procdff$1197 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1196 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1195 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1194 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1193 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1192 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1191 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1188 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1187 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1227 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1226 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1225 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1073_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1224 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1223 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:159$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1221 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1220 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1219 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 19 unused cells and 19 unused wires.
<suppressed ~20 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~13 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$471: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$476: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$486: { $flatten\control.\uart0.$procmux$438_CMP $flatten\control.\uart0.$procmux$355_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$814: $flatten\control.\uart0.$procmux$515_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$823: { $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$515_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$832: { $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$606_CMP $flatten\control.\uart0.$procmux$515_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$841: { $flatten\control.\uart0.$procmux$660_CMP $flatten\control.\uart0.$procmux$606_CMP $flatten\control.\uart0.$procmux$515_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 7 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1373 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1379 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1383 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1401 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$81 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$83 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$87 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$94 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$355_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$360 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$370 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1280 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$390 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$399 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$406 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$413 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$420 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$435 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$443 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$451 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$467 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$500 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$515_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$522 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$545 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$563 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$572 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$581 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$590 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$601 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$606_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$613 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$623 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$643 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$655 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$660_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$669 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$697 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$724 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$735 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$757 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$768 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$780 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$814 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1123 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1119 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1079 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1077 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1074_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1071 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1064 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1062 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1049 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1047 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1045 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1039_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1035 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1031 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1026_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:143$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:143$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 2 bits (of 6) from FF cell pulse_gen.$flatten\pulses.$procdff$1202 ($dff).
Removed cell pulse_gen.$flatten\pulses.$procmux$876 ($mux).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$871_CMP0 ($eq).
Removed top 25 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$869_CMP0 ($eq).
Removed top 24 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$867_CMP0 ($eq).
Removed top 24 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$865_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$862 ($mux).
Removed top 24 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$863_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:213$56 ($add).
Removed top 10 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:213$55 ($lt).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:143$23_Y.
Removed top 24 bits (of 32) from wire pulse_gen.$flatten\control.$and$pulse_control.v:0$17_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1077_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$81_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$87_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$94_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~66 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:143$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:159$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:159$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:159$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$78 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$71 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$73 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$79 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$84 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$92 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:213$56 ($add).
  merging $macc model for $flatten\control.$add$pulse_control.v:159$26 into $flatten\control.$add$pulse_control.v:159$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:159$25 into $flatten\control.$add$pulse_control.v:159$27.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$84.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$79.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$73.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$71.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$78.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$92.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:213$56.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:143$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:159$27: $auto$alumacc.cc:365:replace_macc$1446
  creating $alu model for $flatten\pulses.$lt$pulses.v:213$55 ($lt): new $alu
  creating $alu cell for $flatten\pulses.$lt$pulses.v:213$55: $auto$alumacc.cc:485:replace_alu$1448
  creating $alu cell for $flatten\control.$add$pulse_control.v:143$23: $auto$alumacc.cc:485:replace_alu$1459
  creating $alu cell for $flatten\pulses.$add$pulses.v:213$56: $auto$alumacc.cc:485:replace_alu$1462
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$92: $auto$alumacc.cc:485:replace_alu$1465
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$78: $auto$alumacc.cc:485:replace_alu$1468
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$71: $auto$alumacc.cc:485:replace_alu$1471
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$73: $auto$alumacc.cc:485:replace_alu$1474
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$79: $auto$alumacc.cc:485:replace_alu$1477
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$84: $auto$alumacc.cc:485:replace_alu$1480
  created 9 $alu and 1 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$832: { $flatten\control.\uart0.$procmux$606_CMP $auto$opt_reduce.cc:134:opt_mux$1484 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$841: { $flatten\control.\uart0.$procmux$606_CMP $auto$opt_reduce.cc:134:opt_mux$1486 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 3 unused cells and 5 unused wires.
<suppressed ~4 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~79 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1431 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1121_Y, Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1407 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1087_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1404 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1434 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1395 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1432 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1371 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1356 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1330 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1312 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1296 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1285 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 12 unused wires.
<suppressed ~10 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1033:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1033_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1033_Y [1]
      New connections: { $flatten\control.$procmux$1033_Y [2] $flatten\control.$procmux$1033_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1073:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1434 [0] }, B=2'00, Y=$flatten\control.$procmux$1073_Y
      New ports: A=$auto$wreduce.cc:454:run$1434 [0], B=1'0, Y=$flatten\control.$procmux$1073_Y [0]
      New connections: $flatten\control.$procmux$1073_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$360:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1437 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1437 [9] $auto$wreduce.cc:454:run$1437 [1] }
      New connections: { $auto$wreduce.cc:454:run$1437 [8:2] $auto$wreduce.cc:454:run$1437 [0] } = { 1'0 $auto$wreduce.cc:454:run$1437 [1] $auto$wreduce.cc:454:run$1437 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$510:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$522:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1439 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1439 [2] $auto$wreduce.cc:454:run$1439 [0] }
      New connections: { $auto$wreduce.cc:454:run$1439 [9:3] $auto$wreduce.cc:454:run$1439 [1] } = { $auto$wreduce.cc:454:run$1439 [0] $auto$wreduce.cc:454:run$1439 [2] $auto$wreduce.cc:454:run$1439 [2] 1'1 $auto$wreduce.cc:454:run$1439 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$534:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$683:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$89:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$89_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$89_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$89_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$89_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$95:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$95_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$95_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$95_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$95_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1038:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1033_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1033_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1404 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1386 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~1902 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~907 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~795 debug messages>
Removed a total of 265 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$1987 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$1987 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$1988 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$1988 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$1989 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$1989 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 132 unused cells and 915 unused wires.
<suppressed ~133 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2004 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$481.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2003 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$481.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$1802 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1038.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$1801 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1038.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$1699 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$796.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$1698 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$796.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$1697 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$796.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$1644 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~299 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 789 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 974 gates and 1148 wires to a netlist network with 172 inputs and 164 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     187.
ABC: Participating nodes from both networks       =     461.
ABC: Participating nodes from the first network   =     206. (  78.03 % of nodes)
ABC: Participating nodes from the second network  =     255. (  96.59 % of nodes)
ABC: Node pairs (any polarity)                    =     206. (  78.03 % of names can be moved)
ABC: Node pairs (same polarity)                   =     192. (  72.73 % of names can be moved)
ABC: Total runtime =     0.05 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      263
ABC RESULTS:        internal signals:      812
ABC RESULTS:           input signals:      172
ABC RESULTS:          output signals:      164
Removing temp directory.
Removed 0 unused cells and 572 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65536 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1073741824 for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod$fcd45dac87ecaf8167f012f6f6d6fa7b369dedb8\$lut for cells of type $lut.
Using template $paramod$57619346c001bba14f685682aaa48a843cd5a7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=268372539 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod$1929d44748517239e36a599c0facfb62ddb99607\$lut for cells of type $lut.
Using template $paramod$b5cd238a527d851ba52055b76f8b8313ff4d0a1d\$lut for cells of type $lut.
Using template $paramod$c26a8386944aae657bfabb64a6f5264bb0fe67d3\$lut for cells of type $lut.
Using template $paramod$5ff4e785518ec01230bd2a7eb195ddd886127ca5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11000000010101011111111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000000011111000100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod$629bea346f0daddb39cb1ebf17c36b3d1144d5d1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111010100110000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod$d15f39da4cdda7162c5b1d8de7c7e77e72dbe4aa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000000000000 for cells of type $lut.
Using template $paramod$05b7e8229d9a7a31e653ac7a3cef172aa16e73f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=44803 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000001111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100010001111111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65408 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101111000011110000111100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~1403 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut4 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut5 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut6 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$6013.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5994.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5994.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5942.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5942.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5878.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5884.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5882.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5882.lut2 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5882.lut3 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut4 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut5 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut6 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut4 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut5 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut6 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5858.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5858.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5868.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5873.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5894.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5894.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut4 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut5 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut6 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5889.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5890.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5892.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5891.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5891.lut2 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5891.lut3 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut2 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut3 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut4 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut5 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut6 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut7 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5858.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5868.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5862.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5863.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5868.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5874.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5894.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5897.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5912.lut0 (4 -> 2)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5883.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5915.lut0 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5917.lut0 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5912.lut1 (4 -> 3)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5917.lut1 (4 -> 2)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5888.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5930.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5941.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5942.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5952.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5953.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5966.lut0 (4 -> 1)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5975.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5983.lut1 (4 -> 2)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5985.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5984.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5986.lut0 (4 -> 1)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5994.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$5877.lut1 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$6016.lut0 (4 -> 0)
  Optimizing lut $abc$5856$auto$blifparse.cc:498:parse_blif$6022.lut1 (4 -> 0)
Removed 0 unused cells and 535 unused wires.

6.47. Executing AUTONAME pass.
Renamed 11767 objects in module pulse_gen (81 iterations).
<suppressed ~1087 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:                495
   Number of wire bits:           1618
   Number of public wires:         495
   Number of public wire bits:    1618
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                687
     CCU2C                          50
     EHXPLLL                         1
     L6MUX21                        34
     LUT4                          362
     PFUMX                          83
     TRELLIS_FF                    157

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: ea65b7ca0c, CPU: user 4.03s system 0.38s, MEM: 249.83 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 26% 18x read_verilog (1 sec), 21% 8x techmap (1 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 12.00 MHz
Info: constraining clock net 'clk_pll' to 100.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:       462/83640     0%
Info:         logic LUTs:    362/83640     0%
Info:         carry LUTs:    100/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:       314/83640     0%

Info: Packing IOs..
Info: pin 'Block$tr_io' constrained to Bel 'X126/Y92/PIOB'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y92/PIOC'.
Info: pin 'Pulse2$tr_io' constrained to Bel 'X126/Y41/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y83/PIOD'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'icepll.pll_i' is constrained to 12.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info:     promoting clock net clk_pll to global network
Info: Checksum: 0x63716b31

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x83ac2ba7

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:   283/41820     0%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 194 cells, random placement wirelen = 36488.
Info:     at initial placer iter 0, wirelen = 815
Info:     at initial placer iter 1, wirelen = 632
Info:     at initial placer iter 2, wirelen = 639
Info:     at initial placer iter 3, wirelen = 629
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 639, spread = 1910, legal = 2013; time = 0.05s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 704, spread = 1713, legal = 1908; time = 0.05s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 751, spread = 1649, legal = 1746; time = 0.05s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 829, spread = 1582, legal = 1695; time = 0.03s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 848, spread = 1570, legal = 1719; time = 0.04s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 850, spread = 1559, legal = 1665; time = 0.05s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 883, spread = 1534, legal = 1656; time = 0.05s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 922, spread = 1522, legal = 1673; time = 0.05s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 953, spread = 1537, legal = 1738; time = 0.05s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 973, spread = 1673, legal = 1813; time = 0.05s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 1037, spread = 1574, legal = 1721; time = 0.03s
Info:     at iteration #12, type TRELLIS_SLICE: wirelen solved = 1046, spread = 1665, legal = 1813; time = 0.05s
Info: HeAP Placer Time: 0.83s
Info:   of which solving equations: 0.52s
Info:   of which spreading cells: 0.05s
Info:   of which strict legalisation: 0.02s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 27, wirelen = 1656
Info:   at iteration #5: temp = 0.000000, timing cost = 32, wirelen = 1419
Info:   at iteration #10: temp = 0.000000, timing cost = 28, wirelen = 1343
Info:   at iteration #15: temp = 0.000000, timing cost = 30, wirelen = 1306
Info:   at iteration #19: temp = 0.000000, timing cost = 28, wirelen = 1303 
Info: SA placement time 0.77s

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 175.38 MHz (PASS at 12.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 270.20 MHz (PASS at 100.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 3.68 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 1.60 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 3.66 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 3.17 ns

Info: Slack histogram:
Info:  legend: * represents 3 endpoint(s)
Info:          + represents [1,3) endpoint(s)
Info: [  6299,  10120) |********************+
Info: [ 10120,  13941) | 
Info: [ 13941,  17762) | 
Info: [ 17762,  21583) | 
Info: [ 21583,  25404) | 
Info: [ 25404,  29225) | 
Info: [ 29225,  33046) | 
Info: [ 33046,  36867) | 
Info: [ 36867,  40688) | 
Info: [ 40688,  44509) | 
Info: [ 44509,  48330) | 
Info: [ 48330,  52151) | 
Info: [ 52151,  55972) | 
Info: [ 55972,  59793) | 
Info: [ 59793,  63614) | 
Info: [ 63614,  67435) | 
Info: [ 67435,  71256) | 
Info: [ 71256,  75077) | 
Info: [ 75077,  78898) |*************+
Info: [ 78898,  82719) |************************************************************ 
Info: Checksum: 0x408891a2
Info: Routing globals...
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 0
Info:     routing clock net $glbnet$clk_pll using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 1642 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        3        996 |    3   996 |       646|       0.68       0.68|
Info:       1648 |        5       1643 |    2   647 |         0|       0.70       1.38|
Info: Routing complete.
Info: Router1 time 1.38s
Info: Checksum: 0xb4535d9e

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.Q1
Info:  0.8  1.1    Net control.uart0.rx_clk[8] budget 13.480000 ns (6,85) -> (5,83)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:70.18-85.9
Info:                  uart.v:98.39-98.45
Info:                  pulse_control.v:77.9-89.9
Info:  0.2  1.3  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  1.3    Net RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D0_L6MUX21_Z_D0 budget 0.000000 ns (5,83) -> (5,83)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.50-158.52
Info:  0.1  1.5  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  1.5    Net RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D0 budget 0.000000 ns (5,83) -> (5,83)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.66-158.68
Info:  0.1  1.6  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  1.2  2.8    Net RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D[1] budget 13.480000 ns (5,83) -> (3,86)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_PFUMX_C0_Z_LUT4_Z_SLICE.A0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.9  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_D_PFUMX_C0_Z_LUT4_Z_SLICE.F0
Info:  0.8  3.7    Net RS232_Rx_LUT4_B_Z[4] budget 13.480000 ns (3,86) -> (3,83)
Info:                Sink RS232_Rx_LUT4_A_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.9  Source RS232_Rx_LUT4_A_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  3.9    Net RS232_Rx_LUT4_A_Z_L6MUX21_Z_D1 budget 0.000000 ns (3,83) -> (3,83)
Info:                Sink RS232_Rx_LUT4_A_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  4.1  Source RS232_Rx_LUT4_A_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.9  5.0    Net RS232_Rx_LUT4_A_Z[4] budget 16.319000 ns (3,83) -> (6,86)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.1  Source control.uart0.rx_data_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.F1
Info:  1.1  6.2    Net control.uart0.rx_data_TRELLIS_FF_Q_CE budget 16.319000 ns (6,86) -> (8,83)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_2_SLICE.CE
Info:  0.0  6.2  Setup control.uart0.rx_data_TRELLIS_FF_Q_2_SLICE.CE
Info: 1.5 ns logic, 4.7 ns routing

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_15$CCU2_SLICE.Q0
Info:  0.7  1.0    Net pulses.counter[0] budget 0.000000 ns (120,79) -> (120,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_14$CCU2_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.3  1.3  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_14$CCU2_SLICE.FCO
Info:  0.0  1.3    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[2] budget 0.000000 ns (120,80) -> (120,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[4] budget 0.000000 ns (120,80) -> (120,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[6] budget 0.000000 ns (120,80) -> (121,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[8] budget 0.000000 ns (121,80) -> (121,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[10] budget 0.000000 ns (121,80) -> (121,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_13$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_13$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[12] budget 0.000000 ns (121,80) -> (121,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_12$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_12$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[14] budget 0.000000 ns (121,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_11$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_11$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[16] budget 0.000000 ns (122,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_10$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_10$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[18] budget 0.000000 ns (122,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[20] budget 0.000000 ns (122,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.8  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCO
Info:  0.0  1.8    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[22] budget 0.000000 ns (122,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.8  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  1.8    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[24] budget 0.000000 ns (123,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.8  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  1.8    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[26] budget 0.000000 ns (123,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.9  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  1.9    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[28] budget 0.000000 ns (123,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.9  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCO
Info:  0.0  1.9    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[30] budget 0.000000 ns (123,80) -> (124,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  2.0  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  2.0    Net $nextpnr_CCU2C_9$CIN budget 0.000000 ns (124,80) -> (124,80)
Info:                Sink $nextpnr_CCU2C_9$CCU2_SLICE.FCI
Info:  0.3  2.2  Source $nextpnr_CCU2C_9$CCU2_SLICE.F0
Info:  0.6  2.9    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z[4] budget 6.264000 ns (124,80) -> (122,78)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_C0_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.0  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_C0_SLICE.OFX0
Info:  0.4  3.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_C0_Z budget 1.627000 ns (122,78) -> (123,79)
Info:                Sink pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.LSR
Info:  0.2  3.7  Setup pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.LSR
Info: 1.9 ns logic, 1.8 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  1.2  1.2    Net RS232_Rx$TRELLIS_IO_IN budget 0.000000 ns (0,92) -> (3,86)
Info:                Sink RS232_Rx_LUT4_B_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:70.18-85.9
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:77.9-89.9
Info:  0.1  1.4  Source RS232_Rx_LUT4_B_SLICE.F0
Info:  0.4  1.8    Net RS232_Rx_LUT4_B_Z[2] budget 0.000000 ns (3,86) -> (3,86)
Info:                Sink RS232_Rx_LUT4_B_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.0  Source RS232_Rx_LUT4_B_SLICE.F1
Info:  0.7  2.7    Net RS232_Rx_LUT4_B_Z_LUT4_C_2_Z[4] budget 0.000000 ns (3,86) -> (5,85)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_2_Z_LUT4_C_SLICE.C0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.8  Source RS232_Rx_LUT4_B_Z_LUT4_C_2_Z_LUT4_C_SLICE.F0
Info:  0.5  3.3    Net RS232_Rx_LUT4_B_Z_LUT4_C_Z_LUT4_Z_6_C[4] budget 0.000000 ns (5,85) -> (6,85)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.4  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  3.4    Net RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1 budget 0.000000 ns (6,85) -> (6,85)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  3.5  Source RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.1  3.6    Net RS232_Rx_LUT4_B_Z_LUT4_C_Z[8] budget 27.118999 ns (6,85) -> (6,85)
Info:                Sink RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.DI1
Info:                Defined in:
Info:                  pulse_gen.v:70.18-85.9
Info:                  uart.v:0.0-0.0
Info:                  uart.v:155.9-258.16
Info:                  pulse_control.v:77.9-89.9
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  3.6  Setup RS232_Rx_LUT4_B_Z_LUT4_C_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.DI1
Info: 0.7 ns logic, 2.9 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_out_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q1
Info:  1.0  1.3    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (7,89) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:70.18-85.9
Info:                  uart.v:105.9-105.15
Info:                  pulse_control.v:77.9-89.9
Info: 0.3 ns logic, 1.0 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.3  0.3  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_LUT4_Z_1_SLICE.Q1
Info:  0.8  1.1    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_Z_C0[3] budget 0.000000 ns (122,78) -> (121,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_12$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:80.20-80.26
Info:  0.3  1.4  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_12$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[14] budget 0.000000 ns (121,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_11$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_11$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[16] budget 0.000000 ns (122,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_10$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_10$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[18] budget 0.000000 ns (122,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[20] budget 0.000000 ns (122,80) -> (122,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[22] budget 0.000000 ns (122,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[24] budget 0.000000 ns (123,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[26] budget 0.000000 ns (123,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[28] budget 0.000000 ns (123,80) -> (123,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT_S0_CCU2C_S0_COUT[30] budget 0.000000 ns (123,80) -> (124,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:213.15-213.38
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  1.7    Net $nextpnr_CCU2C_9$CIN budget 0.000000 ns (124,80) -> (124,80)
Info:                Sink $nextpnr_CCU2C_9$CCU2_SLICE.FCI
Info:  0.3  2.0  Source $nextpnr_CCU2C_9$CCU2_SLICE.F0
Info:  0.6  2.6    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z[4] budget 6.264000 ns (124,80) -> (122,78)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_C0_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  2.8  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_C0_SLICE.OFX0
Info:  0.4  3.2    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_D_LUT4_Z_C_LUT4_C_Z_PFUMX_C0_Z budget 1.627000 ns (122,78) -> (123,79)
Info:                Sink pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.LSR
Info:  0.2  3.5  Setup pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.LSR
Info: 1.6 ns logic, 1.9 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q0
Info:  1.9  2.2    Net Pulse2$TRELLIS_IO_OUT budget 83.024002 ns (123,77) -> (126,41)
Info:                Sink Pulse2$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:88.11-109.5
Info:                  pulses.v:40.19-40.27
Info: 0.3 ns logic, 1.9 ns routing

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 161.16 MHz (PASS at 12.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 271.30 MHz (PASS at 100.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 3.63 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 1.34 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 3.47 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 2.24 ns

Info: Slack histogram:
Info:  legend: * represents 3 endpoint(s)
Info:          + represents [1,3) endpoint(s)
Info: [  6314,  10130) |*********************+
Info: [ 10130,  13946) | 
Info: [ 13946,  17762) | 
Info: [ 17762,  21578) | 
Info: [ 21578,  25394) | 
Info: [ 25394,  29210) | 
Info: [ 29210,  33026) | 
Info: [ 33026,  36842) | 
Info: [ 36842,  40658) | 
Info: [ 40658,  44474) | 
Info: [ 44474,  48290) | 
Info: [ 48290,  52106) | 
Info: [ 52106,  55922) | 
Info: [ 55922,  59738) | 
Info: [ 59738,  63554) | 
Info: [ 63554,  67370) | 
Info: [ 67370,  71186) | 
Info: [ 71186,  75002) | 
Info: [ 75002,  78818) |*****************+
Info: [ 78818,  82634) |************************************************************ 
ecppack --svf pulse_gen.svf pulse_gen_out.config pulse_gen.bit
rm pulse_gen_out.config pulse_gen.json
