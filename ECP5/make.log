yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$318'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$398 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$143 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$143 in module uart.
Marked 1 switch rules as full_case in process $proc$pulses.v:139$59 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:133$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:133$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 67 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$402'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$172'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$171'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$170'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:99$136'.
  Set init value: \xfer_bits = 2'01
Found init rule in `\pulses.$proc$pulses.v:93$135'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:89$134'.
  Set init value: \nutation_pulse_delay = 16'0000000100101100
Found init rule in `\pulses.$proc$pulses.v:88$133'.
  Set init value: \nutation_pulse_width = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:84$131'.
  Set init value: \block_on = 16'0000000111001100
Found init rule in `\pulses.$proc$pulses.v:83$130'.
  Set init value: \block_off = 16'0000000110011010
Found init rule in `\pulses.$proc$pulses.v:82$129'.
  Set init value: \sync_down = 16'0000000100000100
Found init rule in `\pulses.$proc$pulses.v:81$128'.
  Set init value: \p2start = 16'0000000011100110
Found init rule in `\pulses.$proc$pulses.v:79$127'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulses.$proc$pulses.v:78$126'.
  Set init value: \block = 1'1
Found init rule in `\pulses.$proc$pulses.v:77$125'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulses.$proc$pulses.v:76$124'.
  Set init value: \pulse_block_off = 16'0000000001100100
Found init rule in `\pulses.$proc$pulses.v:75$123'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:74$122'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:73$121'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulses.$proc$pulses.v:72$120'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:71$119'.
  Set init value: \period = 24'000000010000000000000000
Found init rule in `\pulses.$proc$pulses.v:70$118'.
  Set init value: \pump = 1'1
Found init rule in `\pulses.$proc$pulses.v:49$116'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:130$47'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:113$46'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:112$45'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:110$43'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:48$42'.
  Set init value: \nut_wid = 8'01100100
Found init rule in `\pulse_control.$proc$pulse_control.v:47$41'.
  Set init value: \nut_del = 16'0000000001100100
Found init rule in `\pulse_control.$proc$pulse_control.v:46$40'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:45$39'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:44$38'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulse_control.$proc$pulse_control.v:42$36'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:41$35'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:40$34'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:39$33'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:38$32'.
  Set init value: \period = 24'000011110000000000000000
Found init rule in `\pulse_control.$proc$pulse_control.v:37$31'.
  Set init value: \pump = 1'1

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$402'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$398'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$395'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$374'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$373_EN[3:0]$377
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$373_DATA[3:0]$376
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$373_ADDR[3:0]$375
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$341'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$319'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$317_EN[3:0]$322
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$317_DATA[3:0]$321
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$317_ADDR[3:0]$320
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$318'.
Creating decoders for process `\uart.$proc$uart.v:106$172'.
Creating decoders for process `\uart.$proc$uart.v:105$171'.
Creating decoders for process `\uart.$proc$uart.v:101$170'.
Creating decoders for process `\uart.$proc$uart.v:135$143'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:99$136'.
Creating decoders for process `\pulses.$proc$pulses.v:93$135'.
Creating decoders for process `\pulses.$proc$pulses.v:89$134'.
Creating decoders for process `\pulses.$proc$pulses.v:88$133'.
Creating decoders for process `\pulses.$proc$pulses.v:87$132'.
Creating decoders for process `\pulses.$proc$pulses.v:84$131'.
Creating decoders for process `\pulses.$proc$pulses.v:83$130'.
Creating decoders for process `\pulses.$proc$pulses.v:82$129'.
Creating decoders for process `\pulses.$proc$pulses.v:81$128'.
Creating decoders for process `\pulses.$proc$pulses.v:79$127'.
Creating decoders for process `\pulses.$proc$pulses.v:78$126'.
Creating decoders for process `\pulses.$proc$pulses.v:77$125'.
Creating decoders for process `\pulses.$proc$pulses.v:76$124'.
Creating decoders for process `\pulses.$proc$pulses.v:75$123'.
Creating decoders for process `\pulses.$proc$pulses.v:74$122'.
Creating decoders for process `\pulses.$proc$pulses.v:73$121'.
Creating decoders for process `\pulses.$proc$pulses.v:72$120'.
Creating decoders for process `\pulses.$proc$pulses.v:71$119'.
Creating decoders for process `\pulses.$proc$pulses.v:70$118'.
Creating decoders for process `\pulses.$proc$pulses.v:57$117'.
Creating decoders for process `\pulses.$proc$pulses.v:49$116'.
Creating decoders for process `\pulses.$proc$pulses.v:139$59'.
     1/13: $0\cblock_on[31:0]
     2/13: $0\cblock_delay[31:0]
     3/13: $0\cpulse[31:0]
     4/13: $0\cdelay[31:0]
     5/13: $0\ccount[7:0]
     6/13: $0\nutation_pulse_stop[23:0]
     7/13: $0\nutation_pulse_start[23:0]
     8/13: $0\inh[0:0]
     9/13: $0\nut_pulse[0:0]
    10/13: $0\pulse[0:0]
    11/13: $0\sync[0:0]
    12/13: $1\counter[31:0]
    13/13: $0\pulses[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:109$48'.
     1/12: $0\nutation_pulse_delay[15:0]
     2/12: $0\nutation_pulse_width[7:0]
     3/12: $0\counter[31:0]
     4/12: $0\cpmg[7:0]
     5/12: $0\pulse_block_off[15:0]
     6/12: $0\pulse_block[7:0]
     7/12: $0\block[0:0]
     8/12: $0\pump[0:0]
     9/12: $0\p2width[15:0]
    10/12: $0\delay[15:0]
    11/12: $0\p1width[15:0]
    12/12: $0\period[23:0]
Creating decoders for process `\pulse_control.$proc$pulse_control.v:130$47'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:113$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:112$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:111$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:110$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:48$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:47$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:46$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:133$3'.
     1/32: $2\rx_done[0:0]
     2/32: $4$bitselwrite$data$pulse_control.v:149$2[31:0]$14
     3/32: $4$bitselwrite$mask$pulse_control.v:149$1[31:0]$13
     4/32: $4\vinput[31:0]
     5/32: $3$bitselwrite$data$pulse_control.v:149$2[31:0]$11
     6/32: $3$bitselwrite$mask$pulse_control.v:149$1[31:0]$10
     7/32: $3\vinput[31:0]
     8/32: $2$bitselwrite$data$pulse_control.v:149$2[31:0]$9
     9/32: $2$bitselwrite$mask$pulse_control.v:149$1[31:0]$8
    10/32: $2\vinput[31:0]
    11/32: $1$bitselwrite$data$pulse_control.v:149$2[31:0]$7
    12/32: $1$bitselwrite$mask$pulse_control.v:149$1[31:0]$6
    13/32: $1\vinput[31:0]
    14/32: $1\voutput[7:0]
    15/32: $1\rx_done[0:0]
    16/32: $0\state[2:0]
    17/32: $0\readcount[5:0]
    18/32: $0\readstate[1:0]
    19/32: $0\writestate[0:0]
    20/32: $0\vcontrol[7:0]
    21/32: $0\tx_byte[7:0]
    22/32: $0\transmit[0:0]
    23/32: $0\cpmg[7:0]
    24/32: $0\pulse_block[7:0]
    25/32: $0\block[0:0]
    26/32: $0\pump[0:0]
    27/32: $0\nut_wid[7:0]
    28/32: $0\nut_del[15:0]
    29/32: $0\p2width[15:0]
    30/32: $0\delay[15:0]
    31/32: $0\p1width[15:0]
    32/32: $0\period[23:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\nutation_pulse' from process `\pulses.$proc$pulses.v:87$132'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:57$117'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:111$44'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:43$37'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$398'.
  created $dff cell `$procdff$1451' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$395'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$373_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$374'.
  created $dff cell `$procdff$1452' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$373_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$374'.
  created $dff cell `$procdff$1453' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$373_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$374'.
  created $dff cell `$procdff$1454' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$341'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$317_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$319'.
  created $dff cell `$procdff$1455' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$317_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$319'.
  created $dff cell `$procdff$1456' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$317_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$319'.
  created $dff cell `$procdff$1457' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$318'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1458' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1459' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1460' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1461' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1462' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1463' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1464' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1465' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1466' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1467' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$143'.
  created $dff cell `$procdff$1468' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1469' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1470' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1471' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1472' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1473' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1474' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1475' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1476' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1477' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1478' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1479' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1480' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:139$59'.
  created $dff cell `$procdff$1481' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1482' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1483' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1484' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1485' with positive edge clock.
Creating register for signal `\pulses.\pump' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1486' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1487' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1488' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_off' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1489' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1490' with positive edge clock.
Creating register for signal `\pulses.\rx_done' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1491' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1492' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1493' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1494' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1495' with positive edge clock.
Creating register for signal `\pulses.\block_on' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1496' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1497' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1498' with positive edge clock.
Creating register for signal `\pulses.\xfer_bits' using process `\pulses.$proc$pulses.v:109$48'.
  created $dff cell `$procdff$1499' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1500' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1501' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1502' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1503' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1504' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1505' with positive edge clock.
Creating register for signal `\pulse_control.\pump' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1506' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1507' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1508' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1509' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1510' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1511' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1512' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1513' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1514' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1515' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1516' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1517' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1518' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1519' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:149$1' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1520' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:149$2' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1521' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$402'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$398'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$398'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$395'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$374'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$374'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$341'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$319'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$319'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$318'.
Removing empty process `uart.$proc$uart.v:106$172'.
Removing empty process `uart.$proc$uart.v:105$171'.
Removing empty process `uart.$proc$uart.v:101$170'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$143'.
Removing empty process `uart.$proc$uart.v:135$143'.
Removing empty process `pulses.$proc$pulses.v:99$136'.
Removing empty process `pulses.$proc$pulses.v:93$135'.
Removing empty process `pulses.$proc$pulses.v:89$134'.
Removing empty process `pulses.$proc$pulses.v:88$133'.
Removing empty process `pulses.$proc$pulses.v:87$132'.
Removing empty process `pulses.$proc$pulses.v:84$131'.
Removing empty process `pulses.$proc$pulses.v:83$130'.
Removing empty process `pulses.$proc$pulses.v:82$129'.
Removing empty process `pulses.$proc$pulses.v:81$128'.
Removing empty process `pulses.$proc$pulses.v:79$127'.
Removing empty process `pulses.$proc$pulses.v:78$126'.
Removing empty process `pulses.$proc$pulses.v:77$125'.
Removing empty process `pulses.$proc$pulses.v:76$124'.
Removing empty process `pulses.$proc$pulses.v:75$123'.
Removing empty process `pulses.$proc$pulses.v:74$122'.
Removing empty process `pulses.$proc$pulses.v:73$121'.
Removing empty process `pulses.$proc$pulses.v:72$120'.
Removing empty process `pulses.$proc$pulses.v:71$119'.
Removing empty process `pulses.$proc$pulses.v:70$118'.
Removing empty process `pulses.$proc$pulses.v:57$117'.
Removing empty process `pulses.$proc$pulses.v:49$116'.
Found and cleaned up 6 empty switches in `\pulses.$proc$pulses.v:139$59'.
Removing empty process `pulses.$proc$pulses.v:139$59'.
Found and cleaned up 2 empty switches in `\pulses.$proc$pulses.v:109$48'.
Removing empty process `pulses.$proc$pulses.v:109$48'.
Removing empty process `pulse_control.$proc$pulse_control.v:130$47'.
Removing empty process `pulse_control.$proc$pulse_control.v:113$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:112$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:111$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:110$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:48$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:47$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:46$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$31'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:133$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:133$3'.
Cleaned up 38 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~106 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 45 unused cells and 362 unused wires.
<suppressed ~59 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [31]:
    port Q[31] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[31] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [30]:
    port Q[30] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[30] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [29]:
    port Q[29] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[29] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [28]:
    port Q[28] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[28] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [27]:
    port Q[27] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[27] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [26]:
    port Q[26] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[26] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [25]:
    port Q[25] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[25] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [24]:
    port Q[24] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[24] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [23]:
    port Q[23] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[23] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [22]:
    port Q[22] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[22] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [21]:
    port Q[21] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[21] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [20]:
    port Q[20] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[20] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [19]:
    port Q[19] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[19] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [18]:
    port Q[18] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[18] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [17]:
    port Q[17] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[17] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [16]:
    port Q[16] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[16] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [15]:
    port Q[15] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[15] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [14]:
    port Q[14] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[14] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [13]:
    port Q[13] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[13] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [12]:
    port Q[12] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[12] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [11]:
    port Q[11] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[11] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [10]:
    port Q[10] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[10] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [9]:
    port Q[9] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[9] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [8]:
    port Q[8] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[8] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [7]:
    port Q[7] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[7] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [6]:
    port Q[6] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[6] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [5]:
    port Q[5] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[5] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [4]:
    port Q[4] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[4] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [3]:
    port Q[3] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[3] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [2]:
    port Q[2] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[2] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [1]:
    port Q[1] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[1] of cell $flatten\pulses.$procdff$1492 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [0]:
    port Q[0] of cell $flatten\pulses.$procdff$1470 ($dff)
    port Q[0] of cell $flatten\pulses.$procdff$1492 ($dff)
found and reported 32 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~624 debug messages>
Removed a total of 208 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1315: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1313: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1317: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$527.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$535.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$543.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$576.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$586.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$588.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$598.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$600.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$610.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$612.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$621.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$630.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$639.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$648.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$657.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$666.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$677.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$679.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$689.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$699.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$709.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$719.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$731.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$733.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$745.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$747.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$759.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$761.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$773.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$775.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$787.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$789.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$800.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$811.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$822.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$833.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$844.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$856.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$868.
    dead port 2/2 on $mux $flatten\control.$procmux$1126.
    dead port 2/2 on $mux $flatten\control.$procmux$1167.
    dead port 2/2 on $mux $flatten\control.$procmux$1169.
    dead port 2/2 on $mux $flatten\control.$procmux$1171.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$519.
    dead port 2/2 on $mux $flatten\control.$procmux$1205.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$426.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$428.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$436.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$438.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$446.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$448.
    dead port 2/2 on $mux $flatten\control.$procmux$1207.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$456.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$458.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$466.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$468.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$475.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$482.
    dead port 2/2 on $mux $flatten\control.$procmux$1234.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$489.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$496.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$503.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$511.
Removed 63 multiplexer ports.
<suppressed ~58 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$550: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP $auto$opt_reduce.cc:134:opt_mux$1523 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$560: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP $auto$opt_reduce.cc:134:opt_mux$1525 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1281: { $flatten\control.$procmux$1172_CMP $auto$opt_reduce.cc:134:opt_mux$1527 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$565: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP $auto$opt_reduce.cc:134:opt_mux$1529 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$879: { $flatten\control.\uart0.$procmux$857_CMP $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$680_CMP $flatten\control.\uart0.$procmux$589_CMP $flatten\control.\uart0.$procmux$873_CMP $auto$opt_reduce.cc:134:opt_mux$1531 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$888: { $flatten\control.\uart0.$procmux$589_CMP $auto$opt_reduce.cc:134:opt_mux$1533 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$897: { $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$589_CMP $auto$opt_reduce.cc:134:opt_mux$1535 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$906: { $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$680_CMP $flatten\control.\uart0.$procmux$589_CMP $auto$opt_reduce.cc:134:opt_mux$1537 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$915: { $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$680_CMP $flatten\control.\uart0.$procmux$589_CMP $auto$opt_reduce.cc:134:opt_mux$1539 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1007: $auto$opt_reduce.cc:134:opt_mux$1541
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1027: $auto$opt_reduce.cc:134:opt_mux$1543
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$545: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP $auto$opt_reduce.cc:134:opt_mux$1545 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$951: $auto$opt_reduce.cc:134:opt_mux$1547
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$971: $auto$opt_reduce.cc:134:opt_mux$1549
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$989: $auto$opt_reduce.cc:134:opt_mux$1551
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 280 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.pulses.pulse_block_off as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pulses.$procdff$1498 ($dff) from module pulse_gen (D = \control.nut_del, Q = \pulses.nutation_pulse_delay).
Adding EN signal on $flatten\pulses.$procdff$1497 ($dff) from module pulse_gen (D = \control.nut_wid, Q = \pulses.nutation_pulse_width).
Adding EN signal on $flatten\pulses.$procdff$1492 ($dff) from module pulse_gen (D = 0, Q = \pulses.counter).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 25 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 27 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 28 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 29 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 30 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 31 on $auto$opt_dff.cc:764:run$1554 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1490 ($dff) from module pulse_gen (D = \control.cpmg, Q = \pulses.cpmg).
Adding EN signal on $flatten\pulses.$procdff$1489 ($dff) from module pulse_gen (D = 16'0000000001100100, Q = \pulses.pulse_block_off).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 2 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 5 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 6 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1556 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1488 ($dff) from module pulse_gen (D = \control.pulse_block, Q = \pulses.pulse_block).
Adding EN signal on $flatten\pulses.$procdff$1487 ($dff) from module pulse_gen (D = \control.block, Q = \pulses.block).
Adding EN signal on $flatten\pulses.$procdff$1486 ($dff) from module pulse_gen (D = \control.pump, Q = \pulses.pump).
Adding EN signal on $flatten\pulses.$procdff$1485 ($dff) from module pulse_gen (D = \control.p2width, Q = \pulses.p2width).
Adding EN signal on $flatten\pulses.$procdff$1484 ($dff) from module pulse_gen (D = \control.delay, Q = \pulses.delay).
Adding EN signal on $flatten\pulses.$procdff$1483 ($dff) from module pulse_gen (D = \control.p1width, Q = \pulses.p1width).
Adding EN signal on $flatten\pulses.$procdff$1482 ($dff) from module pulse_gen (D = \control.period, Q = \pulses.period).
Adding EN signal on $flatten\pulses.$procdff$1481 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$948_Y, Q = \pulses.cblock_on).
Adding EN signal on $flatten\pulses.$procdff$1480 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$968_Y, Q = \pulses.cblock_delay).
Adding EN signal on $flatten\pulses.$procdff$1479 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$986_Y, Q = \pulses.cpulse).
Adding EN signal on $flatten\pulses.$procdff$1478 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1004_Y, Q = \pulses.cdelay).
Adding EN signal on $flatten\pulses.$procdff$1477 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1024_Y, Q = \pulses.ccount).
Adding SRST signal on $auto$opt_dff.cc:764:run$1650 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$1022_Y, Q = \pulses.ccount, rval = 8'00000000).
Adding EN signal on $flatten\pulses.$procdff$1476 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:141$61_Y, Q = \pulses.nutation_pulse_stop).
Adding EN signal on $flatten\pulses.$procdff$1475 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:141$62_Y, Q = \pulses.nutation_pulse_start).
Adding EN signal on $flatten\pulses.$procdff$1474 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1053_Y, Q = \pulses.inh).
Adding EN signal on $flatten\pulses.$procdff$1473 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:144$67_Y [0], Q = \pulses.nut_pulse).
Adding SRST signal on $auto$opt_dff.cc:764:run$1673 ($dffe) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:145$66_Y [0], Q = \pulses.nut_pulse, rval = 1'0).
Adding EN signal on $flatten\pulses.$procdff$1472 ($dff) from module pulse_gen (D = $flatten\pulses.$logic_or$pulses.v:223$115_Y, Q = \pulses.pulse).
Adding EN signal on $flatten\pulses.$procdff$1471 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1073_Y, Q = \pulses.sync).
Adding EN signal on $flatten\pulses.$procdff$1470 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:222$114_Y, Q = \pulses.counter).
Adding SRST signal on $auto$opt_dff.cc:764:run$1691 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:222$113_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\pulses.$procdff$1469 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1093_Y, Q = \pulses.pulses).
Adding EN signal on $flatten\control.\uart0.$procdff$1468 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1467 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1466 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1465 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1464 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1463 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1462 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1459 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1458 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1519 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1518 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1517 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1301_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1516 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1515 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:166$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1514 ($dff) from module pulse_gen (D = \control.uart0.rx_data, Q = \control.vcontrol).
Adding EN signal on $flatten\control.$procdff$1513 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1512 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1511 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1510 ($dff) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.rx_done).
Adding EN signal on $flatten\control.$procdff$1509 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.cpmg).
Adding EN signal on $flatten\control.$procdff$1508 ($dff) from module pulse_gen (D = \control.vinput [15:8], Q = \control.pulse_block).
Adding EN signal on $flatten\control.$procdff$1507 ($dff) from module pulse_gen (D = \control.vinput [1], Q = \control.block).
Adding EN signal on $flatten\control.$procdff$1506 ($dff) from module pulse_gen (D = \control.vinput [0], Q = \control.pump).
Adding EN signal on $flatten\control.$procdff$1505 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.nut_wid).
Adding EN signal on $flatten\control.$procdff$1504 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.nut_del).
Adding EN signal on $flatten\control.$procdff$1503 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p2width).
Adding EN signal on $flatten\control.$procdff$1502 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.delay).
Adding EN signal on $flatten\control.$procdff$1501 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p1width).
Adding EN signal on $flatten\control.$procdff$1500 ($dff) from module pulse_gen (D = { \control.vinput [7:0] 16'0000000000000000 }, Q = \control.period).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1896 ($dffe) from module pulse_gen.

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Warning: Driver-driver conflict for \pulses.counter [31] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [30] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [29] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [28] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [27] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [26] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [25] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [24] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [23] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [22] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [21] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [20] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [19] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [18] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [17] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [16] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [15] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [14] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [13] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [12] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [11] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [10] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [9] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [8] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [7] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [6] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [5] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [4] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [3] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [2] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [1] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [0] between cell $auto$opt_dff.cc:702:run$1692.Q and constant 1'0 in pulse_gen: Resolved using constant.
Removed 71 unused cells and 69 unused wires.
<suppressed ~72 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~43 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1000.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1000.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1002.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1002.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1036.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1036.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1038.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1038.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1040.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1040.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1042.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1042.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1044.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1044.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1046.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1046.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1048.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1048.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1064.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1064.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1066.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1066.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1068.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1068.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1082.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1082.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1084.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1084.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1086.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1086.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1088.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1088.
    dead port 1/2 on $mux $flatten\pulses.$procmux$936.
    dead port 2/2 on $mux $flatten\pulses.$procmux$936.
    dead port 1/2 on $mux $flatten\pulses.$procmux$938.
    dead port 2/2 on $mux $flatten\pulses.$procmux$938.
    dead port 1/2 on $mux $flatten\pulses.$procmux$940.
    dead port 2/2 on $mux $flatten\pulses.$procmux$940.
    dead port 1/2 on $mux $flatten\pulses.$procmux$942.
    dead port 2/2 on $mux $flatten\pulses.$procmux$942.
    dead port 1/2 on $mux $flatten\pulses.$procmux$944.
    dead port 2/2 on $mux $flatten\pulses.$procmux$944.
    dead port 1/2 on $mux $flatten\pulses.$procmux$946.
    dead port 2/2 on $mux $flatten\pulses.$procmux$946.
    dead port 1/2 on $mux $flatten\pulses.$procmux$956.
    dead port 2/2 on $mux $flatten\pulses.$procmux$956.
    dead port 1/2 on $mux $flatten\pulses.$procmux$958.
    dead port 2/2 on $mux $flatten\pulses.$procmux$958.
    dead port 1/2 on $mux $flatten\pulses.$procmux$960.
    dead port 2/2 on $mux $flatten\pulses.$procmux$960.
    dead port 1/2 on $mux $flatten\pulses.$procmux$962.
    dead port 2/2 on $mux $flatten\pulses.$procmux$962.
    dead port 1/2 on $mux $flatten\pulses.$procmux$964.
    dead port 2/2 on $mux $flatten\pulses.$procmux$964.
    dead port 1/2 on $mux $flatten\pulses.$procmux$966.
    dead port 2/2 on $mux $flatten\pulses.$procmux$966.
    dead port 1/2 on $mux $flatten\pulses.$procmux$978.
    dead port 2/2 on $mux $flatten\pulses.$procmux$978.
    dead port 1/2 on $mux $flatten\pulses.$procmux$980.
    dead port 2/2 on $mux $flatten\pulses.$procmux$980.
    dead port 1/2 on $mux $flatten\pulses.$procmux$982.
    dead port 2/2 on $mux $flatten\pulses.$procmux$982.
    dead port 1/2 on $mux $flatten\pulses.$procmux$984.
    dead port 2/2 on $mux $flatten\pulses.$procmux$984.
    dead port 1/2 on $mux $flatten\pulses.$procmux$996.
    dead port 2/2 on $mux $flatten\pulses.$procmux$996.
    dead port 1/2 on $mux $flatten\pulses.$procmux$998.
    dead port 2/2 on $mux $flatten\pulses.$procmux$998.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:187$95.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:187$95.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:200$105.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:200$105.
Removed 72 multiplexer ports.
<suppressed ~25 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1704: { $auto$rtlil.cc:2121:Not$1702 $auto$opt_dff.cc:217:make_patterns_logic$1699 $auto$opt_dff.cc:217:make_patterns_logic$1697 $auto$opt_dff.cc:217:make_patterns_logic$1695 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1689: { $auto$rtlil.cc:2121:Not$1687 $auto$opt_dff.cc:217:make_patterns_logic$1684 $auto$opt_dff.cc:217:make_patterns_logic$1682 $auto$opt_dff.cc:217:make_patterns_logic$1680 $auto$opt_dff.cc:217:make_patterns_logic$1678 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1671: { $auto$rtlil.cc:2121:Not$1669 $auto$opt_dff.cc:217:make_patterns_logic$1666 $auto$opt_dff.cc:217:make_patterns_logic$1664 $auto$opt_dff.cc:217:make_patterns_logic$1662 $auto$opt_dff.cc:217:make_patterns_logic$1660 $auto$opt_dff.cc:217:make_patterns_logic$1658 $auto$opt_dff.cc:217:make_patterns_logic$1656 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1649: { $auto$rtlil.cc:2121:Not$1647 $auto$rtlil.cc:2121:Not$1645 $auto$opt_dff.cc:217:make_patterns_logic$1642 $auto$opt_dff.cc:217:make_patterns_logic$1640 $auto$opt_dff.cc:217:make_patterns_logic$1638 $auto$opt_dff.cc:217:make_patterns_logic$1636 $auto$opt_dff.cc:217:make_patterns_logic$1634 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1630: { $auto$opt_dff.cc:217:make_patterns_logic$1619 $auto$opt_dff.cc:217:make_patterns_logic$1621 $auto$rtlil.cc:2121:Not$1628 $auto$rtlil.cc:2121:Not$1626 $auto$opt_dff.cc:217:make_patterns_logic$1623 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1615: { $auto$opt_dff.cc:217:make_patterns_logic$1604 $auto$opt_dff.cc:217:make_patterns_logic$1606 $auto$opt_dff.cc:217:make_patterns_logic$1608 $auto$rtlil.cc:2121:Not$1611 $auto$rtlil.cc:2121:Not$1613 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1600: { $auto$opt_dff.cc:217:make_patterns_logic$1585 $auto$opt_dff.cc:217:make_patterns_logic$1587 $auto$opt_dff.cc:217:make_patterns_logic$1589 $auto$opt_dff.cc:217:make_patterns_logic$1591 $auto$opt_dff.cc:217:make_patterns_logic$1593 $auto$rtlil.cc:2121:Not$1596 $auto$rtlil.cc:2121:Not$1598 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1581: { $auto$opt_dff.cc:217:make_patterns_logic$1566 $auto$opt_dff.cc:217:make_patterns_logic$1570 $auto$opt_dff.cc:217:make_patterns_logic$1568 $auto$opt_dff.cc:217:make_patterns_logic$1572 $auto$opt_dff.cc:217:make_patterns_logic$1574 $auto$rtlil.cc:2121:Not$1577 $auto$rtlil.cc:2121:Not$1579 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$545: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$550: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$560: { $flatten\control.\uart0.$procmux$512_CMP $flatten\control.\uart0.$procmux$429_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$888: $flatten\control.\uart0.$procmux$589_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$897: { $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$589_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$906: { $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$680_CMP $flatten\control.\uart0.$procmux$589_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$915: { $flatten\control.\uart0.$procmux$734_CMP $flatten\control.\uart0.$procmux$680_CMP $flatten\control.\uart0.$procmux$589_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~189 debug messages>
Removed a total of 63 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 5 unused cells and 120 unused wires.
<suppressed ~6 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~14 debug messages>

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1704: { $auto$rtlil.cc:2121:Not$1577 $auto$opt_dff.cc:217:make_patterns_logic$1666 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1689: { $auto$rtlil.cc:2121:Not$1577 $auto$opt_dff.cc:217:make_patterns_logic$1666 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1671: { $auto$rtlil.cc:2121:Not$1577 $auto$opt_dff.cc:217:make_patterns_logic$1666 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1615: { $auto$rtlil.cc:2121:Not$1577 $auto$rtlil.cc:2121:Not$1579 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1600: { $auto$rtlil.cc:2121:Not$1577 $auto$rtlil.cc:2121:Not$1579 }
  Optimizing cells in module \pulse_gen.
Performed a total of 5 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active SRST on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen (changing to const D).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:702:run$1651 ($sdffce) from module pulse_gen.

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 26 unused cells and 43 unused wires.
<suppressed ~31 debug messages>

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Rerunning OPT passes. (Maybe there is more to do..)

6.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.27. Executing OPT_DFF pass (perform DFF optimizations).

6.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.30. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1738 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$155 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$157 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$161 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$168 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$429_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$434 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$444 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$464 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$473 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$480 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$487 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$494 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$509 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$517 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$525 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$541 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$574 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$589_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$596 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$619 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$637 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$646 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$655 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$664 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$675 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$680_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$687 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$697 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$717 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$729 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$734_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$743 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$771 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$798 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$809 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$831 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$842 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$854 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$888 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1448_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1436_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1412_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1402_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1395_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1371_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1362_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1351 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1347 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1307 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1305 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1302_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1299 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1292 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1290 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1277 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1275 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1273 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1263 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1259 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1254_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1127_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:150$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:150$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1832 ($ne).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1810 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1808 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1804 ($ne).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$procmux$1008_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:157$80 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:158$78 ($mux).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:158$76 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:157$75 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:153$74 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:154$72 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:155$71 ($mux).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:155$70 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:154$69 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:153$68 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:145$66 ($mux).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:145$65 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:144$64 ($lt).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:150$23_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1305_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$155_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$161_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$168_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:145$66_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:153$74_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:154$72_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:155$71_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:157$80_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:158$78_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 57 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~92 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:150$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$152 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$145 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$147 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$153 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$158 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$166 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:126$49 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:127$51 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:128$54 ($add).
  creating $macc model for $flatten\pulses.$sub$pulses.v:128$55 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:141$61 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:141$62 ($sub).
  merging $macc model for $flatten\control.$add$pulse_control.v:166$26 into $flatten\control.$add$pulse_control.v:166$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:166$25 into $flatten\control.$add$pulse_control.v:166$27.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:128$55.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:128$54.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:127$51.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:126$49.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$166.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$158.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$153.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$147.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$145.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$152.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:141$61.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:141$62.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:150$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:166$27: $auto$alumacc.cc:365:replace_macc$1916
  creating $alu model for $flatten\pulses.$lt$pulses.v:144$64 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:145$65 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:153$68 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:154$69 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:155$70 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:157$75 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:158$76 ($lt): new $alu
  creating $alu cell for $flatten\pulses.$lt$pulses.v:158$76: $auto$alumacc.cc:485:replace_alu$1924
  creating $alu cell for $flatten\pulses.$lt$pulses.v:157$75: $auto$alumacc.cc:485:replace_alu$1929
  creating $alu cell for $flatten\pulses.$lt$pulses.v:155$70: $auto$alumacc.cc:485:replace_alu$1934
  creating $alu cell for $flatten\pulses.$lt$pulses.v:154$69: $auto$alumacc.cc:485:replace_alu$1939
  creating $alu cell for $flatten\pulses.$lt$pulses.v:153$68: $auto$alumacc.cc:485:replace_alu$1944
  creating $alu cell for $flatten\pulses.$lt$pulses.v:145$65: $auto$alumacc.cc:485:replace_alu$1949
  creating $alu cell for $flatten\pulses.$lt$pulses.v:144$64: $auto$alumacc.cc:485:replace_alu$1954
  creating $alu cell for $flatten\control.$add$pulse_control.v:150$23: $auto$alumacc.cc:485:replace_alu$1959
  creating $alu cell for $flatten\pulses.$sub$pulses.v:141$62: $auto$alumacc.cc:485:replace_alu$1962
  creating $alu cell for $flatten\pulses.$sub$pulses.v:141$61: $auto$alumacc.cc:485:replace_alu$1965
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$152: $auto$alumacc.cc:485:replace_alu$1968
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$145: $auto$alumacc.cc:485:replace_alu$1971
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$147: $auto$alumacc.cc:485:replace_alu$1974
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$153: $auto$alumacc.cc:485:replace_alu$1977
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$158: $auto$alumacc.cc:485:replace_alu$1980
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$166: $auto$alumacc.cc:485:replace_alu$1983
  creating $alu cell for $flatten\pulses.$add$pulses.v:126$49: $auto$alumacc.cc:485:replace_alu$1986
  creating $alu cell for $flatten\pulses.$add$pulses.v:127$51: $auto$alumacc.cc:485:replace_alu$1989
  creating $alu cell for $flatten\pulses.$add$pulses.v:128$54: $auto$alumacc.cc:485:replace_alu$1992
  creating $alu cell for $flatten\pulses.$sub$pulses.v:128$55: $auto$alumacc.cc:485:replace_alu$1995
  created 20 $alu and 1 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~7 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$906: { $flatten\control.\uart0.$procmux$680_CMP $auto$opt_reduce.cc:134:opt_mux$1999 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$915: { $flatten\control.\uart0.$procmux$680_CMP $auto$opt_reduce.cc:134:opt_mux$2001 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 18 unused wires.
<suppressed ~10 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~43 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1865 ($dffe) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1838 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1315_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1835 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1898 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1826 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1897 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1802 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1787 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1761 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1743 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1727 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1690 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1911 [0], Q = \pulses.sync, rval = 1'1).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 10 unused cells and 12 unused wires.
<suppressed ~11 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1261:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1261_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1261_Y [1]
      New connections: { $flatten\control.$procmux$1261_Y [2] $flatten\control.$procmux$1261_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1301:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1898 [0] }, B=2'00, Y=$flatten\control.$procmux$1301_Y
      New ports: A=$auto$wreduce.cc:454:run$1898 [0], B=1'0, Y=$flatten\control.$procmux$1301_Y [0]
      New connections: $flatten\control.$procmux$1301_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$434:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1901 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1901 [9] $auto$wreduce.cc:454:run$1901 [1] }
      New connections: { $auto$wreduce.cc:454:run$1901 [8:2] $auto$wreduce.cc:454:run$1901 [0] } = { 1'0 $auto$wreduce.cc:454:run$1901 [1] $auto$wreduce.cc:454:run$1901 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$584:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$596:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1903 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1903 [2] $auto$wreduce.cc:454:run$1903 [0] }
      New connections: { $auto$wreduce.cc:454:run$1903 [9:3] $auto$wreduce.cc:454:run$1903 [1] } = { $auto$wreduce.cc:454:run$1903 [0] $auto$wreduce.cc:454:run$1903 [2] $auto$wreduce.cc:454:run$1903 [2] 1'1 $auto$wreduce.cc:454:run$1903 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$608:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$757:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$163:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$163_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$163_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$163_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$163_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$169:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$169_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$169_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$169_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$169_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1266:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1261_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1261_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1835 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1817 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=16\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=8\Y_WIDTH=24 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=8\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~2438 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1320 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4525 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4525 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4526 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4526 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4527 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4527 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 600 unused cells and 1504 unused wires.
<suppressed ~601 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4524 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1266.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4523 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1266.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2252 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$870.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2251 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$870.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2250 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$870.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2197 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2156 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$555.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2155 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$555.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
No more expansions possible.
<suppressed ~590 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2123 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 900 gates and 1067 wires to a netlist network with 165 inputs and 173 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     192.
ABC: Participating nodes from both networks       =     456.
ABC: Participating nodes from the first network   =     201. (  77.01 % of nodes)
ABC: Participating nodes from the second network  =     255. (  97.70 % of nodes)
ABC: Node pairs (any polarity)                    =     201. (  77.01 % of names can be moved)
ABC: Node pairs (same polarity)                   =     188. (  72.03 % of names can be moved)
ABC: Total runtime =     0.05 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      260
ABC RESULTS:        internal signals:      729
ABC RESULTS:           input signals:      165
ABC RESULTS:          output signals:      173
Removing temp directory.
Removed 0 unused cells and 568 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod$0d7a58a2521c9f7f639d5074fac2fc6fc0481634\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod$b5cd238a527d851ba52055b76f8b8313ff4d0a1d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16639 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1156641008 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111100 for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod$fcd45dac87ecaf8167f012f6f6d6fa7b369dedb8\$lut for cells of type $lut.
Using template $paramod$d544e1f300ff74c4dad472b8a1469bb47c58f1ad\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111111111110 for cells of type $lut.
Using template $paramod$05b7e8229d9a7a31e653ac7a3cef172aa16e73f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101111000011110000111100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=401139735 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod$57619346c001bba14f685682aaa48a843cd5a7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111000100000001000000010000 for cells of type $lut.
Using template $paramod$56f3e246421b6b29fd066d86d01fc72a1f44c94f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=33023 for cells of type $lut.
Using template $paramod$d15f39da4cdda7162c5b1d8de7c7e77e72dbe4aa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111110100000000000000 for cells of type $lut.
Using template $paramod$d611654eaf2cfdde5476b49ff7dde7a3d8cbca2c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111110001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11000000010101011111111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=268435456 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~1346 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut2 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut3 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut4 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut5 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut6 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7910.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7913.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7913.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut4 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut5 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut6 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7792.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7792.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut4 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut5 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut6 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut4 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut5 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut6 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut4 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut5 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut6 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7895.lut2 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7895.lut3 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7896.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7893.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7894.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7798.lut2 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7798.lut3 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7799.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7800.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7771.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7797.lut2 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7797.lut3 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut5 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut6 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut2 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut3 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut4 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut5 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut6 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut7 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7771.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7776.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7775.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7788.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7781.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7792.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7797.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7839.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7771.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7817.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7895.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7838.lut0 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7798.lut1 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7848.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut1 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7889.lut0 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7892.lut0 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7899.lut0 (4 -> 3)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7900.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7903.lut0 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7904.lut0 (4 -> 1)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7913.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7854.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7917.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7852.lut1 (4 -> 0)
  Optimizing lut $abc$7769$auto$blifparse.cc:498:parse_blif$7933.lut0 (4 -> 3)
Removed 0 unused cells and 545 unused wires.

6.47. Executing AUTONAME pass.
Renamed 15243 objects in module pulse_gen (73 iterations).
<suppressed ~1502 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:                571
   Number of wire bits:           2492
   Number of public wires:         571
   Number of public wire bits:    2492
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1059
     CCU2C                         138
     EHXPLLL                         1
     L6MUX21                        36
     LUT4                          368
     PFUMX                          79
     TRELLIS_FF                    437

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

Warnings: 64 unique messages, 64 total
End of script. Logfile hash: 4bf1440810, CPU: user 5.50s system 1.31s, MEM: 250.70 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 31% 18x read_verilog (2 sec), 11% 28x opt_clean (0 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 200.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:       644/83640     0%
Info:         logic LUTs:    368/83640     0%
Info:         carry LUTs:    276/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:       874/83640     1%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y41/PIOD'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y41/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y41/PIOB'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X0/Y47/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info:     promoting clock net clk_pll to global network
Info: Checksum: 0x654984f0

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0xe754d7b2

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:   596/41820     1%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 406 cells, random placement wirelen = 62262.
Info:     at initial placer iter 0, wirelen = 877
Info:     at initial placer iter 1, wirelen = 822
Info:     at initial placer iter 2, wirelen = 828
Info:     at initial placer iter 3, wirelen = 826
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 823, spread = 4835, legal = 5260; time = 0.03s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 941, spread = 3387, legal = 3761; time = 0.04s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 1075, spread = 3589, legal = 3955; time = 0.04s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 1248, spread = 3253, legal = 3600; time = 0.04s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 1485, spread = 3336, legal = 3518; time = 0.04s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 1412, spread = 3380, legal = 3574; time = 0.06s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 1582, spread = 3043, legal = 3364; time = 0.12s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 1625, spread = 3054, legal = 3531; time = 0.05s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 1730, spread = 2792, legal = 3325; time = 0.05s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 1764, spread = 2872, legal = 3397; time = 0.10s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 1715, spread = 2955, legal = 3425; time = 0.05s
Info:     at iteration #12, type TRELLIS_SLICE: wirelen solved = 1891, spread = 2958, legal = 3377; time = 0.04s
Info:     at iteration #13, type TRELLIS_SLICE: wirelen solved = 1931, spread = 2885, legal = 3232; time = 0.03s
Info:     at iteration #14, type TRELLIS_SLICE: wirelen solved = 1913, spread = 2845, legal = 3392; time = 0.03s
Info:     at iteration #15, type TRELLIS_SLICE: wirelen solved = 1944, spread = 2916, legal = 3347; time = 0.03s
Info:     at iteration #16, type TRELLIS_SLICE: wirelen solved = 1980, spread = 2908, legal = 3375; time = 0.05s
Info:     at iteration #17, type TRELLIS_SLICE: wirelen solved = 2056, spread = 2953, legal = 3373; time = 0.07s
Info:     at iteration #18, type TRELLIS_SLICE: wirelen solved = 2095, spread = 3147, legal = 3586; time = 0.05s
Info: HeAP Placer Time: 1.39s
Info:   of which solving equations: 0.77s
Info:   of which spreading cells: 0.09s
Info:   of which strict legalisation: 0.05s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 52, wirelen = 3232
Info:   at iteration #5: temp = 0.000000, timing cost = 55, wirelen = 2779
Info:   at iteration #10: temp = 0.000000, timing cost = 64, wirelen = 2657
Info:   at iteration #15: temp = 0.000000, timing cost = 62, wirelen = 2580
Info:   at iteration #20: temp = 0.000000, timing cost = 62, wirelen = 2544
Info:   at iteration #25: temp = 0.000000, timing cost = 63, wirelen = 2531
Info:   at iteration #28: temp = 0.000000, timing cost = 62, wirelen = 2524 
Info: SA placement time 1.46s

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 165.98 MHz (PASS at 50.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 288.60 MHz (PASS at 200.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 10.90 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 8.12 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 9.60 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 3.37 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 2.09 ns

Info: Slack histogram:
Info:  legend: * represents 5 endpoint(s)
Info:          + represents [1,5) endpoint(s)
Info: [ -3121,   1100) |*****+
Info: [  1100,   5321) |**********+
Info: [  5321,   9542) |***+
Info: [  9542,  13763) |*****+
Info: [ 13763,  17984) |************************************************************ 
Info: [ 17984,  22205) |**************************+
Info: [ 22205,  26426) | 
Info: [ 26426,  30647) | 
Info: [ 30647,  34868) | 
Info: [ 34868,  39089) | 
Info: [ 39089,  43310) | 
Info: [ 43310,  47531) | 
Info: [ 47531,  51752) | 
Info: [ 51752,  55973) | 
Info: [ 55973,  60194) | 
Info: [ 60194,  64415) | 
Info: [ 64415,  68636) | 
Info: [ 68636,  72857) | 
Info: [ 72857,  77078) |+
Info: [ 77078,  81299) |+
Info: Checksum: 0xb867dd2f
Info: Routing globals...
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 0
Info:     routing clock net $glbnet$clk_pll using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 2488 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        1        998 |    1   998 |      1490|       0.96       0.96|
Info:       2000 |        8       1991 |    7   993 |       498|       0.66       1.62|
Info:       2498 |        9       2489 |    1   498 |         0|       0.74       2.36|
Info: Routing complete.
Info: Router1 time 2.36s
Info: Checksum: 0x13b542eb

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.p1width_TRELLIS_FF_Q_15_SLICE.Q0
Info:  1.0  1.3    Net pulses.p1width[0] budget 3.472000 ns (111,43) -> (110,40)
Info:                Sink pulses.delay_CCU2C_B0_7$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:72.20-72.27
Info:  0.3  1.6  Source pulses.delay_CCU2C_B0_7$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.delay_CCU2C_B0_4_COUT[1] budget 0.000000 ns (110,40) -> (110,40)
Info:                Sink pulses.delay_CCU2C_B0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:126.14-126.29
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  1.8  Source pulses.delay_CCU2C_B0_3$CCU2_SLICE.F0
Info:  1.0  2.8    Net pulses.p2start_TRELLIS_FF_Q_DI[2] budget 3.472000 ns (110,40) -> (111,38)
Info:                Sink pulses.p2width_CCU2C_A0_3$CCU2_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:126.14-126.29
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  3.0  Source pulses.p2width_CCU2C_A0_3$CCU2_SLICE.FCO
Info:  0.0  3.0    Net pulses.p2width_CCU2C_A0_4_COUT[3] budget 0.000000 ns (111,38) -> (111,38)
Info:                Sink pulses.p2width_CCU2C_A0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:127.16-127.41
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  3.3  Source pulses.p2width_CCU2C_A0_2$CCU2_SLICE.F1
Info:  0.9  4.2    Net pulses.sync_down_TRELLIS_FF_Q_DI[5] budget 3.472000 ns (111,38) -> (108,38)
Info:                Sink pulses.delay_CCU2C_A0_2$CCU2_SLICE.B1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:127.16-127.41
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  4.5  Source pulses.delay_CCU2C_A0_2$CCU2_SLICE.FCO
Info:  0.0  4.5    Net pulses.delay_CCU2C_A0_4_COUT[5] budget 0.000000 ns (108,38) -> (109,38)
Info:                Sink pulses.delay_CCU2C_A0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  4.8  Source pulses.delay_CCU2C_A0_1$CCU2_SLICE.F1
Info:  1.1  5.9    Net pulses.pulse_block_CCU2C_B0_A0[7] budget 3.471000 ns (109,38) -> (109,36)
Info:                Sink pulses.pulse_block_CCU2C_B0$CCU2_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  6.2  Source pulses.pulse_block_CCU2C_B0$CCU2_SLICE.FCO
Info:  0.0  6.2    Net pulses.pulse_block_CCU2C_B0_COUT[8] budget 0.000000 ns (109,36) -> (109,36)
Info:                Sink pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  6.2  Source pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  6.2    Net pulses.pulse_block_CCU2C_B0_COUT[10] budget 0.000000 ns (109,36) -> (109,36)
Info:                Sink pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  6.2  Source pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  6.2    Net pulses.pulse_block_CCU2C_B0_COUT[12] budget 0.000000 ns (109,36) -> (109,36)
Info:                Sink pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  6.3  Source pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  6.3    Net pulses.pulse_block_CCU2C_B0_COUT[14] budget 0.000000 ns (109,36) -> (110,36)
Info:                Sink pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.3  6.6  Source pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.F1
Info:  0.1  6.7    Net pulses.pulse_block_CCU2C_B0_S0[15] budget 3.471000 ns (110,36) -> (110,36)
Info:                Sink pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.DI1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:128.16-128.63
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.0  6.7  Setup pulses.pulse_block_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.DI1
Info: 2.6 ns logic, 4.0 ns routing

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.nutation_pulse_width_CCU2C_B0_2$CCU2_SLICE.Q0
Info:  0.8  1.1    Net pulses.nutation_pulse_start[2] budget 0.000000 ns (103,36) -> (103,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_3$CCU2_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:90.14-90.34
Info:  0.3  1.3  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  1.3    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[3] budget 0.000000 ns (103,35) -> (103,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[5] budget 0.000000 ns (103,35) -> (104,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[7] budget 0.000000 ns (104,35) -> (104,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[9] budget 0.000000 ns (104,35) -> (104,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[11] budget 0.000000 ns (104,35) -> (104,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[13] budget 0.000000 ns (104,35) -> (105,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[15] budget 0.000000 ns (105,35) -> (105,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[17] budget 0.000000 ns (105,35) -> (105,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[19] budget 0.000000 ns (105,35) -> (105,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[21] budget 0.000000 ns (105,35) -> (106,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.8  Source pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  1.8    Net $nextpnr_CCU2C_25$CIN budget 0.000000 ns (106,35) -> (106,35)
Info:                Sink $nextpnr_CCU2C_25$CCU2_SLICE.FCI
Info:  0.3  2.0  Source $nextpnr_CCU2C_25$CCU2_SLICE.F0
Info:  0.5  2.6    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR_LUT4_Z_C[23] budget 1.659000 ns (106,35) -> (98,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:144.18-144.48
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.1  2.7  Source pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.F1
Info:  0.1  2.8    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR budget 1.658000 ns (98,35) -> (98,35)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.LSR
Info:  0.2  3.0  Setup pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.LSR
Info: 1.6 ns logic, 1.4 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  6.0  6.0    Net RS232_Rx$TRELLIS_IO_IN budget 4.870000 ns (0,92) -> (99,42)
Info:                Sink RS232_Rx_LUT4_A_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:82.7-94.4
Info:  0.1  6.1  Source RS232_Rx_LUT4_A_SLICE.F0
Info:  0.7  6.9    Net RS232_Rx_LUT4_A_Z[4] budget 4.870000 ns (99,42) -> (97,42)
Info:                Sink RS232_Rx_LUT4_A_Z_LUT4_D_4_SLICE.D0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  7.0  Source RS232_Rx_LUT4_A_Z_LUT4_D_4_SLICE.F0
Info:  0.6  7.6    Net RS232_Rx_LUT4_A_Z_LUT4_D_4_Z[2] budget 3.617000 ns (97,42) -> (98,42)
Info:                Sink RS232_Rx_LUT4_A_Z_LUT4_C_Z_PFUMX_Z_2_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  7.9  Source RS232_Rx_LUT4_A_Z_LUT4_C_Z_PFUMX_Z_2_SLICE.OFX0
Info:  0.1  8.0    Net RS232_Rx_LUT4_A_Z_LUT4_C_Z[4] budget 3.617000 ns (98,42) -> (98,42)
Info:                Sink RS232_Rx_LUT4_A_Z_LUT4_C_Z_PFUMX_Z_2_SLICE.DI0
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart.v:0.0-0.0
Info:                  uart.v:155.9-258.16
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  8.0  Setup RS232_Rx_LUT4_A_Z_LUT4_C_Z_PFUMX_Z_2_SLICE.DI0
Info: 0.5 ns logic, 7.4 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.0  0.0  Source resetn$tr_io.O
Info:  4.3  4.3    Net resetn$TRELLIS_IO_IN budget 1.498000 ns (0,47) -> (109,39)
Info:                Sink pulses.inh_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:5.9-5.15
Info:  0.1  4.5  Source pulses.inh_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.F0
Info:  0.5  5.0    Net pulses.inh_TRELLIS_FF_Q_CE[1] budget 0.780000 ns (109,39) -> (109,39)
Info:                Sink pulses.inh_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.1  Source pulses.inh_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.F1
Info:  0.2  5.3    Net pulses.sync_TRELLIS_FF_Q_LSR budget 0.780000 ns (109,39) -> (108,39)
Info:                Sink pulses.sync_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.LSR
Info:  0.2  5.5  Setup pulses.sync_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.LSR
Info: 0.5 ns logic, 5.0 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_out_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q1
Info:  6.1  6.4    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (106,42) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart.v:105.9-105.15
Info:                  pulse_control.v:82.7-94.4
Info: 0.3 ns logic, 6.1 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.3  0.3  Source pulses.nutation_pulse_delay_TRELLIS_FF_Q_12_SLICE.Q0
Info:  0.9  1.2    Net pulses.nutation_pulse_delay[3] budget 1.068000 ns (99,37) -> (99,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_3$CCU2_SLICE.B1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:89.14-89.34
Info:  0.3  1.5  Source control.period_CCU2C_A0_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  1.5    Net control.period_CCU2C_A0_3_COUT[4] budget 0.000000 ns (99,36) -> (99,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.5  Source control.period_CCU2C_A0_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  1.5    Net control.period_CCU2C_A0_3_COUT[6] budget 0.000000 ns (99,36) -> (100,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.6  Source control.period_CCU2C_A0_S0_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  1.6    Net control.period_CCU2C_A0_3_COUT[8] budget 0.000000 ns (100,36) -> (100,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.6  Source control.period_CCU2C_A0_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  1.6    Net control.period_CCU2C_A0_3_COUT[10] budget 0.000000 ns (100,36) -> (100,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.7  Source control.period_CCU2C_A0_S0_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  1.7    Net control.period_CCU2C_A0_3_COUT[12] budget 0.000000 ns (100,36) -> (100,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.7  Source control.period_CCU2C_A0_S0_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  1.7    Net control.period_CCU2C_A0_3_COUT[14] budget 0.000000 ns (100,36) -> (101,36)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.7  Source control.period_CCU2C_A0_S0_CCU2C_S0_4$CCU2_SLICE.FCO
Info:  0.0  1.7    Net control.period_CCU2C_A0_3_COUT[16] budget 0.000000 ns (101,36) -> (101,36)
Info:                Sink control.period_CCU2C_A0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.8  Source control.period_CCU2C_A0_3$CCU2_SLICE.FCO
Info:  0.0  1.8    Net control.period_CCU2C_A0_3_COUT[18] budget 0.000000 ns (101,36) -> (101,36)
Info:                Sink control.period_CCU2C_A0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.54
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.3  2.0  Source control.period_CCU2C_A0_2$CCU2_SLICE.F0
Info:  1.1  3.2    Net control.period_CCU2C_A0_S0[18] budget 1.067000 ns (101,36) -> (105,36)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_3$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.77
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:30.22-30.23
Info:  0.3  3.5  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  3.5    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[20] budget 0.000000 ns (105,36) -> (105,36)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.77
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.5  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  3.5    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[22] budget 0.000000 ns (105,36) -> (106,36)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.77
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.3  3.8  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.F1
Info:  0.1  3.9    Net pulses.nutation_pulse_width_CCU2C_B0_S0[23] budget 1.067000 ns (106,36) -> (106,36)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.DI1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:141.28-141.77
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.0  3.9  Setup pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.DI1
Info: 1.7 ns logic, 2.1 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.block_LUT4_D_SLICE.Q0
Info:  1.4  1.7    Net P2$TRELLIS_IO_OUT budget 83.024002 ns (109,39) -> (126,41)
Info:                Sink P2$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:82.9-106.4
Info:                  pulses.v:46.13-46.18
Info: 0.3 ns logic, 1.4 ns routing

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 150.17 MHz (PASS at 50.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 328.08 MHz (PASS at 200.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 7.95 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 5.55 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 6.36 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 3.88 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 1.72 ns

Info: Slack histogram:
Info:  legend: * represents 5 endpoint(s)
Info:          + represents [1,5) endpoint(s)
Info: [  -549,   3567) |**************+
Info: [  3567,   7683) |+
Info: [  7683,  11799) | 
Info: [ 11799,  15915) |******************************+
Info: [ 15915,  20031) |************************************************************ 
Info: [ 20031,  24147) | 
Info: [ 24147,  28263) | 
Info: [ 28263,  32379) | 
Info: [ 32379,  36495) | 
Info: [ 36495,  40611) | 
Info: [ 40611,  44727) | 
Info: [ 44727,  48843) | 
Info: [ 48843,  52959) | 
Info: [ 52959,  57075) | 
Info: [ 57075,  61191) | 
Info: [ 61191,  65307) | 
Info: [ 65307,  69423) | 
Info: [ 69423,  73539) | 
Info: [ 73539,  77655) |+
Info: [ 77655,  81771) |+
ecppack --svf pulse_gen.svf pulse_gen_out.config pulse_gen.bit
rm pulse_gen_out.config pulse_gen.json
