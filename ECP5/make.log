yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$144 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$144 in module uart.
Marked 1 switch rules as full_case in process $proc$pulses.v:155$59 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:129$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:129$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 76 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$403'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$173'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$172'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$171'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:91$136'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:87$135'.
  Set init value: \nutation_pulse_delay = 16'0000000100101100
Found init rule in `\pulses.$proc$pulses.v:86$134'.
  Set init value: \nutation_pulse_width = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:82$132'.
  Set init value: \block_on = 16'0000000111001100
Found init rule in `\pulses.$proc$pulses.v:81$131'.
  Set init value: \block_off = 16'0000000110011010
Found init rule in `\pulses.$proc$pulses.v:80$130'.
  Set init value: \sync_down = 16'0000000100000100
Found init rule in `\pulses.$proc$pulses.v:79$129'.
  Set init value: \p2start = 16'0000000011100110
Found init rule in `\pulses.$proc$pulses.v:76$127'.
  Set init value: \block = 1'1
Found init rule in `\pulses.$proc$pulses.v:75$126'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulses.$proc$pulses.v:74$125'.
  Set init value: \pulse_block_off = 16'0000000001100100
Found init rule in `\pulses.$proc$pulses.v:73$124'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:72$123'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:71$122'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulses.$proc$pulses.v:70$121'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:69$120'.
  Set init value: \period = 65536
Found init rule in `\pulses.$proc$pulses.v:57$119'.
  Set init value: \cw = 1'0
Found init rule in `\pulses.$proc$pulses.v:48$117'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:126$45'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:109$44'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:108$43'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:106$41'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:45$40'.
  Set init value: \nut_wid = 8'00000000
Found init rule in `\pulse_control.$proc$pulse_control.v:44$39'.
  Set init value: \nut_del = 16'0000000000000000
Found init rule in `\pulse_control.$proc$pulse_control.v:43$38'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:42$37'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:41$36'.
  Set init value: \cpmg = 8'00000001
Found init rule in `\pulse_control.$proc$pulse_control.v:39$34'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:38$33'.
  Set init value: \p2width = 16'0000000000111100
Found init rule in `\pulse_control.$proc$pulse_control.v:37$32'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:36$31'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:35$30'.
  Set init value: \period = 983040

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$403'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$396'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_EN[3:0]$378
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_DATA[3:0]$377
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_ADDR[3:0]$376
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$342'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_EN[3:0]$323
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_DATA[3:0]$322
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_ADDR[3:0]$321
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
Creating decoders for process `\uart.$proc$uart.v:106$173'.
Creating decoders for process `\uart.$proc$uart.v:105$172'.
Creating decoders for process `\uart.$proc$uart.v:101$171'.
Creating decoders for process `\uart.$proc$uart.v:135$144'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:97$137'.
Creating decoders for process `\pulses.$proc$pulses.v:91$136'.
Creating decoders for process `\pulses.$proc$pulses.v:87$135'.
Creating decoders for process `\pulses.$proc$pulses.v:86$134'.
Creating decoders for process `\pulses.$proc$pulses.v:85$133'.
Creating decoders for process `\pulses.$proc$pulses.v:82$132'.
Creating decoders for process `\pulses.$proc$pulses.v:81$131'.
Creating decoders for process `\pulses.$proc$pulses.v:80$130'.
Creating decoders for process `\pulses.$proc$pulses.v:79$129'.
Creating decoders for process `\pulses.$proc$pulses.v:77$128'.
Creating decoders for process `\pulses.$proc$pulses.v:76$127'.
Creating decoders for process `\pulses.$proc$pulses.v:75$126'.
Creating decoders for process `\pulses.$proc$pulses.v:74$125'.
Creating decoders for process `\pulses.$proc$pulses.v:73$124'.
Creating decoders for process `\pulses.$proc$pulses.v:72$123'.
Creating decoders for process `\pulses.$proc$pulses.v:71$122'.
Creating decoders for process `\pulses.$proc$pulses.v:70$121'.
Creating decoders for process `\pulses.$proc$pulses.v:69$120'.
Creating decoders for process `\pulses.$proc$pulses.v:57$119'.
Creating decoders for process `\pulses.$proc$pulses.v:56$118'.
Creating decoders for process `\pulses.$proc$pulses.v:48$117'.
Creating decoders for process `\pulses.$proc$pulses.v:155$59'.
     1/13: $0\cblock_on[31:0]
     2/13: $0\cblock_delay[31:0]
     3/13: $0\cpulse[31:0]
     4/13: $0\cdelay[31:0]
     5/13: $0\ccount[7:0]
     6/13: $0\nutation_pulse_stop[23:0]
     7/13: $0\nutation_pulse_start[23:0]
     8/13: $0\inh[0:0]
     9/13: $0\nut_pulse[0:0]
    10/13: $0\pulse[0:0]
    11/13: $0\sync[0:0]
    12/13: $0\counter[31:0]
    13/13: $0\pulses[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:109$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:126$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:109$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:108$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:107$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:106$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:36$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:35$30'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:129$3'.
     1/31: $2\rx_done[0:0]
     2/31: $4$bitselwrite$data$pulse_control.v:145$2[31:0]$14
     3/31: $4$bitselwrite$mask$pulse_control.v:145$1[31:0]$13
     4/31: $4\vinput[31:0]
     5/31: $3$bitselwrite$data$pulse_control.v:145$2[31:0]$11
     6/31: $3$bitselwrite$mask$pulse_control.v:145$1[31:0]$10
     7/31: $3\vinput[31:0]
     8/31: $2$bitselwrite$data$pulse_control.v:145$2[31:0]$9
     9/31: $2$bitselwrite$mask$pulse_control.v:145$1[31:0]$8
    10/31: $2\vinput[31:0]
    11/31: $1$bitselwrite$data$pulse_control.v:145$2[31:0]$7
    12/31: $1$bitselwrite$mask$pulse_control.v:145$1[31:0]$6
    13/31: $1\vinput[31:0]
    14/31: $1\voutput[7:0]
    15/31: $1\rx_done[0:0]
    16/31: $0\state[2:0]
    17/31: $0\readcount[5:0]
    18/31: $0\readstate[1:0]
    19/31: $0\writestate[0:0]
    20/31: $0\vcontrol[7:0]
    21/31: $0\tx_byte[7:0]
    22/31: $0\transmit[0:0]
    23/31: $0\cpmg[7:0]
    24/31: $0\pulse_block[7:0]
    25/31: $0\block[0:0]
    26/31: $0\nut_wid[7:0]
    27/31: $0\nut_del[15:0]
    28/31: $0\p2width[15:0]
    29/31: $0\delay[15:0]
    30/31: $0\p1width[15:0]
    31/31: $0\period[31:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\xfer_bits' from process `\pulses.$proc$pulses.v:97$137'.
No latch inferred for signal `\pulses.\nutation_pulse' from process `\pulses.$proc$pulses.v:85$133'.
No latch inferred for signal `\pulses.\rx_done' from process `\pulses.$proc$pulses.v:77$128'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:56$118'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:107$42'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:40$35'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
  created $dff cell `$procdff$1421' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$396'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
  created $dff cell `$procdff$1422' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
  created $dff cell `$procdff$1423' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$374_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
  created $dff cell `$procdff$1424' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$342'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
  created $dff cell `$procdff$1425' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
  created $dff cell `$procdff$1426' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$318_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
  created $dff cell `$procdff$1427' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1428' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1429' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1430' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1431' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1432' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1433' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1434' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1435' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1436' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1437' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$144'.
  created $dff cell `$procdff$1438' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1439' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1440' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1441' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1442' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1443' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1444' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1445' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1446' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1447' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1448' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1449' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1450' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:155$59'.
  created $dff cell `$procdff$1451' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1452' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1453' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1454' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1455' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1456' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1457' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_off' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1458' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1459' with positive edge clock.
Creating register for signal `\pulses.\cw' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1460' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1461' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1462' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1463' with positive edge clock.
Creating register for signal `\pulses.\block_on' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1464' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1465' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:109$46'.
  created $dff cell `$procdff$1466' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1467' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1468' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1469' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1470' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1471' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1472' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1473' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1474' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1475' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1476' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1477' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1478' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1479' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1480' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1481' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1482' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1483' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1484' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1485' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:145$1' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1486' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:145$2' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1487' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$403'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$399'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$396'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$375'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$342'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$320'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$319'.
Removing empty process `uart.$proc$uart.v:106$173'.
Removing empty process `uart.$proc$uart.v:105$172'.
Removing empty process `uart.$proc$uart.v:101$171'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$144'.
Removing empty process `uart.$proc$uart.v:135$144'.
Removing empty process `pulses.$proc$pulses.v:97$137'.
Removing empty process `pulses.$proc$pulses.v:91$136'.
Removing empty process `pulses.$proc$pulses.v:87$135'.
Removing empty process `pulses.$proc$pulses.v:86$134'.
Removing empty process `pulses.$proc$pulses.v:85$133'.
Removing empty process `pulses.$proc$pulses.v:82$132'.
Removing empty process `pulses.$proc$pulses.v:81$131'.
Removing empty process `pulses.$proc$pulses.v:80$130'.
Removing empty process `pulses.$proc$pulses.v:79$129'.
Removing empty process `pulses.$proc$pulses.v:77$128'.
Removing empty process `pulses.$proc$pulses.v:76$127'.
Removing empty process `pulses.$proc$pulses.v:75$126'.
Removing empty process `pulses.$proc$pulses.v:74$125'.
Removing empty process `pulses.$proc$pulses.v:73$124'.
Removing empty process `pulses.$proc$pulses.v:72$123'.
Removing empty process `pulses.$proc$pulses.v:71$122'.
Removing empty process `pulses.$proc$pulses.v:70$121'.
Removing empty process `pulses.$proc$pulses.v:69$120'.
Removing empty process `pulses.$proc$pulses.v:57$119'.
Removing empty process `pulses.$proc$pulses.v:56$118'.
Removing empty process `pulses.$proc$pulses.v:48$117'.
Found and cleaned up 7 empty switches in `\pulses.$proc$pulses.v:155$59'.
Removing empty process `pulses.$proc$pulses.v:155$59'.
Removing empty process `pulses.$proc$pulses.v:109$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:126$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:109$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:108$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:107$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:106$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:36$31'.
Removing empty process `pulse_control.$proc$pulse_control.v:35$30'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:129$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:129$3'.
Cleaned up 37 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~107 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 92 unused cells and 384 unused wires.
<suppressed ~107 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~576 debug messages>
Removed a total of 192 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1294: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1292: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1296: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$577.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$587.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$589.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$599.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$601.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$611.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$613.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$622.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$631.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$640.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$649.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$658.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$667.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$678.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$680.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$690.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$700.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$710.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$720.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$732.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$734.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$746.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$748.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$760.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$762.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$774.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$776.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$788.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$790.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$801.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$812.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$823.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$834.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$845.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$857.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$869.
    dead port 2/2 on $mux $flatten\control.$procmux$1146.
    dead port 2/2 on $mux $flatten\control.$procmux$1148.
    dead port 2/2 on $mux $flatten\control.$procmux$1150.
    dead port 2/2 on $mux $flatten\control.$procmux$1184.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$427.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$429.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$437.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$439.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$447.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$449.
    dead port 2/2 on $mux $flatten\control.$procmux$1186.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$457.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$459.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$467.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$469.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$476.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$483.
    dead port 2/2 on $mux $flatten\control.$procmux$1213.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$490.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$497.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$504.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$512.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$520.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$528.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$536.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$544.
Removed 62 multiplexer ports.
<suppressed ~37 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$880: { $flatten\control.\uart0.$procmux$858_CMP $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP $flatten\control.\uart0.$procmux$874_CMP $auto$opt_reduce.cc:134:opt_mux$1489 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$889: { $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1491 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$898: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1493 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$907: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1495 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$916: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP $auto$opt_reduce.cc:134:opt_mux$1497 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1008: $auto$opt_reduce.cc:134:opt_mux$1499
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1028: $auto$opt_reduce.cc:134:opt_mux$1501
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$546: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1503 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1505 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$952: $auto$opt_reduce.cc:134:opt_mux$1507
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$561: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1509 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1260: { $flatten\control.$procmux$1151_CMP $auto$opt_reduce.cc:134:opt_mux$1511 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$972: $auto$opt_reduce.cc:134:opt_mux$1513
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$566: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP $auto$opt_reduce.cc:134:opt_mux$1515 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$990: $auto$opt_reduce.cc:134:opt_mux$1517
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1466 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1465 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1465 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1465 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1465 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1465 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1459 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1458 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1457 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1456 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1455 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1454 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1453 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 17 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 18 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 19 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 20 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 21 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 22 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 23 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 24 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 25 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 26 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 27 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 28 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 29 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 30 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.
Setting constant 0-bit at position 31 on $flatten\pulses.$procdff$1452 ($dff) from module pulse_gen.

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 262 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~3 debug messages>

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Rerunning OPT passes. (Maybe there is more to do..)

6.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

6.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1461 ($dff) from module pulse_gen.

6.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.23. Rerunning OPT passes. (Maybe there is more to do..)

6.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

6.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.27. Executing OPT_DFF pass (perform DFF optimizations).

6.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.30. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pulses.$procdff$1451 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$949_Y, Q = \pulses.cblock_on).
Adding EN signal on $flatten\pulses.$procdff$1450 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$969_Y, Q = \pulses.cblock_delay).
Adding EN signal on $flatten\pulses.$procdff$1449 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$987_Y, Q = \pulses.cpulse).
Adding EN signal on $flatten\pulses.$procdff$1448 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1005_Y, Q = \pulses.cdelay).
Adding SRST signal on $auto$opt_dff.cc:764:run$1585 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$1003_Y, Q = \pulses.cdelay, rval = 230).
Adding EN signal on $flatten\pulses.$procdff$1447 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1025_Y, Q = \pulses.ccount).
Adding SRST signal on $auto$opt_dff.cc:764:run$1605 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$1023_Y, Q = \pulses.ccount, rval = 8'00000000).
Adding EN signal on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:159$61_Y [23:0], Q = \pulses.nutation_pulse_stop).
Adding EN signal on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:159$62_Y [23:0], Q = \pulses.nutation_pulse_start).
Adding EN signal on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1054_Y, Q = \pulses.inh).
Adding EN signal on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:162$67_Y [0], Q = \pulses.nut_pulse).
Adding SRST signal on $auto$opt_dff.cc:764:run$1628 ($dffe) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:163$66_Y [0], Q = \pulses.nut_pulse, rval = 1'0).
Adding EN signal on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen (D = $flatten\pulses.$logic_or$pulses.v:244$116_Y, Q = \pulses.pulse).
Adding EN signal on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1074_Y, Q = \pulses.sync).
Adding EN signal on $flatten\pulses.$procdff$1440 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:243$115_Y, Q = \pulses.counter).
Adding SRST signal on $auto$opt_dff.cc:764:run$1646 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:243$114_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1096_Y, Q = \pulses.pulses).
Adding EN signal on $flatten\control.\uart0.$procdff$1438 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1437 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1436 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1435 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1434 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1433 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1432 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1429 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1428 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1485 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1484 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1483 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1280_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1482 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1481 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:162$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1480 ($dff) from module pulse_gen (D = \control.uart0.rx_data, Q = \control.vcontrol).
Adding EN signal on $flatten\control.$procdff$1479 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1478 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1477 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1467 ($dff) from module pulse_gen (D = \control.vinput, Q = \control.period).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 37 unused cells and 37 unused wires.
<suppressed ~38 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~21 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$546: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$561: { $flatten\control.\uart0.$procmux$513_CMP $flatten\control.\uart0.$procmux$430_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$889: $flatten\control.\uart0.$procmux$590_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$898: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$590_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$907: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$916: { $flatten\control.\uart0.$procmux$735_CMP $flatten\control.\uart0.$procmux$681_CMP $flatten\control.\uart0.$procmux$590_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 7 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 65 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 9) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1612 ($ne).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1614 ($ne).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1634 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1640 ($ne).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1651 ($ne).
Removed top 1 bits (of 6) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1653 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1666 ($ne).
Removed top 1 bits (of 5) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1559 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1787 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$156 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$158 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$162 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$169 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$430_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$435 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$445 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$465 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$474 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$481 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$488 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$495 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$510 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$518 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$526 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$542 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$575 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$590_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$597 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$620 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$638 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$647 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$656 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$665 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$676 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$681_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$688 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$698 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$718 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$730 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$735_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$744 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$772 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$799 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$810 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$832 ($mux).
Removed top 4 bits (of 5) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1523 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$843 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$855 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$889 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1418_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1330 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1326 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1286 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1284 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1281_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1278 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1271 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1269 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1256 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1254 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1252 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1246_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1242 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1238 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1233_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:146$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:146$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1769 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1765 ($ne).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1759 ($ne).
Removed cell pulse_gen.$flatten\pulses.$procmux$1087 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1076 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1069 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1067 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1065 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1049 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1047 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1045 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1041 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1039 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1037 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1023 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1021 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1019 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1017 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1015 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1013 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$1003 ($mux).
Removed top 27 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$1004_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$1001 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$999 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$997 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$985 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$983 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$981 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$979 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$967 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$965 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$963 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$961 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$959 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$957 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$947 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$945 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$943 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$941 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$939 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$937 ($mux).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:243$114 ($add).
Removed top 15 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:243$113 ($lt).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:237$112 ($add).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:237$112 ($add).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:235$111 ($add).
Removed top 2 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:234$110 ($add).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:221$107 ($mux).
Removed top 6 bits (of 8) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:221$104 ($sub).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$sub$pulses.v:221$104 ($sub).
Removed top 29 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$sub$pulses.v:221$104 ($sub).
Removed top 10 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:217$103 ($add).
Removed top 8 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:216$100 ($add).
Removed top 8 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:216$99 ($add).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:208$97 ($mux).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:208$95 ($lt).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:198$94 ($add).
Removed top 2 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:197$91 ($add).
Removed top 24 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$add$pulses.v:196$88 ($add).
Removed top 10 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:196$88 ($add).
Removed top 23 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:196$88 ($add).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:181$85 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:178$83 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:179$81 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:174$77 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:175$76 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:176$74 ($mux).
Removed top 8 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:175$71 ($lt).
Removed top 11 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:174$70 ($lt).
Removed top 1 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$eq$pulses.v:168$69 ($eq).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:163$66 ($mux).
Removed top 2 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$sub$pulses.v:159$62 ($sub).
Removed top 8 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$sub$pulses.v:159$62 ($sub).
Removed top 8 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:159$62 ($sub).
Removed top 7 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$sub$pulses.v:159$61 ($sub).
Removed top 8 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$sub$pulses.v:159$61 ($sub).
Removed top 8 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:159$61 ($sub).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:149$58 ($mux).
Removed top 6 bits (of 8) from port A of cell pulse_gen.$flatten\pulses.$gt$pulses.v:149$57 ($gt).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$gt$pulses.v:149$57 ($gt).
Removed top 2 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$sub$pulses.v:140$53 ($sub).
Removed top 8 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:140$52 ($add).
Removed top 8 bits (of 16) from port A of cell pulse_gen.$flatten\pulses.$add$pulses.v:139$49 ($add).
Removed top 10 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:139$49 ($add).
Removed top 7 bits (of 16) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:139$49 ($add).
Removed top 5 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1521 ($ne).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:146$23_Y.
Removed top 24 bits (of 32) from wire pulse_gen.$flatten\control.$and$pulse_control.v:0$17_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1284_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$156_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$162_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$169_Y.
Removed top 7 bits (of 16) from wire pulse_gen.$flatten\pulses.$0\sync_down[15:0].
Removed top 23 bits (of 32) from wire pulse_gen.$flatten\pulses.$add$pulses.v:196$88_Y.
Removed top 8 bits (of 32) from wire pulse_gen.$flatten\pulses.$sub$pulses.v:159$61_Y.
Removed top 8 bits (of 32) from wire pulse_gen.$flatten\pulses.$sub$pulses.v:159$62_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:163$66_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:174$77_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:176$74_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 99 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$370dbbe8c2dcbcc7124bbba74c867aa77585b957\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~222 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:146$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$153 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$146 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$148 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$154 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$159 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$167 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:139$49 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:140$52 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:196$88 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:197$91 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:198$94 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:216$100 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:216$99 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:217$103 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:234$110 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:235$111 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:237$112 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:243$114 ($add).
  creating $macc model for $flatten\pulses.$sub$pulses.v:140$53 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:159$61 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:159$62 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:221$104 ($sub).
  merging $macc model for $flatten\pulses.$add$pulses.v:216$99 into $flatten\pulses.$add$pulses.v:216$100.
  merging $macc model for $flatten\control.$add$pulse_control.v:162$26 into $flatten\control.$add$pulse_control.v:162$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:162$25 into $flatten\control.$add$pulse_control.v:162$27.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:140$53.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:243$114.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:237$112.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:235$111.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:234$110.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:217$103.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:159$61.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:198$94.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:197$91.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:196$88.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:140$52.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:139$49.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$167.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$159.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$154.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$148.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$146.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$153.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:159$62.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:221$104.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:146$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:162$27: $auto$alumacc.cc:365:replace_macc$1847
  creating $macc cell for $flatten\pulses.$add$pulses.v:216$100: $auto$alumacc.cc:365:replace_macc$1848
  creating $alu model for $flatten\pulses.$lt$pulses.v:162$64 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:163$65 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:174$70 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:175$71 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:176$72 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:178$78 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:179$79 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:208$95 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:243$113 ($lt): new $alu
  creating $alu model for $flatten\pulses.$procmux$1004_CMP0 ($eq): merged with $flatten\pulses.$lt$pulses.v:174$70.
  creating $alu cell for $flatten\pulses.$lt$pulses.v:243$113: $auto$alumacc.cc:485:replace_alu$1858
  creating $alu cell for $flatten\pulses.$lt$pulses.v:208$95: $auto$alumacc.cc:485:replace_alu$1869
  creating $alu cell for $flatten\pulses.$lt$pulses.v:179$79: $auto$alumacc.cc:485:replace_alu$1880
  creating $alu cell for $flatten\pulses.$lt$pulses.v:178$78: $auto$alumacc.cc:485:replace_alu$1891
  creating $alu cell for $flatten\pulses.$lt$pulses.v:176$72: $auto$alumacc.cc:485:replace_alu$1902
  creating $alu cell for $flatten\pulses.$lt$pulses.v:175$71: $auto$alumacc.cc:485:replace_alu$1913
  creating $alu cell for $flatten\pulses.$lt$pulses.v:174$70, $flatten\pulses.$procmux$1004_CMP0: $auto$alumacc.cc:485:replace_alu$1924
  creating $alu cell for $flatten\pulses.$lt$pulses.v:163$65: $auto$alumacc.cc:485:replace_alu$1935
  creating $alu cell for $flatten\pulses.$lt$pulses.v:162$64: $auto$alumacc.cc:485:replace_alu$1946
  creating $alu cell for $flatten\control.$add$pulse_control.v:146$23: $auto$alumacc.cc:485:replace_alu$1957
  creating $alu cell for $flatten\pulses.$sub$pulses.v:221$104: $auto$alumacc.cc:485:replace_alu$1960
  creating $alu cell for $flatten\pulses.$sub$pulses.v:159$62: $auto$alumacc.cc:485:replace_alu$1963
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$153: $auto$alumacc.cc:485:replace_alu$1966
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$146: $auto$alumacc.cc:485:replace_alu$1969
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$148: $auto$alumacc.cc:485:replace_alu$1972
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$154: $auto$alumacc.cc:485:replace_alu$1975
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$159: $auto$alumacc.cc:485:replace_alu$1978
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$167: $auto$alumacc.cc:485:replace_alu$1981
  creating $alu cell for $flatten\pulses.$add$pulses.v:140$52: $auto$alumacc.cc:485:replace_alu$1984
  creating $alu cell for $flatten\pulses.$add$pulses.v:139$49: $auto$alumacc.cc:485:replace_alu$1987
  creating $alu cell for $flatten\pulses.$add$pulses.v:196$88: $auto$alumacc.cc:485:replace_alu$1990
  creating $alu cell for $flatten\pulses.$add$pulses.v:197$91: $auto$alumacc.cc:485:replace_alu$1993
  creating $alu cell for $flatten\pulses.$add$pulses.v:198$94: $auto$alumacc.cc:485:replace_alu$1996
  creating $alu cell for $flatten\pulses.$sub$pulses.v:159$61: $auto$alumacc.cc:485:replace_alu$1999
  creating $alu cell for $flatten\pulses.$add$pulses.v:217$103: $auto$alumacc.cc:485:replace_alu$2002
  creating $alu cell for $flatten\pulses.$add$pulses.v:234$110: $auto$alumacc.cc:485:replace_alu$2005
  creating $alu cell for $flatten\pulses.$add$pulses.v:235$111: $auto$alumacc.cc:485:replace_alu$2008
  creating $alu cell for $flatten\pulses.$add$pulses.v:237$112: $auto$alumacc.cc:485:replace_alu$2011
  creating $alu cell for $flatten\pulses.$add$pulses.v:243$114: $auto$alumacc.cc:485:replace_alu$2014
  creating $alu cell for $flatten\pulses.$sub$pulses.v:140$53: $auto$alumacc.cc:485:replace_alu$2017
  created 30 $alu and 2 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~9 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~5 debug messages>
Removed a total of 1 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$907: { $flatten\control.\uart0.$procmux$681_CMP $auto$opt_reduce.cc:134:opt_mux$2021 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$916: { $flatten\control.\uart0.$procmux$681_CMP $auto$opt_reduce.cc:134:opt_mux$2023 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Adding SRST signal on $auto$opt_dff.cc:764:run$1570 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:217$103_Y [31:9], Q = \pulses.cpulse [31:9], rval = 23'00000000000000000000000).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 11 unused cells and 25 unused wires.
<suppressed ~12 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~378 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1820 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1328_Y, Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1793 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1294_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1790 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1826 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1781 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1824 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1757 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1742 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1698 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1682 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1671 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 15 unused cells and 111 unused wires.
<suppressed ~17 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1464 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1463 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1462 ($dff) from module pulse_gen.
Adding SRST signal on $auto$opt_dff.cc:764:run$1570 ($dffe) from module pulse_gen (D = { $flatten\pulses.$add$pulses.v:217$103_Y [7:6] $flatten\pulses.$add$pulses.v:217$103_Y [4:3] $auto$alumacc.cc:501:replace_alu$2003 [0] }, Q = { \pulses.cpulse [7:6] \pulses.cpulse [4:3] \pulses.cpulse [0] }, rval = 5'00000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1555 ($dffe) from module pulse_gen (D = { $flatten\pulses.$add$pulses.v:234$110_Y [31:9] $flatten\pulses.$add$pulses.v:234$110_Y [7] $flatten\pulses.$add$pulses.v:234$110_Y [4] \pulses.cpulse [0] }, Q = { \pulses.cblock_delay [31:9] \pulses.cblock_delay [7] \pulses.cblock_delay [4] \pulses.cblock_delay [0] }, rval = 26'00000000000000000000000010).
Adding SRST signal on $auto$opt_dff.cc:764:run$1536 ($dffe) from module pulse_gen (D = { $flatten\pulses.$add$pulses.v:235$111_Y [31:9] $flatten\pulses.$add$pulses.v:235$111_Y [4] \pulses.cpulse [0] }, Q = { \pulses.cblock_on [31:9] \pulses.cblock_on [4] \pulses.cblock_on [0] }, rval = 25'0000000000000000000000000).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Rerunning OPT passes. (Removed registers in this run.)

6.30.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.30.13. Executing OPT_DFF pass (perform DFF optimizations).

6.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.15. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1074.
Removed 1 multiplexer ports.
<suppressed ~22 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1240:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1240_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1240_Y [1]
      New connections: { $flatten\control.$procmux$1240_Y [2] $flatten\control.$procmux$1240_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1280:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1826 [0] }, B=2'00, Y=$flatten\control.$procmux$1280_Y
      New ports: A=$auto$wreduce.cc:454:run$1826 [0], B=1'0, Y=$flatten\control.$procmux$1280_Y [0]
      New connections: $flatten\control.$procmux$1280_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$435:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1829 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1829 [9] $auto$wreduce.cc:454:run$1829 [1] }
      New connections: { $auto$wreduce.cc:454:run$1829 [8:2] $auto$wreduce.cc:454:run$1829 [0] } = { 1'0 $auto$wreduce.cc:454:run$1829 [1] $auto$wreduce.cc:454:run$1829 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$585:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$597:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1831 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1831 [2] $auto$wreduce.cc:454:run$1831 [0] }
      New connections: { $auto$wreduce.cc:454:run$1831 [9:3] $auto$wreduce.cc:454:run$1831 [1] } = { $auto$wreduce.cc:454:run$1831 [0] $auto$wreduce.cc:454:run$1831 [2] $auto$wreduce.cc:454:run$1831 [2] 1'1 $auto$wreduce.cc:454:run$1831 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$609:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$758:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$164:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$164_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$164_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$164_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$164_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$170:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$170_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$170_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$170_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$170_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1245:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1240_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1240_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1 debug messages>

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1790 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1772 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \pulses.cpulse (32 bits, unsigned)
  add 400 (32 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=7\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=23\B_WIDTH=5\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
No more expansions possible.
<suppressed ~3526 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~2536 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~1815 debug messages>
Removed a total of 605 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6206 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6206 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6207 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6207 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6208 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$6208 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 627 unused cells and 2399 unused wires.
<suppressed ~628 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~81 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~279 debug messages>
Removed a total of 93 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4632 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1245.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4631 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1245.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2916 ($_DFFE_PP_) from module pulse_gen (D = $auto$alumacc.cc:485:replace_alu$2008.Y [6], Q = \pulses.cblock_on [8], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2842 ($_DFFE_PP_) from module pulse_gen (D = $auto$alumacc.cc:485:replace_alu$2005.Y [7], Q = \pulses.cblock_delay [8], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2839 ($_DFFE_PP_) from module pulse_gen (D = $auto$alumacc.cc:485:replace_alu$2005.Y [2], Q = \pulses.cblock_delay [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2804 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$871.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2803 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$871.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2802 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$871.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2749 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2723 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$556.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2722 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$556.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2433 ($_DFFE_PP_) from module pulse_gen (D = $auto$alumacc.cc:485:replace_alu$2002.Y [7], Q = \pulses.cpulse [8], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 12 unused cells and 17 unused wires.
<suppressed ~13 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $auto$simplemap.cc:420:simplemap_dff$5005 ($_DFF_P_) from module pulse_gen.
Setting constant 0-bit at position 0 on $auto$simplemap.cc:420:simplemap_dff$5004 ($_DFF_P_) from module pulse_gen.

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Rerunning OPT passes. (Removed registers in this run.)

6.34.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~8 debug messages>

6.34.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.34.18. Executing OPT_DFF pass (perform DFF optimizations).

6.34.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

6.34.20. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
No more expansions possible.
<suppressed ~517 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~9 debug messages>

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2027 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 1761 gates and 2150 wires to a netlist network with 387 inputs and 335 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     230.
ABC: Participating nodes from both networks       =     600.
ABC: Participating nodes from the first network   =     270. (  46.31 % of nodes)
ABC: Participating nodes from the second network  =     330. (  56.60 % of nodes)
ABC: Node pairs (any polarity)                    =     270. (  46.31 % of names can be moved)
ABC: Node pairs (same polarity)                   =     248. (  42.54 % of names can be moved)
ABC: Total runtime =     0.11 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      582
ABC RESULTS:        internal signals:     1428
ABC RESULTS:           input signals:      387
ABC RESULTS:          output signals:      335
Removing temp directory.
Removed 0 unused cells and 1183 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod$0d7a58a2521c9f7f639d5074fac2fc6fc0481634\$lut for cells of type $lut.
Using template $paramod$ed1e42d11e35854322e05c8629e1f0580c259392\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=2147483646 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1073741824 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000000000000000000000000 for cells of type $lut.
Using template $paramod$5547587bde2f1ca8d884d89fe5b90567ab8bb30e\$lut for cells of type $lut.
Using template $paramod$f8bdca125e424c8e9c5f5e84960e0e034e7c473c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod$5fba6fa4affd3d8cb90b92595f737467c857f3c8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=8323072 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111110000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111110100000000000000 for cells of type $lut.
Using template $paramod$91402588a896aa184d68f079cbc5393fa1808e43\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111010100110000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=2147418112 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=33023 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000010010000000000000000 for cells of type $lut.
Using template $paramod$36e75924b620e48f6b774d72fd40dfe307f8cefe\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod$629bea346f0daddb39cb1ebf17c36b3d1144d5d1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000011010000000000000000 for cells of type $lut.
Using template $paramod$28e488a7a995356dca8b409c88d583e4400b19bb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod$561e376e62fd0ae35c0d0864d2d69979f67e9294\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001111111110000000 for cells of type $lut.
Using template $paramod$86ec55951e751e01f0ebadb646bf44d0d37cfcd1\$lut for cells of type $lut.
Using template $paramod$d611654eaf2cfdde5476b49ff7dde7a3d8cbca2c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=47883 for cells of type $lut.
Using template $paramod$4266f47e50d92aaa9f0abe526e1897112700a1b7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101111100 for cells of type $lut.
Using template $paramod$2f529d427cc924a1cc28701d0b34219e93566eb9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32767 for cells of type $lut.
Using template $paramod$29797f0e900e4990cb002f3455f794abfcd86536\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10110000000010110000000000000000 for cells of type $lut.
Using template $paramod$0e3bb8f3625af885f1c4bdff3d5b4d92aeae6270\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1090453504 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=268372104 for cells of type $lut.
Using template $paramod$1d1818d1f1b1719676dd231e382e918f6e9a16a2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111100001111111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000000000000000000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~2019 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11309.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11323.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11323.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11420.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11464.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11461.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11466.lut2 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut6 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut2 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut3 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut4 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut5 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut6 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11579.lut1 (4 -> 2)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11579.lut2 (4 -> 2)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11572.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11564.lut7 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11565.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11565.lut2 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11565.lut3 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11566.lut7 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11684.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11693.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11685.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11702.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11689.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11698.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11690.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11707.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11694.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11703.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11695.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11712.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11699.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11708.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11700.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11704.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11705.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11709.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11710.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut7 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11334.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11334.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11711.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11706.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11701.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11696.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11691.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11686.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11563.lut7 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11278.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11278.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11283.lut7 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11284.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11493.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11493.lut3 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11355.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11355.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut4 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut5 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut6 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11424.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11404.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11408.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11408.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11409.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11409.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11414.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11414.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11413.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11378.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11384.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11381.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11386.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11387.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11387.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11388.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11388.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11256.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11262.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11261.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut6 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut7 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11279.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11279.lut2 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11279.lut3 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut2 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut3 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut4 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut5 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut6 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut7 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11256.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11260.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11263.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11265.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11575.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11278.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11421.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11285.lut1 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11294.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11256.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11322.lut1 (4 -> 2)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11316.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11322.lut0 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11323.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11331.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11334.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11345.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11350.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11355.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11356.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11358.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11364.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11366.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11376.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11378.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11378.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11384.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11381.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11385.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11386.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11391.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11396.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11404.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11404.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11411.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11413.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11417.lut1 (4 -> 2)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11426.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11433.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11440.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11441.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11464.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11436.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11450.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11451.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11455.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11461.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11464.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11466.lut0 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11463.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11462.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11461.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11466.lut1 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11484.lut0 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11493.lut0 (4 -> 3)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11495.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11496.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11497.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11499.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11502.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11508.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11512.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11513.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11527.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11535.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11546.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11557.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut1 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11562.lut0 (4 -> 1)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11572.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11579.lut0 (4 -> 2)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11572.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11571.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11576.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11582.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11586.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11682.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11687.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11683.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11692.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11688.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11697.lut1 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11714.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11715.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11718.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11719.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11720.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11721.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11722.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11723.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11724.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11725.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11726.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11727.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11728.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11729.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11730.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11731.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11732.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11733.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11734.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11735.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11736.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11737.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11738.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11739.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11740.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11741.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11742.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11743.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11744.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11745.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11746.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11747.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11748.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11749.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11750.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11751.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11752.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11753.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11754.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11755.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11756.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11757.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11758.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11759.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11760.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11761.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11762.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11763.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11764.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11765.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11766.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11767.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11768.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11769.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11770.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11771.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11772.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11773.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11774.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11775.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11776.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11777.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11778.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11779.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11780.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11781.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11782.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11783.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11784.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11785.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11786.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11787.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11788.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11789.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11790.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11791.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11792.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11793.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11794.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11795.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11796.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11797.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11798.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11799.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11800.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11801.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11802.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11803.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11804.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11805.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11806.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11807.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11808.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11809.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11810.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11811.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11812.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11813.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11814.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11815.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11816.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11817.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11818.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11819.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11820.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11821.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11822.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11823.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11824.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11825.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11826.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11827.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11828.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11829.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11830.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11831.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11832.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11833.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11834.lut0 (4 -> 0)
  Optimizing lut $abc$11254$auto$blifparse.cc:498:parse_blif$11835.lut0 (4 -> 0)
Removed 0 unused cells and 1294 unused wires.

6.47. Executing AUTONAME pass.
Renamed 45144 objects in module pulse_gen (116 iterations).
<suppressed ~5959 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:               2727
   Number of wire bits:           5673
   Number of public wires:        2727
   Number of public wire bits:    5673
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3360
     CCU2C                         255
     EHXPLLL                         1
     L6MUX21                       414
     LUT4                         1652
     PFUMX                         663
     TRELLIS_FF                    375

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: fdc7f31d5c, CPU: user 10.28s system 0.37s, MEM: 251.18 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 20% 1x autoname (2 sec), 14% 8x techmap (1 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 200.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:      2162/83640     2%
Info:         logic LUTs:   1652/83640     1%
Info:         carry LUTs:    510/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:       750/83640     0%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y83/PIOD'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y92/PIOB'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y92/PIOC'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X126/Y83/PIOB'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk_pll to global network
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info: Checksum: 0xc417edda

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0xb39fbf6d

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:  1347/41820     3%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 658 cells, random placement wirelen = 97134.
Info:     at initial placer iter 0, wirelen = 1308
Info:     at initial placer iter 1, wirelen = 935
Info:     at initial placer iter 2, wirelen = 874
Info:     at initial placer iter 3, wirelen = 907
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 889, spread = 7504, legal = 8805; time = 0.08s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 1552, spread = 6503, legal = 7418; time = 0.07s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 1865, spread = 5860, legal = 6885; time = 0.09s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 2122, spread = 5715, legal = 6749; time = 0.07s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 2320, spread = 6115, legal = 7028; time = 0.09s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 2584, spread = 5874, legal = 6623; time = 0.12s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 2612, spread = 5736, legal = 6956; time = 0.06s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 2673, spread = 5985, legal = 6822; time = 0.04s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 2899, spread = 5883, legal = 6627; time = 0.11s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 3088, spread = 5637, legal = 6681; time = 0.10s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 3249, spread = 5712, legal = 6685; time = 0.05s
Info: HeAP Placer Time: 1.77s
Info:   of which solving equations: 0.72s
Info:   of which spreading cells: 0.11s
Info:   of which strict legalisation: 0.14s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 1215, wirelen = 6623
Info:   at iteration #5: temp = 0.000000, timing cost = 909, wirelen = 5678
Info:   at iteration #10: temp = 0.000000, timing cost = 793, wirelen = 5499
Info:   at iteration #15: temp = 0.000000, timing cost = 968, wirelen = 5356
Info:   at iteration #17: temp = 0.000000, timing cost = 938, wirelen = 5320 
Info: SA placement time 3.40s

Info: Max frequency for clock           '$glbnet$clk_pll': 132.89 MHz (FAIL at 200.00 MHz)
Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 174.40 MHz (PASS at 50.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 7.90 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 4.88 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 6.25 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 7.26 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 3.17 ns

Info: Slack histogram:
Info:  legend: * represents 15 endpoint(s)
Info:          + represents [1,15) endpoint(s)
Info: [ -2525,   1653) |************************************************************ 
Info: [  1653,   5831) |********+
Info: [  5831,  10009) | 
Info: [ 10009,  14187) |***+
Info: [ 14187,  18365) |**************+
Info: [ 18365,  22543) |*+
Info: [ 22543,  26721) | 
Info: [ 26721,  30899) | 
Info: [ 30899,  35077) | 
Info: [ 35077,  39255) | 
Info: [ 39255,  43433) | 
Info: [ 43433,  47611) | 
Info: [ 47611,  51789) | 
Info: [ 51789,  55967) | 
Info: [ 55967,  60145) | 
Info: [ 60145,  64323) | 
Info: [ 64323,  68501) | 
Info: [ 68501,  72679) | 
Info: [ 72679,  76857) | 
Info: [ 76857,  81035) |+
Info: Checksum: 0xabffcc04
Info: Routing globals...
Info:     routing clock net $glbnet$clk_pll using global 0
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 6111 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        1        998 |    1   998 |      5113|       1.25       1.25|
Info:       2000 |        4       1995 |    3   997 |      4119|       1.32       2.57|
Info:       3000 |        4       2995 |    0  1000 |      3119|       0.37       2.94|
Info:       4000 |        5       3994 |    1   999 |      2120|       1.05       3.99|
Info:       5000 |       12       4987 |    7   993 |      1130|       1.82       5.81|
Info:       6000 |       18       5981 |    6   994 |       138|       1.38       7.19|
Info:       6143 |       23       6120 |    5   139 |         0|       0.47       7.66|
Info: Routing complete.
Info: Router1 time 7.66s
Info: Checksum: 0xc37051dc

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.counter_TRELLIS_FF_Q_4_SLICE.Q0
Info:  1.4  1.7    Net pulses.counter[27] budget 0.000000 ns (92,75) -> (101,83)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_SD_LUT4_Z_2_A_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  1.9  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_SD_LUT4_Z_2_A_LUT4_Z_SLICE.F1
Info:  0.8  2.7    Net pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_SD_LUT4_Z_2_A[3] budget 0.000000 ns (101,83) -> (101,84)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_SD_LUT4_Z_2_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.8  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_SD_LUT4_Z_2_SLICE.F0
Info:  0.9  3.7    Net pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_SD[1] budget 0.000000 ns (101,84) -> (102,84)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.9  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  3.9    Net pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_D1 budget 0.000000 ns (102,84) -> (102,84)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  4.1  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_L6MUX21_Z_1_D1_PFUMX_Z_SLICE.OFX1
Info:  1.8  5.9    Net pulses.inh_TRELLIS_FF_Q_CE_L6MUX21_Z_SD[1] budget 0.606000 ns (102,84) -> (97,78)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.C0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  6.1  Source pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  6.1    Net pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1 budget 0.000000 ns (97,78) -> (97,78)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.62-158.64
Info:  0.1  6.3  Source pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  6.3    Net pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1 budget 0.000000 ns (97,78) -> (97,78)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  6.4  Source pulses.cblock_on_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.5  6.9    Net pulses.cblock_on_TRELLIS_FF_Q_10_LSR budget 0.606000 ns (97,78) -> (97,79)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_10_SLICE.LSR
Info:  0.2  7.1  Setup pulses.cblock_on_TRELLIS_FF_Q_10_SLICE.LSR
Info: 1.7 ns logic, 5.4 ns routing

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source RS232_Rx_LUT4_A_Z_LUT4_Z_4_SLICE.Q0
Info:  1.0  1.3    Net control.uart0.rx_clk[9] budget 3.549000 ns (93,91) -> (93,89)
Info:                Sink RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:98.39-98.45
Info:                  pulse_control.v:78.7-90.4
Info:  0.2  1.5  Source RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  1.5    Net RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0 budget 0.000000 ns (93,89) -> (93,89)
Info:                Sink RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.50-158.52
Info:  0.1  1.7  Source RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  1.7    Net RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0 budget 0.000000 ns (93,89) -> (93,89)
Info:                Sink RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.66-158.68
Info:  0.1  1.8  Source RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  1.2  2.9    Net RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0[2] budget 3.574000 ns (93,89) -> (92,91)
Info:                Sink RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_LUT4_Z_1_SLICE.A1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.1  Source RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_LUT4_Z_1_SLICE.F1
Info:  0.9  4.0    Net RS232_Rx_LUT4_A_3_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z[2] budget 3.574000 ns (92,91) -> (90,93)
Info:                Sink RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.C0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  4.2  Source RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  4.2    Net RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D0 budget 0.000000 ns (90,93) -> (90,93)
Info:                Sink RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.58-158.60
Info:  0.1  4.4  Source RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  4.4    Net RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1 budget 0.000000 ns (90,93) -> (90,93)
Info:                Sink RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  4.5  Source RS232_Rx_LUT4_A_2_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  1.0  5.5    Net RS232_Rx_LUT4_A_2_Z[4] budget 3.653000 ns (90,93) -> (91,90)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.7  Source control.uart0.rx_data_TRELLIS_FF_Q_CE_LUT4_Z_SLICE.F1
Info:  0.9  6.6    Net control.uart0.rx_data_TRELLIS_FF_Q_CE budget 3.653000 ns (91,90) -> (96,93)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_4_SLICE.CE
Info:  0.0  6.6  Setup control.uart0.rx_data_TRELLIS_FF_Q_4_SLICE.CE
Info: 1.6 ns logic, 5.0 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  3.6  3.6    Net RS232_Rx$TRELLIS_IO_IN budget 0.000000 ns (0,92) -> (88,91)
Info:                Sink RS232_Rx_LUT4_A_3_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:78.7-90.4
Info:  0.1  3.8  Source RS232_Rx_LUT4_A_3_SLICE.F0
Info:  1.0  4.8    Net RS232_Rx_LUT4_A_3_Z[1] budget 0.000000 ns (88,91) -> (90,92)
Info:                Sink RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  5.0  Source RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  5.0    Net RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D1 budget 0.000000 ns (90,92) -> (90,92)
Info:                Sink RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.62-158.64
Info:  0.1  5.1  Source RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  5.1    Net RS232_Rx_LUT4_A_D_L6MUX21_Z_D1 budget 0.000000 ns (90,92) -> (90,92)
Info:                Sink RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  5.3  Source RS232_Rx_LUT4_A_D_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.5  5.8    Net RS232_Rx_LUT4_A_D[3] budget 3.548000 ns (90,92) -> (90,90)
Info:                Sink RS232_Rx_LUT4_A_SLICE.D0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.9  Source RS232_Rx_LUT4_A_SLICE.F0
Info:  0.1  6.0    Net RS232_Rx_LUT4_A_Z[0] budget 3.548000 ns (90,90) -> (90,90)
Info:                Sink RS232_Rx_LUT4_A_SLICE.DI0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:0.0-0.0
Info:                  uart.v:155.9-258.16
Info:                  pulse_control.v:78.7-90.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  6.0  Setup RS232_Rx_LUT4_A_SLICE.DI0
Info: 0.8 ns logic, 5.2 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.0  0.0  Source resetn$tr_io.O
Info:  1.6  1.6    Net resetn$TRELLIS_IO_IN budget 1.463000 ns (126,83) -> (102,83)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_PFUMX_Z_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:5.9-5.15
Info:  0.2  1.9  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_PFUMX_Z_SLICE.OFX0
Info:  1.1  3.0    Net pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C[4] budget 0.736000 ns (102,83) -> (105,86)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_B_Z_PFUMX_ALUT_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.1  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_B_Z_PFUMX_ALUT_SLICE.OFX0
Info:  1.3  4.4    Net pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_B_Z_PFUMX_ALUT_Z budget 0.736000 ns (105,86) -> (108,91)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_7_SLICE.CE
Info:  0.0  4.4  Setup pulses.cpulse_TRELLIS_FF_Q_7_SLICE.CE
Info: 0.4 ns logic, 4.0 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_out_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q1
Info:  3.6  3.9    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (89,87) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:105.9-105.15
Info:                  pulse_control.v:78.7-90.4
Info: 0.3 ns logic, 3.6 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.3  0.3  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z_LUT4_Z_1_C_LUT4_C_SLICE.Q1
Info:  1.4  1.7    Net pulses.cpmg[1] budget 0.000000 ns (97,85) -> (107,80)
Info:                Sink pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.A0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.3  2.0  Source pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  2.0    Net pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_COUT[2] budget 0.000000 ns (107,80) -> (107,80)
Info:                Sink pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:208.18-208.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  2.0  Source pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  2.0    Net pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT_S0_CCU2C_S0_COUT[4] budget 0.000000 ns (107,80) -> (107,80)
Info:                Sink pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:208.18-208.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  2.1  Source pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  2.1    Net $nextpnr_CCU2C_39$CIN budget 0.000000 ns (107,80) -> (108,80)
Info:                Sink $nextpnr_CCU2C_39$CCU2_SLICE.FCI
Info:  0.3  2.3  Source $nextpnr_CCU2C_39$CCU2_SLICE.F0
Info:  0.3  2.6    Net pulses.sync_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_Z_C[4] budget 0.000000 ns (108,80) -> (108,80)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_PFUMX_Z_SLICE.M0
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:208.18-208.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.2  2.7  Source pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_PFUMX_Z_SLICE.OFX0
Info:  0.8  3.5    Net pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_A_LUT4_Z_B[6] budget 0.505000 ns (108,80) -> (102,80)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_A_LUT4_Z_B_LUT4_Z_SLICE.A1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.7  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_A_LUT4_Z_B_LUT4_Z_SLICE.F1
Info:  1.4  5.1    Net pulses.pulses_TRELLIS_FF_Q_CE_L6MUX21_Z_D1_PFUMX_Z_ALUT_LUT4_Z_C_LUT4_D_Z[2] budget 0.505000 ns (102,80) -> (104,87)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  5.3  Source pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  5.3    Net pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1 budget 0.000000 ns (104,87) -> (104,87)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.62-158.64
Info:  0.1  5.4  Source pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  5.4    Net pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1 budget 0.000000 ns (104,87) -> (104,87)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  5.6  Source pulses.cpulse_TRELLIS_FF_Q_24_LSR_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.7  6.3    Net pulses.cpulse_TRELLIS_FF_Q_24_LSR budget 0.606000 ns (104,87) -> (99,84)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_24_SLICE.LSR
Info:  0.2  6.5  Setup pulses.cpulse_TRELLIS_FF_Q_24_SLICE.LSR
Info: 2.0 ns logic, 4.5 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.pulses_LUT4_C_SLICE.Q1
Info:  1.9  2.2    Net Pulse$TRELLIS_IO_OUT budget 83.025002 ns (96,85) -> (126,92)
Info:                Sink Pulse$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:42.13-42.21
Info: 0.3 ns logic, 1.9 ns routing

ERROR: Max frequency for clock           '$glbnet$clk_pll': 139.92 MHz (FAIL at 200.00 MHz)
Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 151.91 MHz (PASS at 50.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 6.03 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 4.40 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 3.92 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 6.48 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 2.21 ns

Info: Slack histogram:
Info:  legend: * represents 14 endpoint(s)
Info:          + represents [1,14) endpoint(s)
Info: [ -2147,   2044) |************************************************************ 
Info: [  2044,   6235) |**********+
Info: [  6235,  10426) | 
Info: [ 10426,  14617) |***+
Info: [ 14617,  18808) |***************+
Info: [ 18808,  22999) |+
Info: [ 22999,  27190) | 
Info: [ 27190,  31381) | 
Info: [ 31381,  35572) | 
Info: [ 35572,  39763) | 
Info: [ 39763,  43954) | 
Info: [ 43954,  48145) | 
Info: [ 48145,  52336) | 
Info: [ 52336,  56527) | 
Info: [ 56527,  60718) | 
Info: [ 60718,  64909) | 
Info: [ 64909,  69100) | 
Info: [ 69100,  73291) | 
Info: [ 73291,  77482) | 
Info: [ 77482,  81673) |+
0 warnings, 1 error
Makefile:23: recipe for target 'pulse_gen_out.config' failed
make: *** [pulse_gen_out.config] Error 1
rm pulse_gen_out.config pulse_gen.json
