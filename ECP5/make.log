yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart_nonblock.v 

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart_nonblock.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart_nonblock.v
Parsing Verilog input from `uart_nonblock.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$303'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$383 in module TRELLIS_FF.
Removed 1 dead cases from process $proc$uart_nonblock.v:135$127 in module uart.
Marked 7 switch rules as full_case in process $proc$uart_nonblock.v:135$127 in module uart.
Marked 2 switch rules as full_case in process $proc$pulses.v:121$49 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:133$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:133$3 in module pulse_control.
Removed a total of 2 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 52 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$387'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart_nonblock.v:106$157'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart_nonblock.v:105$156'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart_nonblock.v:101$155'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:98$120'.
  Set init value: \xfer_bits = 2'01
Found init rule in `\pulses.$proc$pulses.v:92$119'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:87$118'.
  Set init value: \nutation_pulse_delay = 300
Found init rule in `\pulses.$proc$pulses.v:86$117'.
  Set init value: \nutation_pulse_width = 50
Found init rule in `\pulses.$proc$pulses.v:82$115'.
  Set init value: \block_off = 16'0000000110011010
Found init rule in `\pulses.$proc$pulses.v:81$114'.
  Set init value: \sync_down = 16'0000000100000100
Found init rule in `\pulses.$proc$pulses.v:80$113'.
  Set init value: \p2start = 16'0000000011100110
Found init rule in `\pulses.$proc$pulses.v:78$112'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulses.$proc$pulses.v:77$111'.
  Set init value: \block = 1'1
Found init rule in `\pulses.$proc$pulses.v:76$110'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulses.$proc$pulses.v:75$109'.
  Set init value: \pulse_block_off = 16'0000000001100100
Found init rule in `\pulses.$proc$pulses.v:74$108'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:73$107'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:72$106'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulses.$proc$pulses.v:71$105'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:70$104'.
  Set init value: \period = 8'00000001
Found init rule in `\pulses.$proc$pulses.v:69$103'.
  Set init value: \pump = 1'1
Found init rule in `\pulses.$proc$pulses.v:48$101'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:130$48'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:113$47'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:112$46'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:110$44'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:48$43'.
  Set init value: \nut_wid = 300
Found init rule in `\pulse_control.$proc$pulse_control.v:47$42'.
  Set init value: \nut_del = 300
Found init rule in `\pulse_control.$proc$pulse_control.v:46$41'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:45$40'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:44$39'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulse_control.$proc$pulse_control.v:42$37'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:41$36'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:40$35'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:39$34'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:38$33'.
  Set init value: \period = 8'00001111
Found init rule in `\pulse_control.$proc$pulse_control.v:37$32'.
  Set init value: \pump = 1'1

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$387'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$383'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$380'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$359'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$358_EN[3:0]$362
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$358_DATA[3:0]$361
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$358_ADDR[3:0]$360
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$326'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$304'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$302_EN[3:0]$307
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$302_DATA[3:0]$306
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$302_ADDR[3:0]$305
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$303'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:106$157'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:105$156'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:101$155'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:135$127'.
     1/15: $3\tx_data[7:0]
     2/15: $3\tx_out[0:0]
     3/15: $2\tx_data[7:0]
     4/15: $2\tx_out[0:0]
     5/15: $1\tx_data[7:0]
     6/15: $1\tx_out[0:0]
     7/15: $0\tx_bits_remaining[3:0]
     8/15: $0\tx_state[1:0]
     9/15: $0\rx_data[7:0]
    10/15: $0\rx_bits_remaining[3:0]
    11/15: $0\recv_state[2:0]
    12/15: $0\tx_clk[10:0]
    13/15: $0\rx_clk[14:0]
    14/15: $0\rx_sample_countdown[3:0]
    15/15: $0\rx_samples[3:0]
Creating decoders for process `\pulses.$proc$pulses.v:98$120'.
Creating decoders for process `\pulses.$proc$pulses.v:92$119'.
Creating decoders for process `\pulses.$proc$pulses.v:87$118'.
Creating decoders for process `\pulses.$proc$pulses.v:86$117'.
Creating decoders for process `\pulses.$proc$pulses.v:85$116'.
Creating decoders for process `\pulses.$proc$pulses.v:82$115'.
Creating decoders for process `\pulses.$proc$pulses.v:81$114'.
Creating decoders for process `\pulses.$proc$pulses.v:80$113'.
Creating decoders for process `\pulses.$proc$pulses.v:78$112'.
Creating decoders for process `\pulses.$proc$pulses.v:77$111'.
Creating decoders for process `\pulses.$proc$pulses.v:76$110'.
Creating decoders for process `\pulses.$proc$pulses.v:75$109'.
Creating decoders for process `\pulses.$proc$pulses.v:74$108'.
Creating decoders for process `\pulses.$proc$pulses.v:73$107'.
Creating decoders for process `\pulses.$proc$pulses.v:72$106'.
Creating decoders for process `\pulses.$proc$pulses.v:71$105'.
Creating decoders for process `\pulses.$proc$pulses.v:70$104'.
Creating decoders for process `\pulses.$proc$pulses.v:69$103'.
Creating decoders for process `\pulses.$proc$pulses.v:56$102'.
Creating decoders for process `\pulses.$proc$pulses.v:48$101'.
Creating decoders for process `\pulses.$proc$pulses.v:121$49'.
     1/30: $0\counter[31:0]
     2/30: $0\rx_done[0:0]
     3/30: $0\cblock_on[31:0]
     4/30: $0\cblock_delay[31:0]
     5/30: $0\cpulse[31:0]
     6/30: $0\cdelay[31:0]
     7/30: $0\ccount[7:0]
     8/30: $0\per_shift[31:0]
     9/30: $0\nutation_pulse_stop[31:0]
    10/30: $0\nutation_pulse_start[31:0]
    11/30: $0\nutation_pulse_delay[31:0]
    12/30: $0\nutation_pulse_width[31:0]
    13/30: $0\block_off[15:0]
    14/30: $0\sync_down[15:0]
    15/30: $0\p2start[15:0]
    16/30: $0\inh[0:0]
    17/30: $0\nut_pulse[0:0]
    18/30: $0\pulse[0:0]
    19/30: $0\sync[0:0]
    20/30: $0\pulses[0:0]
    21/30: $0\xfer_bits[1:0]
    22/30: $0\cpmg[7:0]
    23/30: $0\pulse_block_off[15:0]
    24/30: $0\pulse_block[7:0]
    25/30: $0\block[0:0]
    26/30: $0\pump[0:0]
    27/30: $0\p2width[15:0]
    28/30: $0\delay[15:0]
    29/30: $0\p1width[15:0]
    30/30: $0\period[7:0]
Creating decoders for process `\pulse_control.$proc$pulse_control.v:130$48'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:113$47'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:112$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:111$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:110$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:48$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:47$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:46$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:133$3'.
     1/32: $2\rx_done[0:0]
     2/32: $4$bitselwrite$data$pulse_control.v:149$2[31:0]$14
     3/32: $4$bitselwrite$mask$pulse_control.v:149$1[31:0]$13
     4/32: $4\vinput[31:0]
     5/32: $3$bitselwrite$data$pulse_control.v:149$2[31:0]$11
     6/32: $3$bitselwrite$mask$pulse_control.v:149$1[31:0]$10
     7/32: $3\vinput[31:0]
     8/32: $2$bitselwrite$data$pulse_control.v:149$2[31:0]$9
     9/32: $2$bitselwrite$mask$pulse_control.v:149$1[31:0]$8
    10/32: $2\vinput[31:0]
    11/32: $1$bitselwrite$data$pulse_control.v:149$2[31:0]$7
    12/32: $1$bitselwrite$mask$pulse_control.v:149$1[31:0]$6
    13/32: $1\vinput[31:0]
    14/32: $1\voutput[7:0]
    15/32: $1\rx_done[0:0]
    16/32: $0\state[2:0]
    17/32: $0\readcount[5:0]
    18/32: $0\readstate[1:0]
    19/32: $0\writestate[0:0]
    20/32: $0\vcontrol[7:0]
    21/32: $0\tx_byte[7:0]
    22/32: $0\transmit[0:0]
    23/32: $0\cpmg[7:0]
    24/32: $0\pulse_block[7:0]
    25/32: $0\block[0:0]
    26/32: $0\pump[0:0]
    27/32: $0\nut_wid[31:0]
    28/32: $0\nut_del[31:0]
    29/32: $0\p2width[15:0]
    30/32: $0\delay[15:0]
    31/32: $0\p1width[15:0]
    32/32: $0\period[7:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\nutation_pulse' from process `\pulses.$proc$pulses.v:85$116'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:56$102'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:111$45'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:43$38'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$383'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$380'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$358_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$359'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$358_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$359'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$358_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$359'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$326'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$302_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$304'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$302_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$304'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$302_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$304'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$303'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart_nonblock.v:135$127'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `\pulses.\pump' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_off' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `\pulses.\rx_done' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\pulses.\per_shift' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\pulses.\xfer_bits' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `\pulse_control.\pump' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:149$1' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:149$2' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1283' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$387'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$383'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$383'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$380'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$359'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$359'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$326'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$304'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$304'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$303'.
Removing empty process `uart.$proc$uart_nonblock.v:106$157'.
Removing empty process `uart.$proc$uart_nonblock.v:105$156'.
Removing empty process `uart.$proc$uart_nonblock.v:101$155'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart_nonblock.v:135$127'.
Removing empty process `uart.$proc$uart_nonblock.v:135$127'.
Removing empty process `pulses.$proc$pulses.v:98$120'.
Removing empty process `pulses.$proc$pulses.v:92$119'.
Removing empty process `pulses.$proc$pulses.v:87$118'.
Removing empty process `pulses.$proc$pulses.v:86$117'.
Removing empty process `pulses.$proc$pulses.v:85$116'.
Removing empty process `pulses.$proc$pulses.v:82$115'.
Removing empty process `pulses.$proc$pulses.v:81$114'.
Removing empty process `pulses.$proc$pulses.v:80$113'.
Removing empty process `pulses.$proc$pulses.v:78$112'.
Removing empty process `pulses.$proc$pulses.v:77$111'.
Removing empty process `pulses.$proc$pulses.v:76$110'.
Removing empty process `pulses.$proc$pulses.v:75$109'.
Removing empty process `pulses.$proc$pulses.v:74$108'.
Removing empty process `pulses.$proc$pulses.v:73$107'.
Removing empty process `pulses.$proc$pulses.v:72$106'.
Removing empty process `pulses.$proc$pulses.v:71$105'.
Removing empty process `pulses.$proc$pulses.v:70$104'.
Removing empty process `pulses.$proc$pulses.v:69$103'.
Removing empty process `pulses.$proc$pulses.v:56$102'.
Removing empty process `pulses.$proc$pulses.v:48$101'.
Found and cleaned up 9 empty switches in `\pulses.$proc$pulses.v:121$49'.
Removing empty process `pulses.$proc$pulses.v:121$49'.
Removing empty process `pulse_control.$proc$pulse_control.v:130$48'.
Removing empty process `pulse_control.$proc$pulse_control.v:113$47'.
Removing empty process `pulse_control.$proc$pulse_control.v:112$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:111$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:110$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:48$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:47$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:46$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$32'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:133$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:133$3'.
Cleaned up 39 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~115 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 45 unused cells and 314 unused wires.
<suppressed ~56 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~435 debug messages>
Removed a total of 145 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1078: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1076: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1080: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$411.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$413.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$421.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$423.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$430.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$437.
    dead port 2/2 on $mux $flatten\control.$procmux$889.
    dead port 2/2 on $mux $flatten\control.$procmux$930.
    dead port 2/2 on $mux $flatten\control.$procmux$932.
    dead port 2/2 on $mux $flatten\control.$procmux$934.
    dead port 2/2 on $mux $flatten\control.$procmux$968.
    dead port 2/2 on $mux $flatten\control.$procmux$970.
    dead port 2/2 on $mux $flatten\control.$procmux$997.
Removed 13 multiplexer ports.
<suppressed ~63 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$439: { $flatten\control.\uart0.$procmux$445_CMP $flatten\control.\uart0.$procmux$414_CMP $auto$opt_reduce.cc:134:opt_mux$1285 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$446: { $flatten\control.\uart0.$procmux$445_CMP $flatten\control.\uart0.$procmux$414_CMP $auto$opt_reduce.cc:134:opt_mux$1287 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1044: { $flatten\control.$procmux$1013_CMP $auto$opt_reduce.cc:134:opt_mux$1289 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$630: $auto$opt_reduce.cc:134:opt_mux$1291
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$651: $auto$opt_reduce.cc:134:opt_mux$1293
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$670: $auto$opt_reduce.cc:134:opt_mux$1295
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$689: $auto$opt_reduce.cc:134:opt_mux$1297
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$710: $auto$opt_reduce.cc:134:opt_mux$1299
  Optimizing cells in module \pulse_gen.
Performed a total of 8 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 164 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking pulse_gen.pulses.pulse_block_off as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pulses.$procdff$1261 ($dff) from module pulse_gen (D = { \pulses.xfer_bits [0] \control.rx_done }, Q = \pulses.xfer_bits).
Adding EN signal on $flatten\pulses.$procdff$1260 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$627_Y, Q = \pulses.cblock_on).
Adding EN signal on $flatten\pulses.$procdff$1259 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$648_Y, Q = \pulses.cblock_delay).
Adding EN signal on $flatten\pulses.$procdff$1258 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$667_Y, Q = \pulses.cpulse).
Adding EN signal on $flatten\pulses.$procdff$1257 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$686_Y, Q = \pulses.cdelay).
Adding EN signal on $flatten\pulses.$procdff$1256 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$707_Y, Q = \pulses.ccount).
Adding SRST signal on $auto$opt_dff.cc:764:run$1387 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$705_Y, Q = \pulses.ccount, rval = 8'00000000).
Adding EN signal on $flatten\pulses.$procdff$1255 ($dff) from module pulse_gen (D = { 8'00000000 \pulses.period 16'0000000000000000 }, Q = \pulses.per_shift).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 25 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 27 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 28 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 29 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 30 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 31 on $auto$opt_dff.cc:764:run$1393 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1254 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:154$56_Y, Q = \pulses.nutation_pulse_stop).
Adding EN signal on $flatten\pulses.$procdff$1253 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:154$57_Y, Q = \pulses.nutation_pulse_start).
Adding EN signal on $flatten\pulses.$procdff$1252 ($dff) from module pulse_gen (D = \control.nut_del, Q = \pulses.nutation_pulse_delay).
Adding EN signal on $flatten\pulses.$procdff$1251 ($dff) from module pulse_gen (D = \control.nut_wid, Q = \pulses.nutation_pulse_width).
Adding EN signal on $flatten\pulses.$procdff$1250 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:147$54_Y, Q = \pulses.block_off).
Adding EN signal on $flatten\pulses.$procdff$1249 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:146$52_Y, Q = \pulses.sync_down).
Adding EN signal on $flatten\pulses.$procdff$1248 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:145$51_Y, Q = \pulses.p2start).
Adding EN signal on $flatten\pulses.$procdff$1247 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$779_Y, Q = \pulses.inh).
Adding EN signal on $flatten\pulses.$procdff$1246 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:186$69_Y [0], Q = \pulses.nut_pulse).
Adding SRST signal on $auto$opt_dff.cc:764:run$1452 ($dffe) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:187$68_Y [0], Q = \pulses.nut_pulse, rval = 1'0).
Adding EN signal on $flatten\pulses.$procdff$1245 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$806_Y, Q = \pulses.pulse).
Adding EN signal on $flatten\pulses.$procdff$1244 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$826_Y, Q = \pulses.sync).
Adding SRST signal on $flatten\pulses.$procdff$1243 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:279$99_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\pulses.$procdff$1242 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:183$65_Y [0], Q = \pulses.pulses).
Adding EN signal on $flatten\pulses.$procdff$1241 ($dff) from module pulse_gen (D = \pulses.xfer_bits [1], Q = \pulses.rx_done).
Adding EN signal on $flatten\pulses.$procdff$1240 ($dff) from module pulse_gen (D = \control.cpmg, Q = \pulses.cpmg).
Adding EN signal on $flatten\pulses.$procdff$1239 ($dff) from module pulse_gen (D = 16'0000000001100100, Q = \pulses.pulse_block_off).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 2 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 5 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 6 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1502 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1238 ($dff) from module pulse_gen (D = \control.pulse_block, Q = \pulses.pulse_block).
Adding EN signal on $flatten\pulses.$procdff$1237 ($dff) from module pulse_gen (D = \control.block, Q = \pulses.block).
Adding EN signal on $flatten\pulses.$procdff$1236 ($dff) from module pulse_gen (D = \control.pump, Q = \pulses.pump).
Adding EN signal on $flatten\pulses.$procdff$1235 ($dff) from module pulse_gen (D = \control.p2width, Q = \pulses.p2width).
Adding EN signal on $flatten\pulses.$procdff$1234 ($dff) from module pulse_gen (D = \control.delay, Q = \pulses.delay).
Adding EN signal on $flatten\pulses.$procdff$1233 ($dff) from module pulse_gen (D = \control.p1width, Q = \pulses.p1width).
Adding EN signal on $flatten\pulses.$procdff$1232 ($dff) from module pulse_gen (D = \control.period, Q = \pulses.period).
Adding EN signal on $flatten\control.\uart0.$procdff$1231 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1230 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1229 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1228 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1227 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$procmux$486_Y, Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1226 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1225 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1222 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1221 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1281 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1280 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1279 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1064_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1278 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1277 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:166$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1276 ($dff) from module pulse_gen (D = \control.uart0.rx_data, Q = \control.vcontrol).
Adding EN signal on $flatten\control.$procdff$1275 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1274 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1273 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1272 ($dff) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.rx_done).
Adding EN signal on $flatten\control.$procdff$1271 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.cpmg).
Adding EN signal on $flatten\control.$procdff$1270 ($dff) from module pulse_gen (D = \control.vinput [15:8], Q = \control.pulse_block).
Adding EN signal on $flatten\control.$procdff$1269 ($dff) from module pulse_gen (D = \control.vinput [1], Q = \control.block).
Adding EN signal on $flatten\control.$procdff$1268 ($dff) from module pulse_gen (D = \control.vinput [0], Q = \control.pump).
Adding EN signal on $flatten\control.$procdff$1267 ($dff) from module pulse_gen (D = { \control.vinput [7:0] 24'000000000000000000000000 }, Q = \control.nut_wid).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1713 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\control.$procdff$1266 ($dff) from module pulse_gen (D = { \control.vinput [7:0] 24'000000000000000000000000 }, Q = \control.nut_del).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1716 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\control.$procdff$1265 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p2width).
Adding EN signal on $flatten\control.$procdff$1264 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.delay).
Adding EN signal on $flatten\control.$procdff$1263 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p1width).
Adding EN signal on $flatten\control.$procdff$1262 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.period).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 95 unused cells and 95 unused wires.
<suppressed ~96 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~22 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$439: { $flatten\control.\uart0.$procmux$445_CMP $flatten\control.\uart0.$procmux$414_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$446: { $flatten\control.\uart0.$procmux$445_CMP $flatten\control.\uart0.$procmux$414_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~294 debug messages>
Removed a total of 98 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1413 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1408 ($dffe) from module pulse_gen.

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 98 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 5) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1342 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:193$140 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart_nonblock.v:201$142 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:226$146 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:301$153 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$409 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$414_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1304 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$428 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$435 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$443 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$450 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$457 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$459 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$463 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$475 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$478 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$491_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$496 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$501 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$503 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$505_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$512 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$518 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$521 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$523_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$527 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$530 ($mux).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$539 ($mux).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$555 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$576 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$580 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$584 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$586 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$593 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$597 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$599 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$603 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$605 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1211_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1199_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1175_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1165_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1158_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1134_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1125_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1114 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1110 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1640 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1642 ($ne).
Removed cell pulse_gen.$flatten\control.$procmux$1070 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1068 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1065_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1062 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1055 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1053 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1040 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1038 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1036 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1026 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1022 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1020_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1017_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:150$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:150$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 1 bits (of 8) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1468 ($ne).
Removed top 1 bits (of 6) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1459 ($ne).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1457 ($ne).
Removed top 1 bits (of 8) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1434 ($ne).
Removed top 1 bits (of 9) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1432 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1664 ($ne).
Removed cell pulse_gen.$flatten\pulses.$procmux$821 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$819 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$817 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$815 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$813 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$797 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$795 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$774 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$772 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$770 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$766 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$764 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$762 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$705 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$703 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$701 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$699 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$697 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$695 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$684 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$682 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$680 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1543 ($ne).
Removed cell pulse_gen.$flatten\pulses.$procmux$678 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$665 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$663 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$661 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$659 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$646 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$644 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$642 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$640 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$638 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$636 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$procmux$631_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$625 ($mux).
Removed top 16 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$626_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$623 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$621 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$619 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$617 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$615 ($mux).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:279$99 ($add).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:273$97 ($add).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:273$97 ($add).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:271$96 ($add).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:225$85 ($add).
Removed top 15 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:222$76 ($add).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:199$73 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:187$68 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:183$65 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:184$63 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:185$62 ($mux).
Removed top 8 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:154$56 ($sub).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:150$23_Y.
Removed top 24 bits (of 32) from wire pulse_gen.$flatten\control.$and$pulse_control.v:0$17_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1068_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$2\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$procmux$512_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$procmux$521_Y.
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$procmux$539_Y.
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$procmux$555_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:193$140_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:226$146_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:301$153_Y.
Removed top 15 bits (of 32) from wire pulse_gen.$flatten\pulses.$add$pulses.v:222$76_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:183$65_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:185$62_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:187$68_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:199$73_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 94 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:150$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart_nonblock.v:189$136 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:145$129 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:149$131 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:192$137 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:210$143 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:283$151 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:145$51 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:146$52 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:147$53 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:222$76 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:223$78 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:224$81 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:225$85 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:247$88 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:248$90 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:270$94 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:271$96 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:273$97 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:279$99 ($add).
  creating $macc model for $flatten\pulses.$sub$pulses.v:147$54 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:154$56 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:154$57 ($sub).
  merging $macc model for $flatten\pulses.$add$pulses.v:147$53 into $flatten\pulses.$sub$pulses.v:147$54.
  merging $macc model for $flatten\control.$add$pulse_control.v:166$26 into $flatten\control.$add$pulse_control.v:166$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:166$25 into $flatten\control.$add$pulse_control.v:166$27.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:279$99.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:273$97.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:271$96.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:270$94.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:248$90.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:247$88.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:225$85.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:224$81.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:223$78.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:222$76.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:146$52.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:145$51.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:283$151.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:210$143.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:192$137.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:149$131.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:145$129.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart_nonblock.v:189$136.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:154$56.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:154$57.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:150$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:166$27: $auto$alumacc.cc:365:replace_macc$1748
  creating $macc cell for $flatten\pulses.$sub$pulses.v:147$54: $auto$alumacc.cc:365:replace_macc$1749
  creating $alu model for $flatten\pulses.$lt$pulses.v:183$59 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:184$60 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:185$61 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:186$66 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:187$67 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:199$71 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:234$86 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:279$98 ($lt): new $alu
  creating $alu model for $flatten\pulses.$procmux$626_CMP0 ($eq): merged with $flatten\pulses.$lt$pulses.v:183$59.
  creating $alu cell for $flatten\pulses.$lt$pulses.v:279$98: $auto$alumacc.cc:485:replace_alu$1758
  creating $alu cell for $flatten\pulses.$lt$pulses.v:234$86: $auto$alumacc.cc:485:replace_alu$1769
  creating $alu cell for $flatten\pulses.$lt$pulses.v:199$71: $auto$alumacc.cc:485:replace_alu$1774
  creating $alu cell for $flatten\pulses.$lt$pulses.v:187$67: $auto$alumacc.cc:485:replace_alu$1785
  creating $alu cell for $flatten\pulses.$lt$pulses.v:186$66: $auto$alumacc.cc:485:replace_alu$1790
  creating $alu cell for $flatten\pulses.$lt$pulses.v:185$61: $auto$alumacc.cc:485:replace_alu$1795
  creating $alu cell for $flatten\pulses.$lt$pulses.v:184$60: $auto$alumacc.cc:485:replace_alu$1806
  creating $alu cell for $flatten\pulses.$lt$pulses.v:183$59, $flatten\pulses.$procmux$626_CMP0: $auto$alumacc.cc:485:replace_alu$1817
  creating $alu cell for $flatten\control.$add$pulse_control.v:150$23: $auto$alumacc.cc:485:replace_alu$1828
  creating $alu cell for $flatten\pulses.$sub$pulses.v:154$57: $auto$alumacc.cc:485:replace_alu$1831
  creating $alu cell for $flatten\pulses.$sub$pulses.v:154$56: $auto$alumacc.cc:485:replace_alu$1834
  creating $alu cell for $flatten\control.\uart0.$add$uart_nonblock.v:189$136: $auto$alumacc.cc:485:replace_alu$1837
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:145$129: $auto$alumacc.cc:485:replace_alu$1840
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:149$131: $auto$alumacc.cc:485:replace_alu$1843
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:192$137: $auto$alumacc.cc:485:replace_alu$1846
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:210$143: $auto$alumacc.cc:485:replace_alu$1849
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:283$151: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $flatten\pulses.$add$pulses.v:146$52: $auto$alumacc.cc:485:replace_alu$1855
  creating $alu cell for $flatten\pulses.$add$pulses.v:145$51: $auto$alumacc.cc:485:replace_alu$1858
  creating $alu cell for $flatten\pulses.$add$pulses.v:222$76: $auto$alumacc.cc:485:replace_alu$1861
  creating $alu cell for $flatten\pulses.$add$pulses.v:223$78: $auto$alumacc.cc:485:replace_alu$1864
  creating $alu cell for $flatten\pulses.$add$pulses.v:224$81: $auto$alumacc.cc:485:replace_alu$1867
  creating $alu cell for $flatten\pulses.$add$pulses.v:225$85: $auto$alumacc.cc:485:replace_alu$1870
  creating $alu cell for $flatten\pulses.$add$pulses.v:247$88: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $flatten\pulses.$add$pulses.v:248$90: $auto$alumacc.cc:485:replace_alu$1876
  creating $alu cell for $flatten\pulses.$add$pulses.v:270$94: $auto$alumacc.cc:485:replace_alu$1879
  creating $alu cell for $flatten\pulses.$add$pulses.v:271$96: $auto$alumacc.cc:485:replace_alu$1882
  creating $alu cell for $flatten\pulses.$add$pulses.v:273$97: $auto$alumacc.cc:485:replace_alu$1885
  creating $alu cell for $flatten\pulses.$add$pulses.v:279$99: $auto$alumacc.cc:485:replace_alu$1888
  created 29 $alu and 2 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~7 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$578: { $flatten\control.\uart0.$procmux$523_CMP $auto$opt_reduce.cc:134:opt_mux$1892 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$595: { $flatten\control.\uart0.$procmux$523_CMP $auto$opt_reduce.cc:134:opt_mux$1894 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1368 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:247$88_Y [31:17], Q = \pulses.cdelay [31:17], rval = 15'000000000000000).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 10 unused cells and 22 unused wires.
<suppressed ~11 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~187 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1697 ($dffe) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1670 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1078_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1667 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1731 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1658 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1729 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1634 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$add$uart_nonblock.v:189$136_Y, Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1619 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$procmux$580_Y, Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1591 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$procmux$496_Y, Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1577 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$2\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1559 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$procmux$457_Y, Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1548 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 55 unused wires.
<suppressed ~10 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1403 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1398 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1398 ($dffe) from module pulse_gen.
Adding SRST signal on $auto$opt_dff.cc:764:run$1353 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:248$90_Y [31:18], Q = \pulses.cpulse [31:18], rval = 14'00000000000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1338 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:270$94_Y [31:19], Q = \pulses.cblock_delay [31:19], rval = 13'0000000000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1319 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:271$96_Y [31:20], Q = \pulses.cblock_on [31:20], rval = 12'000000000000).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Rerunning OPT passes. (Removed registers in this run.)

6.30.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~2 debug messages>

6.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.30.13. Executing OPT_DFF pass (perform DFF optimizations).

6.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

6.30.15. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1024:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1024_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1024_Y [1]
      New connections: { $flatten\control.$procmux$1024_Y [2] $flatten\control.$procmux$1024_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1064:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1731 [0] }, B=2'00, Y=$flatten\control.$procmux$1064_Y
      New ports: A=$auto$wreduce.cc:454:run$1731 [0], B=1'0, Y=$flatten\control.$procmux$1064_Y [0]
      New connections: $flatten\control.$procmux$1064_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$486:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$procmux$486_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$procmux$486_Y [7]
      New connections: $flatten\control.\uart0.$procmux$486_Y [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$516:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$procmux$516_Y
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$procmux$516_Y [2:1]
      New connections: $flatten\control.\uart0.$procmux$516_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$525:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$procmux$525_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$procmux$525_Y [2]
      New connections: $flatten\control.\uart0.$procmux$525_Y [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$539:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1736 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1736 [9] $auto$wreduce.cc:454:run$1736 [1] }
      New connections: { $auto$wreduce.cc:454:run$1736 [8:2] $auto$wreduce.cc:454:run$1736 [0] } = { 1'0 $auto$wreduce.cc:454:run$1736 [1] $auto$wreduce.cc:454:run$1736 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$555:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1737 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1737 [2] $auto$wreduce.cc:454:run$1737 [0] }
      New connections: { $auto$wreduce.cc:454:run$1737 [9:3] $auto$wreduce.cc:454:run$1737 [1] } = { $auto$wreduce.cc:454:run$1737 [0] $auto$wreduce.cc:454:run$1737 [2] $auto$wreduce.cc:454:run$1737 [2] 1'1 $auto$wreduce.cc:454:run$1737 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart_nonblock.v:247$148:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:247$148_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:247$148_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart_nonblock.v:247$148_Y [2:1] = { $flatten\control.\uart0.$ternary$uart_nonblock.v:247$148_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart_nonblock.v:306$154:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:306$154_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:306$154_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart_nonblock.v:306$154_Y [1] = $flatten\control.\uart0.$ternary$uart_nonblock.v:306$154_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1029:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1024_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1024_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1667 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1649 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdff.
Using extmapper maccmap for cells of type $macc.
  add \pulses.sync_down (16 bits, unsigned)
  sub \pulses.pulse_block (8 bits, unsigned)
  add \pulses.delay (16 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=31\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~3342 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~2226 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~1452 debug messages>
Removed a total of 484 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5350 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5350 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5351 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5351 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5352 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5352 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1301 unused cells and 2441 unused wires.
<suppressed ~1302 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6339 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$468.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$6338 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$468.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3391 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1029.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3390 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1029.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3077 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2725 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$508.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2724 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$508.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2723 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$508.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PN_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PN_.
No more expansions possible.
<suppressed ~748 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3096 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 1718 gates and 2294 wires to a netlist network with 574 inputs and 345 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     310.
ABC: Participating nodes from both networks       =     682.
ABC: Participating nodes from the first network   =     320. (  57.14 % of nodes)
ABC: Participating nodes from the second network  =     362. (  64.64 % of nodes)
ABC: Node pairs (any polarity)                    =     320. (  57.14 % of names can be moved)
ABC: Node pairs (same polarity)                   =     292. (  52.14 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      559
ABC RESULTS:        internal signals:     1375
ABC RESULTS:           input signals:      574
ABC RESULTS:          output signals:      345
Removing temp directory.
Removed 0 unused cells and 1272 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod$53afc4693cdd4770ebaebeb0ab6c288fde062f75\$lut for cells of type $lut.
Using template $paramod$e10ca4aca4e4c8627be5bb912095a9253494b061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000010010000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod$5fba6fa4affd3d8cb90b92595f737467c857f3c8\$lut for cells of type $lut.
Using template $paramod$3dd1cfeaac2399e8e1df42382a37ba2eafacb216\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32767 for cells of type $lut.
Using template $paramod$f8bdca125e424c8e9c5f5e84960e0e034e7c473c\$lut for cells of type $lut.
Using template $paramod$5547587bde2f1ca8d884d89fe5b90567ab8bb30e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1090519040 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000000000000000000000000 for cells of type $lut.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod$ef57d130c6f71db824069c7e8a869a2f72982b4d\$lut for cells of type $lut.
Using template $paramod$ecac6dad9f05aca9f0257135bbc24065e3530e53\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=15990784 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod$f451e273eebdce42d2b73b0ce4f6a167f75d0e5b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod$3589102619ca3cb2a7aa44f7d5da1ce3960c3450\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65536 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod$df79f5d4c4e83087df399c80a383ff5528e49146\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16777216 for cells of type $lut.
Using template $paramod$2112a70fa1dfed7009af2d1b2a9304edd7f76cef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000111111110000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16580608 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=552542240 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111000011111111111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000111110101111000011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111100001111111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111110101111111111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111001100110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=285147136 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod$54199f2ddbc1b5bcca2d603daeddba1adf48eaf5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=33023 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=11518159 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111100001000100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod$09b9daf9b083a5061c2bcf14792aca3feed7915b\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1927 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11452.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11452.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11565.lut1 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11607.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11607.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11760.lut1 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11629.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11589.lut7 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11593.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11593.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11495.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11495.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut7 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11531.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11531.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11542.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11549.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11553.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11553.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11551.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11552.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11484.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11491.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11498.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut4 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut5 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut6 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11455.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11455.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11457.lut2 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11457.lut3 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11426.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11429.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11431.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11451.lut1 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11452.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11455.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11457.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11498.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11484.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11491.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11495.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11497.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11498.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11507.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11511.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11513.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11519.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11521.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11522.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11526.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11530.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11533.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11537.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11542.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11544.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11549.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11550.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11551.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11552.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11556.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11453.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11562.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11629.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11565.lut0 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11588.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11593.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11594.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11590.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11607.lut0 (4 -> 1)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11629.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11630.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11644.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11648.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11649.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11573.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11458.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11732.lut0 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11750.lut1 (4 -> 2)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11756.lut1 (4 -> 2)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11750.lut0 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11761.lut1 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11756.lut0 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11759.lut0 (4 -> 2)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11760.lut0 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11761.lut0 (4 -> 3)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11759.lut1 (4 -> 2)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11762.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut1 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11909.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11910.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11911.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11912.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11913.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11914.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11915.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11916.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11917.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11918.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11919.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11920.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11921.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11922.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11923.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11924.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11925.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11926.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11927.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11928.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11929.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11930.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11931.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11932.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11933.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11934.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11935.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11936.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11937.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11938.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11939.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11940.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11941.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11942.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11943.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11944.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11945.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11946.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11947.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11948.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11949.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11950.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11951.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11952.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11953.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11954.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11955.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11956.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11957.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11958.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11959.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11960.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11961.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11962.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11963.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11964.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11965.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11966.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11967.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11968.lut0 (4 -> 0)
  Optimizing lut $abc$11411$auto$blifparse.cc:498:parse_blif$11969.lut0 (4 -> 0)
Removed 0 unused cells and 1232 unused wires.

6.47. Executing AUTONAME pass.
Renamed 40116 objects in module pulse_gen (99 iterations).
<suppressed ~4084 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:               1655
   Number of wire bits:           4873
   Number of public wires:        1655
   Number of public wire bits:    4873
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2560
     CCU2C                         295
     EHXPLLL                         1
     L6MUX21                       214
     LUT4                         1103
     PFUMX                         341
     TRELLIS_FF                    606

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: faee2b2c2e, CPU: user 6.20s system 0.53s, MEM: 251.50 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 17% 18x read_verilog (1 sec), 13% 1x autoname (0 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 200.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:      1693/83640     2%
Info:         logic LUTs:   1103/83640     1%
Info:         carry LUTs:    590/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:      1212/83640     1%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y41/PIOD'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y41/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y41/PIOB'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X0/Y47/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk_pll to global network
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info: Checksum: 0x994582ea

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0xda8a6bc3

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:  1228/41820     2%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 693 cells, random placement wirelen = 120517.
Info:     at initial placer iter 0, wirelen = 1530
Info:     at initial placer iter 1, wirelen = 1262
Info:     at initial placer iter 2, wirelen = 1257
Info:     at initial placer iter 3, wirelen = 1263
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 1257, spread = 12923, legal = 13362; time = 0.04s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 1642, spread = 9721, legal = 10310; time = 0.08s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 1725, spread = 7944, legal = 8860; time = 0.07s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 2037, spread = 7783, legal = 8637; time = 0.04s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 2401, spread = 7861, legal = 8718; time = 0.07s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 2500, spread = 7552, legal = 8542; time = 0.05s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 2794, spread = 7144, legal = 8086; time = 0.05s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 2871, spread = 7347, legal = 8346; time = 0.05s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 3135, spread = 6951, legal = 7907; time = 0.07s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 3106, spread = 6794, legal = 8004; time = 0.09s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 3470, spread = 6886, legal = 8226; time = 0.05s
Info:     at iteration #12, type TRELLIS_SLICE: wirelen solved = 3494, spread = 6956, legal = 7903; time = 0.05s
Info:     at iteration #13, type TRELLIS_SLICE: wirelen solved = 3541, spread = 6984, legal = 8057; time = 0.10s
Info:     at iteration #14, type TRELLIS_SLICE: wirelen solved = 3935, spread = 7012, legal = 8024; time = 0.11s
Info:     at iteration #15, type TRELLIS_SLICE: wirelen solved = 3815, spread = 7410, legal = 8403; time = 0.05s
Info:     at iteration #16, type TRELLIS_SLICE: wirelen solved = 4010, spread = 7108, legal = 8296; time = 0.05s
Info:     at iteration #17, type TRELLIS_SLICE: wirelen solved = 4197, spread = 7121, legal = 8137; time = 0.05s
Info: HeAP Placer Time: 2.08s
Info:   of which solving equations: 0.86s
Info:   of which spreading cells: 0.13s
Info:   of which strict legalisation: 0.08s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 803, wirelen = 7903
Info:   at iteration #5: temp = 0.000000, timing cost = 543, wirelen = 6801
Info:   at iteration #10: temp = 0.000000, timing cost = 542, wirelen = 6488
Info:   at iteration #15: temp = 0.000000, timing cost = 536, wirelen = 6367
Info:   at iteration #15: temp = 0.000000, timing cost = 529, wirelen = 6370 
Info: SA placement time 2.21s

Info: Max frequency for clock           '$glbnet$clk_pll': 129.79 MHz (FAIL at 200.00 MHz)
Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 274.12 MHz (PASS at 50.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 8.68 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 10.58 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 7.33 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 3.55 ns

Info: Slack histogram:
Info:  legend: * represents 8 endpoint(s)
Info:          + represents [1,8) endpoint(s)
Info: [ -5577,  -1295) |************************************************************ 
Info: [ -1295,   2987) |**********************************************+
Info: [  2987,   7269) |**********+
Info: [  7269,  11551) |+
Info: [ 11551,  15833) |****+
Info: [ 15833,  20115) |**************************************+
Info: [ 20115,  24397) | 
Info: [ 24397,  28679) | 
Info: [ 28679,  32961) | 
Info: [ 32961,  37243) | 
Info: [ 37243,  41525) | 
Info: [ 41525,  45807) | 
Info: [ 45807,  50089) | 
Info: [ 50089,  54371) | 
Info: [ 54371,  58653) | 
Info: [ 58653,  62935) | 
Info: [ 62935,  67217) | 
Info: [ 67217,  71499) | 
Info: [ 71499,  75781) | 
Info: [ 75781,  80063) |+
Info: Checksum: 0x420f0d9b
Info: Routing globals...
Info:     routing clock net $glbnet$clk_pll using global 0
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 5368 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        2        997 |    2   997 |      4371|       1.31       1.31|
Info:       2000 |       10       1989 |    8   992 |      3379|       0.64       1.95|
Info:       3000 |       17       2982 |    7   993 |      2398|       0.80       2.76|
Info:       4000 |       55       3944 |   38   962 |      1444|       1.25       4.01|
Info:       5000 |       61       4938 |    6   994 |       471|       0.61       4.62|
Info:       5474 |       64       5410 |    3   472 |         0|       0.74       5.36|
Info: Routing complete.
Info: Router1 time 5.36s
Info: Checksum: 0x5d08ead3

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.p1width_TRELLIS_FF_Q_15_SLICE.Q0
Info:  1.3  1.6    Net pulses.p1width[0] budget 0.000000 ns (78,39) -> (83,48)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_8$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:71.20-71.27
Info:  0.3  1.9  Source pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_8$CCU2_SLICE.FCO
Info:  0.0  1.9    Net pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_4_COUT[0] budget 0.000000 ns (83,48) -> (83,48)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:222.16-222.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  2.1  Source pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_3$CCU2_SLICE.F0
Info:  0.8  2.9    Net pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B[2] budget 0.000000 ns (83,48) -> (83,49)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_3$CCU2_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:222.16-222.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  3.2  Source pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  3.2    Net pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_4_COUT[3] budget 0.000000 ns (83,49) -> (83,49)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  3.2  Source pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  3.2    Net pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_4_COUT[5] budget 0.000000 ns (83,49) -> (84,49)
Info:                Sink pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  3.5  Source pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_1$CCU2_SLICE.F1
Info:  1.0  4.5    Net pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B[7] budget 0.000000 ns (84,49) -> (84,43)
Info:                Sink pulses.pulse_block_CCU2C_A0$CCU2_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  4.8  Source pulses.pulse_block_CCU2C_A0$CCU2_SLICE.FCO
Info:  0.0  4.8    Net pulses.cblock_delay_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_COUT[6] budget 0.000000 ns (84,43) -> (84,43)
Info:                Sink pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  4.8  Source pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  4.8    Net pulses.cblock_delay_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_COUT[8] budget 0.000000 ns (84,43) -> (84,43)
Info:                Sink pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  4.9  Source pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT_4$CCU2_SLICE.FCO
Info:  0.0  4.9    Net pulses.cblock_delay_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_COUT[10] budget 0.000000 ns (84,43) -> (84,43)
Info:                Sink pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  4.9  Source pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT_3$CCU2_SLICE.FCO
Info:  0.0  4.9    Net pulses.cblock_delay_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_COUT[12] budget 0.000000 ns (84,43) -> (85,43)
Info:                Sink pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  5.2  Source pulses.pulse_block_CCU2C_A0_COUT_CCU2C_COUT_2$CCU2_SLICE.F0
Info:  0.9  6.1    Net pulses.cblock_delay_TRELLIS_FF_Q_29_DI_LUT4_Z_B[14] budget 0.200000 ns (85,43) -> (85,42)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_6$CCU2_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  6.4  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  6.4    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[13] budget 0.000000 ns (85,42) -> (86,42)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  6.4  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  6.4    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[15] budget 0.000000 ns (86,42) -> (86,42)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  6.7  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4$CCU2_SLICE.F0
Info:  0.7  7.4    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B[16] budget 0.805000 ns (86,42) -> (89,43)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_13_DI_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.1  7.5  Source pulses.cblock_on_TRELLIS_FF_Q_13_DI_LUT4_Z_SLICE.F1
Info:  0.0  7.6    Net pulses.cblock_on_TRELLIS_FF_Q_13_DI budget 0.536000 ns (89,43) -> (89,43)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_13_DI_LUT4_Z_SLICE.DI1
Info:  0.0  7.6  Setup pulses.cblock_on_TRELLIS_FF_Q_13_DI_LUT4_Z_SLICE.DI1
Info: 2.8 ns logic, 4.7 ns routing

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_COUT_CCU2C_COUT_S1_LUT4_B_Z_PFUMX_BLUT_SLICE.Q0
Info:  0.8  1.1    Net control.uart0.rx_clk[9] budget 3.749000 ns (74,54) -> (74,54)
Info:                Sink RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A_LUT4_Z_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:98.39-98.45
Info:                  pulse_control.v:82.7-94.4
Info:  0.1  1.2  Source RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A_LUT4_Z_SLICE.F0
Info:  0.5  1.8    Net RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A[3] budget 3.749000 ns (74,54) -> (74,54)
Info:                Sink RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  1.9  Source RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_SLICE.F0
Info:  0.5  2.4    Net RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0[4] budget 3.780000 ns (74,54) -> (74,55)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_Z_1_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.6  Source control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_Z_1_SLICE.F1
Info:  0.5  3.1    Net control.uart0.rx_data_TRELLIS_FF_Q_CE[0] budget 3.780000 ns (74,55) -> (76,56)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_SLICE.D0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.2  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_SLICE.F0
Info:  0.4  3.6    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR budget 3.780000 ns (76,56) -> (76,57)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_SLICE.LSR
Info:  0.2  3.8  Setup control.uart0.rx_data_TRELLIS_FF_Q_7_SLICE.LSR
Info: 1.1 ns logic, 2.7 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  4.6  4.6    Net RS232_Rx$TRELLIS_IO_IN budget 4.870000 ns (0,92) -> (74,55)
Info:                Sink RS232_Rx_LUT4_A_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:53.11-53.13
Info:                  pulse_control.v:82.7-94.4
Info:  0.1  4.7  Source RS232_Rx_LUT4_A_SLICE.F0
Info:  1.1  5.8    Net RS232_Rx_LUT4_A_Z[3] budget 4.894000 ns (74,55) -> (73,54)
Info:                Sink RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_8_C_LUT4_Z_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  6.0  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_8_C_LUT4_Z_SLICE.F0
Info:  0.3  6.3    Net RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_8_C[1] budget 3.823000 ns (73,54) -> (73,54)
Info:                Sink RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A_LUT4_Z_2_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  6.4  Source RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A_LUT4_Z_2_SLICE.F1
Info:  0.1  6.5    Net RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z[0] budget 3.823000 ns (73,54) -> (73,54)
Info:                Sink RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A_LUT4_Z_2_SLICE.DI1
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:0.0-0.0
Info:                  uart_nonblock.v:155.9-258.16
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  6.5  Setup RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_C0_LUT4_Z_A_LUT4_Z_2_SLICE.DI1
Info: 0.4 ns logic, 6.1 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.0  0.0  Source resetn$tr_io.O
Info:  3.5  3.5    Net resetn$TRELLIS_IO_IN budget 0.000000 ns (0,47) -> (86,39)
Info:                Sink resetn_LUT4_D_1_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.6  Source resetn_LUT4_D_1_SLICE.F1
Info:  1.1  4.7    Net resetn_LUT4_D_1_Z[5] budget 0.000000 ns (86,39) -> (90,44)
Info:                Sink resetn_LUT4_D_1_Z_L6MUX21_SD_D1_PFUMX_Z_SLICE.M1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  4.9  Source resetn_LUT4_D_1_Z_L6MUX21_SD_D1_PFUMX_Z_SLICE.OFX1
Info:  1.3  6.1    Net resetn_LUT4_D_1_Z_L6MUX21_SD_Z[5] budget 0.000000 ns (90,44) -> (93,48)
Info:                Sink pulses.cblock_delay_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.M1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  6.3  Source pulses.cblock_delay_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  6.3    Net pulses.cblock_delay_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1 budget 0.000000 ns (93,48) -> (93,48)
Info:                Sink pulses.cblock_delay_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  6.4  Source pulses.cblock_delay_TRELLIS_FF_Q_10_LSR_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.6  7.0    Net pulses.cblock_delay_TRELLIS_FF_Q_10_LSR budget 0.700000 ns (93,48) -> (93,45)
Info:                Sink pulses.cblock_delay_TRELLIS_FF_Q_10_SLICE.LSR
Info:  0.2  7.2  Setup pulses.cblock_delay_TRELLIS_FF_Q_10_SLICE.LSR
Info: 0.8 ns logic, 6.4 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_data_TRELLIS_FF_Q_LSR_LUT4_Z_SLICE.Q1
Info:  4.6  4.9    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (75,53) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:105.9-105.15
Info:                  pulse_control.v:82.7-94.4
Info: 0.3 ns logic, 4.6 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.block_PFUMX_C0_SLICE.Q0
Info:  2.2  2.5    Net P2$TRELLIS_IO_OUT budget 83.024002 ns (85,39) -> (126,41)
Info:                Sink P2$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:45.13-45.18
Info: 0.3 ns logic, 2.2 ns routing

ERROR: Max frequency for clock           '$glbnet$clk_pll': 132.21 MHz (FAIL at 200.00 MHz)
Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 262.67 MHz (PASS at 50.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 6.52 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 7.23 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 4.87 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 2.49 ns

Info: Slack histogram:
Info:  legend: * represents 12 endpoint(s)
Info:          + represents [1,12) endpoint(s)
Info: [ -2564,   1622) |************************************************************ 
Info: [  1622,   5808) |****************+
Info: [  5808,   9994) | 
Info: [  9994,  14180) |*+
Info: [ 14180,  18366) |************************+
Info: [ 18366,  22552) |**+
Info: [ 22552,  26738) | 
Info: [ 26738,  30924) | 
Info: [ 30924,  35110) | 
Info: [ 35110,  39296) | 
Info: [ 39296,  43482) | 
Info: [ 43482,  47668) | 
Info: [ 47668,  51854) | 
Info: [ 51854,  56040) | 
Info: [ 56040,  60226) | 
Info: [ 60226,  64412) | 
Info: [ 64412,  68598) | 
Info: [ 68598,  72784) | 
Info: [ 72784,  76970) | 
Info: [ 76970,  81156) |+
0 warnings, 1 error
Makefile:23: recipe for target 'pulse_gen_out.config' failed
make: *** [pulse_gen_out.config] Error 1
rm pulse_gen_out.config pulse_gen.json
