yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$309'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$389 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$134 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$134 in module uart.
Marked 2 switch rules as full_case in process $proc$pulses.v:151$54 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:138$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:138$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 67 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$393'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$163'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$162'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$161'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:100$127'.
  Set init value: \xfer_bits = 2'01
Found init rule in `\pulses.$proc$pulses.v:94$126'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:90$125'.
  Set init value: \nutation_pulse_delay = 16'0000000100101100
Found init rule in `\pulses.$proc$pulses.v:89$124'.
  Set init value: \nutation_pulse_width = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:87$122'.
  Set init value: \nutation = 1'1
Found init rule in `\pulses.$proc$pulses.v:84$121'.
  Set init value: \block_off = 16'0000000110011010
Found init rule in `\pulses.$proc$pulses.v:83$120'.
  Set init value: \sync_down = 16'0000000100000100
Found init rule in `\pulses.$proc$pulses.v:82$119'.
  Set init value: \p2start = 16'0000000011100110
Found init rule in `\pulses.$proc$pulses.v:80$118'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulses.$proc$pulses.v:79$117'.
  Set init value: \block = 1'1
Found init rule in `\pulses.$proc$pulses.v:78$116'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulses.$proc$pulses.v:77$115'.
  Set init value: \pulse_block_off = 16'0000000001100100
Found init rule in `\pulses.$proc$pulses.v:76$114'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:75$113'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:74$112'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulses.$proc$pulses.v:73$111'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:72$110'.
  Set init value: \period = 24'000000010000000000000000
Found init rule in `\pulses.$proc$pulses.v:71$109'.
  Set init value: \pump = 1'1
Found init rule in `\pulses.$proc$pulses.v:50$107'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:135$48'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:117$47'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:116$46'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:114$44'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:51$43'.
  Set init value: \nutation = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:50$42'.
  Set init value: \nut_wid = 8'01100100
Found init rule in `\pulse_control.$proc$pulse_control.v:49$41'.
  Set init value: \nut_del = 16'0000000001100100
Found init rule in `\pulse_control.$proc$pulse_control.v:48$40'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:47$39'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:46$38'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulse_control.$proc$pulse_control.v:44$36'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:43$35'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:42$34'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:41$33'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:40$32'.
  Set init value: \period = 24'000011110000000000000000
Found init rule in `\pulse_control.$proc$pulse_control.v:39$31'.
  Set init value: \pump = 1'1

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$393'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$389'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$386'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$365'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$364_EN[3:0]$368
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$364_DATA[3:0]$367
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$364_ADDR[3:0]$366
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$332'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$310'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$308_EN[3:0]$313
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$308_DATA[3:0]$312
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$308_ADDR[3:0]$311
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$309'.
Creating decoders for process `\uart.$proc$uart.v:106$163'.
Creating decoders for process `\uart.$proc$uart.v:105$162'.
Creating decoders for process `\uart.$proc$uart.v:101$161'.
Creating decoders for process `\uart.$proc$uart.v:135$134'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:100$127'.
Creating decoders for process `\pulses.$proc$pulses.v:94$126'.
Creating decoders for process `\pulses.$proc$pulses.v:90$125'.
Creating decoders for process `\pulses.$proc$pulses.v:89$124'.
Creating decoders for process `\pulses.$proc$pulses.v:88$123'.
Creating decoders for process `\pulses.$proc$pulses.v:87$122'.
Creating decoders for process `\pulses.$proc$pulses.v:84$121'.
Creating decoders for process `\pulses.$proc$pulses.v:83$120'.
Creating decoders for process `\pulses.$proc$pulses.v:82$119'.
Creating decoders for process `\pulses.$proc$pulses.v:80$118'.
Creating decoders for process `\pulses.$proc$pulses.v:79$117'.
Creating decoders for process `\pulses.$proc$pulses.v:78$116'.
Creating decoders for process `\pulses.$proc$pulses.v:77$115'.
Creating decoders for process `\pulses.$proc$pulses.v:76$114'.
Creating decoders for process `\pulses.$proc$pulses.v:75$113'.
Creating decoders for process `\pulses.$proc$pulses.v:74$112'.
Creating decoders for process `\pulses.$proc$pulses.v:73$111'.
Creating decoders for process `\pulses.$proc$pulses.v:72$110'.
Creating decoders for process `\pulses.$proc$pulses.v:71$109'.
Creating decoders for process `\pulses.$proc$pulses.v:58$108'.
Creating decoders for process `\pulses.$proc$pulses.v:50$107'.
Creating decoders for process `\pulses.$proc$pulses.v:151$54'.
     1/13: $0\cblock_on[31:0]
     2/13: $0\cblock_delay[31:0]
     3/13: $0\cpulse[31:0]
     4/13: $0\cdelay[31:0]
     5/13: $0\ccount[7:0]
     6/13: $0\nutation_pulse_stop[23:0]
     7/13: $0\nutation_pulse_start[23:0]
     8/13: $0\inh[0:0]
     9/13: $0\nut_pulse[0:0]
    10/13: $0\pulse[0:0]
    11/13: $0\sync[0:0]
    12/13: $1\counter[31:0]
    13/13: $0\pulses[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:121$49'.
     1/13: $0\nutation_pulse_delay[15:0]
     2/13: $0\nutation_pulse_width[7:0]
     3/13: $0\counter[31:0]
     4/13: $0\cpmg[7:0]
     5/13: $0\pulse_block_off[15:0]
     6/13: $0\pulse_block[7:0]
     7/13: $0\block[0:0]
     8/13: $0\pump[0:0]
     9/13: $0\nutation[0:0]
    10/13: $0\p2width[15:0]
    11/13: $0\delay[15:0]
    12/13: $0\p1width[15:0]
    13/13: $0\period[23:0]
Creating decoders for process `\pulse_control.$proc$pulse_control.v:135$48'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:117$47'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:116$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:115$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:114$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:51$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:50$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:49$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:48$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:47$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:46$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:138$3'.
     1/33: $2\rx_done[0:0]
     2/33: $4$bitselwrite$data$pulse_control.v:154$2[31:0]$14
     3/33: $4$bitselwrite$mask$pulse_control.v:154$1[31:0]$13
     4/33: $4\vinput[31:0]
     5/33: $3$bitselwrite$data$pulse_control.v:154$2[31:0]$11
     6/33: $3$bitselwrite$mask$pulse_control.v:154$1[31:0]$10
     7/33: $3\vinput[31:0]
     8/33: $2$bitselwrite$data$pulse_control.v:154$2[31:0]$9
     9/33: $2$bitselwrite$mask$pulse_control.v:154$1[31:0]$8
    10/33: $2\vinput[31:0]
    11/33: $1$bitselwrite$data$pulse_control.v:154$2[31:0]$7
    12/33: $1$bitselwrite$mask$pulse_control.v:154$1[31:0]$6
    13/33: $1\vinput[31:0]
    14/33: $1\voutput[7:0]
    15/33: $1\rx_done[0:0]
    16/33: $0\state[2:0]
    17/33: $0\readcount[5:0]
    18/33: $0\readstate[1:0]
    19/33: $0\writestate[0:0]
    20/33: $0\vcontrol[7:0]
    21/33: $0\tx_byte[7:0]
    22/33: $0\transmit[0:0]
    23/33: $0\cpmg[7:0]
    24/33: $0\pulse_block[7:0]
    25/33: $0\block[0:0]
    26/33: $0\pump[0:0]
    27/33: $0\nutation[0:0]
    28/33: $0\nut_wid[7:0]
    29/33: $0\nut_del[15:0]
    30/33: $0\p2width[15:0]
    31/33: $0\delay[15:0]
    32/33: $0\p1width[15:0]
    33/33: $0\period[23:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\nutation_pulse' from process `\pulses.$proc$pulses.v:88$123'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:58$108'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:115$45'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:45$37'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$389'.
  created $dff cell `$procdff$1469' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$386'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$364_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$365'.
  created $dff cell `$procdff$1470' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$364_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$365'.
  created $dff cell `$procdff$1471' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$364_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$365'.
  created $dff cell `$procdff$1472' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$332'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$308_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$310'.
  created $dff cell `$procdff$1473' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$308_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$310'.
  created $dff cell `$procdff$1474' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$308_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$310'.
  created $dff cell `$procdff$1475' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$309'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1476' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1477' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1478' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1479' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1480' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1481' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1482' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1483' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1484' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1485' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$134'.
  created $dff cell `$procdff$1486' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1487' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1488' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1489' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1490' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1491' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1492' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1493' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1494' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1495' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1496' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1497' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1498' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:151$54'.
  created $dff cell `$procdff$1499' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1500' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1501' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1502' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1503' with positive edge clock.
Creating register for signal `\pulses.\nutation' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1504' with positive edge clock.
Creating register for signal `\pulses.\pump' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1505' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1506' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1507' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_off' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1508' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1509' with positive edge clock.
Creating register for signal `\pulses.\rx_done' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1510' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1511' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1512' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1513' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1514' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1515' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1516' with positive edge clock.
Creating register for signal `\pulses.\xfer_bits' using process `\pulses.$proc$pulses.v:121$49'.
  created $dff cell `$procdff$1517' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1518' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1519' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1520' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1521' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1522' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1523' with positive edge clock.
Creating register for signal `\pulse_control.\nutation' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1524' with positive edge clock.
Creating register for signal `\pulse_control.\pump' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1525' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1526' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1527' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1528' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1529' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1530' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1531' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1532' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1533' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1534' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1535' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1536' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1537' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1538' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:154$1' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1539' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:154$2' using process `\pulse_control.$proc$pulse_control.v:138$3'.
  created $dff cell `$procdff$1540' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$393'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$389'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$389'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$386'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$365'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$365'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$332'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$310'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$310'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$309'.
Removing empty process `uart.$proc$uart.v:106$163'.
Removing empty process `uart.$proc$uart.v:105$162'.
Removing empty process `uart.$proc$uart.v:101$161'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$134'.
Removing empty process `uart.$proc$uart.v:135$134'.
Removing empty process `pulses.$proc$pulses.v:100$127'.
Removing empty process `pulses.$proc$pulses.v:94$126'.
Removing empty process `pulses.$proc$pulses.v:90$125'.
Removing empty process `pulses.$proc$pulses.v:89$124'.
Removing empty process `pulses.$proc$pulses.v:88$123'.
Removing empty process `pulses.$proc$pulses.v:87$122'.
Removing empty process `pulses.$proc$pulses.v:84$121'.
Removing empty process `pulses.$proc$pulses.v:83$120'.
Removing empty process `pulses.$proc$pulses.v:82$119'.
Removing empty process `pulses.$proc$pulses.v:80$118'.
Removing empty process `pulses.$proc$pulses.v:79$117'.
Removing empty process `pulses.$proc$pulses.v:78$116'.
Removing empty process `pulses.$proc$pulses.v:77$115'.
Removing empty process `pulses.$proc$pulses.v:76$114'.
Removing empty process `pulses.$proc$pulses.v:75$113'.
Removing empty process `pulses.$proc$pulses.v:74$112'.
Removing empty process `pulses.$proc$pulses.v:73$111'.
Removing empty process `pulses.$proc$pulses.v:72$110'.
Removing empty process `pulses.$proc$pulses.v:71$109'.
Removing empty process `pulses.$proc$pulses.v:58$108'.
Removing empty process `pulses.$proc$pulses.v:50$107'.
Found and cleaned up 7 empty switches in `\pulses.$proc$pulses.v:151$54'.
Removing empty process `pulses.$proc$pulses.v:151$54'.
Found and cleaned up 2 empty switches in `\pulses.$proc$pulses.v:121$49'.
Removing empty process `pulses.$proc$pulses.v:121$49'.
Removing empty process `pulse_control.$proc$pulse_control.v:135$48'.
Removing empty process `pulse_control.$proc$pulse_control.v:117$47'.
Removing empty process `pulse_control.$proc$pulse_control.v:116$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:115$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:114$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:51$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:50$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:49$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:48$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:47$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:46$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$31'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:138$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:138$3'.
Cleaned up 39 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~106 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 45 unused cells and 367 unused wires.
<suppressed ~58 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [31]:
    port Q[31] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[31] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [30]:
    port Q[30] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[30] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [29]:
    port Q[29] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[29] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [28]:
    port Q[28] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[28] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [27]:
    port Q[27] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[27] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [26]:
    port Q[26] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[26] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [25]:
    port Q[25] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[25] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [24]:
    port Q[24] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[24] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [23]:
    port Q[23] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[23] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [22]:
    port Q[22] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[22] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [21]:
    port Q[21] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[21] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [20]:
    port Q[20] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[20] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [19]:
    port Q[19] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[19] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [18]:
    port Q[18] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[18] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [17]:
    port Q[17] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[17] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [16]:
    port Q[16] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[16] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [15]:
    port Q[15] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[15] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [14]:
    port Q[14] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[14] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [13]:
    port Q[13] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[13] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [12]:
    port Q[12] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[12] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [11]:
    port Q[11] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[11] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [10]:
    port Q[10] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[10] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [9]:
    port Q[9] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[9] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [8]:
    port Q[8] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[8] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [7]:
    port Q[7] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[7] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [6]:
    port Q[6] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[6] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [5]:
    port Q[5] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[5] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [4]:
    port Q[4] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[4] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [3]:
    port Q[3] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[3] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [2]:
    port Q[2] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[2] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [1]:
    port Q[1] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[1] of cell $flatten\pulses.$procdff$1511 ($dff)
Warning: multiple conflicting drivers for pulse_gen.\pulses.counter [0]:
    port Q[0] of cell $flatten\pulses.$procdff$1488 ($dff)
    port Q[0] of cell $flatten\pulses.$procdff$1511 ($dff)
found and reported 32 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~609 debug messages>
Removed a total of 203 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1317: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1315: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1319: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$487.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$494.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$502.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$510.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$518.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$526.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$534.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$567.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$577.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$579.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$589.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$591.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$601.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$603.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$612.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$621.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$630.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$639.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$648.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$657.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$668.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$670.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$680.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$690.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$700.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$710.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$722.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$724.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$736.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$738.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$750.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$752.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$764.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$766.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$778.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$780.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$791.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$802.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$813.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$824.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$835.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$847.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$859.
    dead port 2/2 on $mux $flatten\control.$procmux$1128.
    dead port 2/2 on $mux $flatten\control.$procmux$1169.
    dead port 2/2 on $mux $flatten\control.$procmux$1171.
    dead port 2/2 on $mux $flatten\control.$procmux$1173.
    dead port 2/2 on $mux $flatten\control.$procmux$1207.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$417.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$419.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$427.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$429.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$437.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$439.
    dead port 2/2 on $mux $flatten\control.$procmux$1209.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$447.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$449.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$457.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$459.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$466.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$473.
    dead port 2/2 on $mux $flatten\control.$procmux$1236.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$480.
Removed 63 multiplexer ports.
<suppressed ~60 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$536: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP $auto$opt_reduce.cc:134:opt_mux$1542 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$541: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP $auto$opt_reduce.cc:134:opt_mux$1544 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP $auto$opt_reduce.cc:134:opt_mux$1546 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1283: { $flatten\control.$procmux$1174_CMP $auto$opt_reduce.cc:134:opt_mux$1548 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$556: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP $auto$opt_reduce.cc:134:opt_mux$1550 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$870: { $flatten\control.\uart0.$procmux$848_CMP $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$671_CMP $flatten\control.\uart0.$procmux$580_CMP $flatten\control.\uart0.$procmux$864_CMP $auto$opt_reduce.cc:134:opt_mux$1552 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$879: { $flatten\control.\uart0.$procmux$580_CMP $auto$opt_reduce.cc:134:opt_mux$1554 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$888: { $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$580_CMP $auto$opt_reduce.cc:134:opt_mux$1556 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$897: { $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$671_CMP $flatten\control.\uart0.$procmux$580_CMP $auto$opt_reduce.cc:134:opt_mux$1558 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$906: { $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$671_CMP $flatten\control.\uart0.$procmux$580_CMP $auto$opt_reduce.cc:134:opt_mux$1560 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1018: $auto$opt_reduce.cc:134:opt_mux$1562
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$942: $auto$opt_reduce.cc:134:opt_mux$1564
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$962: $auto$opt_reduce.cc:134:opt_mux$1566
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$980: $auto$opt_reduce.cc:134:opt_mux$1568
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$998: $auto$opt_reduce.cc:134:opt_mux$1570
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 275 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.pulses.pulse_block_off as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pulses.$procdff$1516 ($dff) from module pulse_gen (D = \control.nut_del, Q = \pulses.nutation_pulse_delay).
Adding EN signal on $flatten\pulses.$procdff$1515 ($dff) from module pulse_gen (D = \control.nut_wid, Q = \pulses.nutation_pulse_width).
Adding EN signal on $flatten\pulses.$procdff$1511 ($dff) from module pulse_gen (D = 0, Q = \pulses.counter).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 25 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 27 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 28 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 29 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 30 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 31 on $auto$opt_dff.cc:764:run$1573 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1509 ($dff) from module pulse_gen (D = \control.cpmg, Q = \pulses.cpmg).
Adding EN signal on $flatten\pulses.$procdff$1508 ($dff) from module pulse_gen (D = 16'0000000001100100, Q = \pulses.pulse_block_off).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 2 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 5 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 1-bit at position 6 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1507 ($dff) from module pulse_gen (D = \control.pulse_block, Q = \pulses.pulse_block).
Adding EN signal on $flatten\pulses.$procdff$1506 ($dff) from module pulse_gen (D = \control.block, Q = \pulses.block).
Adding EN signal on $flatten\pulses.$procdff$1505 ($dff) from module pulse_gen (D = \control.pump, Q = \pulses.pump).
Adding EN signal on $flatten\pulses.$procdff$1504 ($dff) from module pulse_gen (D = \control.nutation, Q = \pulses.nutation).
Adding EN signal on $flatten\pulses.$procdff$1503 ($dff) from module pulse_gen (D = \control.p2width, Q = \pulses.p2width).
Adding EN signal on $flatten\pulses.$procdff$1502 ($dff) from module pulse_gen (D = \control.delay, Q = \pulses.delay).
Adding EN signal on $flatten\pulses.$procdff$1501 ($dff) from module pulse_gen (D = \control.p1width, Q = \pulses.p1width).
Adding EN signal on $flatten\pulses.$procdff$1500 ($dff) from module pulse_gen (D = \control.period, Q = \pulses.period).
Adding EN signal on $flatten\pulses.$procdff$1499 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$939_Y, Q = \pulses.cblock_on).
Adding EN signal on $flatten\pulses.$procdff$1498 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$959_Y, Q = \pulses.cblock_delay).
Adding EN signal on $flatten\pulses.$procdff$1497 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$977_Y, Q = \pulses.cpulse).
Adding EN signal on $flatten\pulses.$procdff$1496 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$995_Y, Q = \pulses.cdelay).
Adding EN signal on $flatten\pulses.$procdff$1495 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1015_Y, Q = \pulses.ccount).
Adding SRST signal on $auto$opt_dff.cc:764:run$1670 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$1013_Y, Q = \pulses.ccount, rval = 8'00000000).
Adding EN signal on $flatten\pulses.$procdff$1494 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:154$56_Y, Q = \pulses.nutation_pulse_stop).
Adding EN signal on $flatten\pulses.$procdff$1493 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:154$57_Y, Q = \pulses.nutation_pulse_start).
Adding EN signal on $flatten\pulses.$procdff$1492 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1050_Y, Q = \pulses.inh).
Adding EN signal on $flatten\pulses.$procdff$1491 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1056_Y, Q = \pulses.nut_pulse).
Adding SRST signal on $auto$opt_dff.cc:764:run$1701 ($dffe) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:158$61_Y [0], Q = \pulses.nut_pulse, rval = 1'0).
Adding EN signal on $flatten\pulses.$procdff$1490 ($dff) from module pulse_gen (D = $flatten\pulses.$logic_or$pulses.v:308$106_Y, Q = \pulses.pulse).
Adding EN signal on $flatten\pulses.$procdff$1489 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1073_Y, Q = \pulses.sync).
Adding EN signal on $flatten\pulses.$procdff$1488 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:307$105_Y, Q = \pulses.counter).
Adding SRST signal on $auto$opt_dff.cc:764:run$1723 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:307$104_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\pulses.$procdff$1487 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$1093_Y, Q = \pulses.pulses).
Adding EN signal on $flatten\control.\uart0.$procdff$1486 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1485 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1484 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1483 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1482 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1481 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1480 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1477 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1476 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1538 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1537 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1536 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1303_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1535 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1534 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:171$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1533 ($dff) from module pulse_gen (D = \control.uart0.rx_data, Q = \control.vcontrol).
Adding EN signal on $flatten\control.$procdff$1532 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1531 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1530 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1529 ($dff) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.rx_done).
Adding EN signal on $flatten\control.$procdff$1528 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.cpmg).
Adding EN signal on $flatten\control.$procdff$1527 ($dff) from module pulse_gen (D = \control.vinput [15:8], Q = \control.pulse_block).
Adding EN signal on $flatten\control.$procdff$1526 ($dff) from module pulse_gen (D = \control.vinput [1], Q = \control.block).
Adding EN signal on $flatten\control.$procdff$1525 ($dff) from module pulse_gen (D = \control.vinput [0], Q = \control.pump).
Adding EN signal on $flatten\control.$procdff$1524 ($dff) from module pulse_gen (D = \control.vinput [0], Q = \control.nutation).
Adding EN signal on $flatten\control.$procdff$1523 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.nut_wid).
Adding EN signal on $flatten\control.$procdff$1522 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.nut_del).
Adding EN signal on $flatten\control.$procdff$1521 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p2width).
Adding EN signal on $flatten\control.$procdff$1520 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.delay).
Adding EN signal on $flatten\control.$procdff$1519 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p1width).
Adding EN signal on $flatten\control.$procdff$1518 ($dff) from module pulse_gen (D = { \control.vinput [7:0] 16'0000000000000000 }, Q = \control.period).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1931 ($dffe) from module pulse_gen.

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Warning: Driver-driver conflict for \pulses.counter [31] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [30] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [29] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [28] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [27] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [26] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [25] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [24] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [23] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [22] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [21] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [20] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [19] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [18] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [17] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [16] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [15] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [14] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [13] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [12] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [11] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [10] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [9] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [8] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [7] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [6] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [5] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [4] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [3] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [2] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [1] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Warning: Driver-driver conflict for \pulses.counter [0] between cell $auto$opt_dff.cc:702:run$1724.Q and constant 1'0 in pulse_gen: Resolved using constant.
Removed 77 unused cells and 75 unused wires.
<suppressed ~78 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~43 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1033.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1033.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1035.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1035.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1037.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1037.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1039.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1039.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1041.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1041.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1043.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1043.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1045.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1045.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1064.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1064.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1066.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1066.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1068.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1068.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1082.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1082.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1084.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1084.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1086.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1086.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1088.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1088.
    dead port 1/2 on $mux $flatten\pulses.$procmux$927.
    dead port 2/2 on $mux $flatten\pulses.$procmux$927.
    dead port 1/2 on $mux $flatten\pulses.$procmux$929.
    dead port 2/2 on $mux $flatten\pulses.$procmux$929.
    dead port 1/2 on $mux $flatten\pulses.$procmux$931.
    dead port 2/2 on $mux $flatten\pulses.$procmux$931.
    dead port 1/2 on $mux $flatten\pulses.$procmux$933.
    dead port 2/2 on $mux $flatten\pulses.$procmux$933.
    dead port 1/2 on $mux $flatten\pulses.$procmux$935.
    dead port 2/2 on $mux $flatten\pulses.$procmux$935.
    dead port 1/2 on $mux $flatten\pulses.$procmux$937.
    dead port 2/2 on $mux $flatten\pulses.$procmux$937.
    dead port 1/2 on $mux $flatten\pulses.$procmux$947.
    dead port 2/2 on $mux $flatten\pulses.$procmux$947.
    dead port 1/2 on $mux $flatten\pulses.$procmux$949.
    dead port 2/2 on $mux $flatten\pulses.$procmux$949.
    dead port 1/2 on $mux $flatten\pulses.$procmux$951.
    dead port 2/2 on $mux $flatten\pulses.$procmux$951.
    dead port 1/2 on $mux $flatten\pulses.$procmux$953.
    dead port 2/2 on $mux $flatten\pulses.$procmux$953.
    dead port 1/2 on $mux $flatten\pulses.$procmux$955.
    dead port 2/2 on $mux $flatten\pulses.$procmux$955.
    dead port 1/2 on $mux $flatten\pulses.$procmux$957.
    dead port 2/2 on $mux $flatten\pulses.$procmux$957.
    dead port 1/2 on $mux $flatten\pulses.$procmux$969.
    dead port 2/2 on $mux $flatten\pulses.$procmux$969.
    dead port 1/2 on $mux $flatten\pulses.$procmux$971.
    dead port 2/2 on $mux $flatten\pulses.$procmux$971.
    dead port 1/2 on $mux $flatten\pulses.$procmux$973.
    dead port 2/2 on $mux $flatten\pulses.$procmux$973.
    dead port 1/2 on $mux $flatten\pulses.$procmux$975.
    dead port 2/2 on $mux $flatten\pulses.$procmux$975.
    dead port 1/2 on $mux $flatten\pulses.$procmux$987.
    dead port 2/2 on $mux $flatten\pulses.$procmux$987.
    dead port 1/2 on $mux $flatten\pulses.$procmux$989.
    dead port 2/2 on $mux $flatten\pulses.$procmux$989.
    dead port 1/2 on $mux $flatten\pulses.$procmux$991.
    dead port 2/2 on $mux $flatten\pulses.$procmux$991.
    dead port 1/2 on $mux $flatten\pulses.$procmux$993.
    dead port 2/2 on $mux $flatten\pulses.$procmux$993.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:253$87.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:253$87.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:273$96.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:273$96.
Removed 72 multiplexer ports.
<suppressed ~25 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1736: { $auto$rtlil.cc:2121:Not$1734 $auto$opt_dff.cc:217:make_patterns_logic$1731 $auto$opt_dff.cc:217:make_patterns_logic$1729 $auto$opt_dff.cc:217:make_patterns_logic$1727 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1721: { $auto$rtlil.cc:2121:Not$1719 $auto$opt_dff.cc:217:make_patterns_logic$1716 $auto$opt_dff.cc:217:make_patterns_logic$1714 $auto$opt_dff.cc:217:make_patterns_logic$1712 $auto$opt_dff.cc:217:make_patterns_logic$1710 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1699: { $auto$rtlil.cc:2121:Not$1697 $auto$opt_dff.cc:217:make_patterns_logic$1694 $auto$opt_dff.cc:217:make_patterns_logic$1692 $auto$opt_dff.cc:217:make_patterns_logic$1690 $auto$opt_dff.cc:217:make_patterns_logic$1688 $auto$opt_dff.cc:217:make_patterns_logic$1686 $auto$opt_dff.cc:217:make_patterns_logic$1684 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1669: { $auto$rtlil.cc:2121:Not$1667 $auto$rtlil.cc:2121:Not$1665 $auto$opt_dff.cc:217:make_patterns_logic$1662 $auto$opt_dff.cc:217:make_patterns_logic$1660 $auto$opt_dff.cc:217:make_patterns_logic$1658 $auto$opt_dff.cc:217:make_patterns_logic$1656 $auto$opt_dff.cc:217:make_patterns_logic$1654 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1650: { $auto$opt_dff.cc:217:make_patterns_logic$1639 $auto$opt_dff.cc:217:make_patterns_logic$1641 $auto$rtlil.cc:2121:Not$1648 $auto$rtlil.cc:2121:Not$1646 $auto$opt_dff.cc:217:make_patterns_logic$1643 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1635: { $auto$opt_dff.cc:217:make_patterns_logic$1624 $auto$opt_dff.cc:217:make_patterns_logic$1626 $auto$opt_dff.cc:217:make_patterns_logic$1628 $auto$rtlil.cc:2121:Not$1631 $auto$rtlil.cc:2121:Not$1633 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1620: { $auto$opt_dff.cc:217:make_patterns_logic$1605 $auto$opt_dff.cc:217:make_patterns_logic$1607 $auto$opt_dff.cc:217:make_patterns_logic$1609 $auto$opt_dff.cc:217:make_patterns_logic$1611 $auto$opt_dff.cc:217:make_patterns_logic$1613 $auto$rtlil.cc:2121:Not$1616 $auto$rtlil.cc:2121:Not$1618 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1601: { $auto$opt_dff.cc:217:make_patterns_logic$1586 $auto$opt_dff.cc:217:make_patterns_logic$1590 $auto$opt_dff.cc:217:make_patterns_logic$1588 $auto$opt_dff.cc:217:make_patterns_logic$1592 $auto$opt_dff.cc:217:make_patterns_logic$1594 $auto$rtlil.cc:2121:Not$1597 $auto$rtlil.cc:2121:Not$1599 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$536: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$541: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$503_CMP $flatten\control.\uart0.$procmux$420_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$879: $flatten\control.\uart0.$procmux$580_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$888: { $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$580_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$897: { $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$671_CMP $flatten\control.\uart0.$procmux$580_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$906: { $flatten\control.\uart0.$procmux$725_CMP $flatten\control.\uart0.$procmux$671_CMP $flatten\control.\uart0.$procmux$580_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~198 debug messages>
Removed a total of 66 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 5 unused cells and 123 unused wires.
<suppressed ~6 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~14 debug messages>

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1736: { $auto$rtlil.cc:2121:Not$1597 $auto$opt_dff.cc:217:make_patterns_logic$1694 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1721: { $auto$rtlil.cc:2121:Not$1597 $auto$opt_dff.cc:217:make_patterns_logic$1694 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1699: { $auto$rtlil.cc:2121:Not$1597 $auto$opt_dff.cc:217:make_patterns_logic$1694 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1669: { $auto$rtlil.cc:2121:Not$1597 $auto$rtlil.cc:2121:Not$1599 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$1635: { $auto$rtlil.cc:2121:Not$1597 $auto$rtlil.cc:2121:Not$1599 }
  Optimizing cells in module \pulse_gen.
Performed a total of 5 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active SRST on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen (changing to const D).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:702:run$1671 ($sdffce) from module pulse_gen.

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 25 unused cells and 42 unused wires.
<suppressed ~30 debug messages>

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Rerunning OPT passes. (Maybe there is more to do..)

6.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.27. Executing OPT_DFF pass (perform DFF optimizations).

6.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.30. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1770 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$146 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$148 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$152 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$159 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$420_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$425 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$435 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$455 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$464 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$471 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$478 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$485 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$500 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$508 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$516 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$532 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$565 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$580_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$587 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$610 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$628 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$637 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$646 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$655 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$666 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$671_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$678 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$688 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$708 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$720 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$725_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$734 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$762 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$789 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$800 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$822 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$833 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$845 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$879 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1466_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1453_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1427_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1416_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1408_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1401_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1375_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1365_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1353 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1349 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1309 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1307 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1304_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1301 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1294 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1292 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1279 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1277 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1275 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1265 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1261 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1256_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1129_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:155$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:155$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1842 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1840 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1836 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1864 ($ne).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$procmux$1019_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:217$72 ($mux).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:217$70 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:204$69 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:205$67 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:206$66 ($mux).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:206$65 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:205$64 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:204$63 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:158$61 ($mux).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:158$60 ($lt).
Removed top 31 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$lt$pulses.v:157$59 ($lt).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:155$23_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1307_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$146_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$152_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$159_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:158$61_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:204$69_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:205$67_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:206$66_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:217$72_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 56 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~92 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:155$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:171$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:171$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:171$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$143 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$136 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$138 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$144 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$149 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$157 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:139$50 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:140$51 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:141$52 ($add).
  creating $macc model for $flatten\pulses.$sub$pulses.v:141$53 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:154$56 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:154$57 ($sub).
  merging $macc model for $flatten\pulses.$add$pulses.v:141$52 into $flatten\pulses.$sub$pulses.v:141$53.
  merging $macc model for $flatten\control.$add$pulse_control.v:171$26 into $flatten\control.$add$pulse_control.v:171$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:171$25 into $flatten\control.$add$pulse_control.v:171$27.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:140$51.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:139$50.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$157.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$149.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$144.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$138.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$136.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$143.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:154$56.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:154$57.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:155$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:171$27: $auto$alumacc.cc:365:replace_macc$1950
  creating $macc cell for $flatten\pulses.$sub$pulses.v:141$53: $auto$alumacc.cc:365:replace_macc$1951
  creating $alu model for $flatten\pulses.$lt$pulses.v:157$59 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:158$60 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:204$63 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:205$64 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:206$65 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:217$70 ($lt): new $alu
  creating $alu cell for $flatten\pulses.$lt$pulses.v:217$70: $auto$alumacc.cc:485:replace_alu$1958
  creating $alu cell for $flatten\pulses.$lt$pulses.v:206$65: $auto$alumacc.cc:485:replace_alu$1963
  creating $alu cell for $flatten\pulses.$lt$pulses.v:205$64: $auto$alumacc.cc:485:replace_alu$1968
  creating $alu cell for $flatten\pulses.$lt$pulses.v:204$63: $auto$alumacc.cc:485:replace_alu$1973
  creating $alu cell for $flatten\pulses.$lt$pulses.v:158$60: $auto$alumacc.cc:485:replace_alu$1978
  creating $alu cell for $flatten\pulses.$lt$pulses.v:157$59: $auto$alumacc.cc:485:replace_alu$1983
  creating $alu cell for $flatten\control.$add$pulse_control.v:155$23: $auto$alumacc.cc:485:replace_alu$1988
  creating $alu cell for $flatten\pulses.$sub$pulses.v:154$57: $auto$alumacc.cc:485:replace_alu$1991
  creating $alu cell for $flatten\pulses.$sub$pulses.v:154$56: $auto$alumacc.cc:485:replace_alu$1994
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$143: $auto$alumacc.cc:485:replace_alu$1997
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$136: $auto$alumacc.cc:485:replace_alu$2000
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$138: $auto$alumacc.cc:485:replace_alu$2003
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$144: $auto$alumacc.cc:485:replace_alu$2006
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$149: $auto$alumacc.cc:485:replace_alu$2009
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$157: $auto$alumacc.cc:485:replace_alu$2012
  creating $alu cell for $flatten\pulses.$add$pulses.v:139$50: $auto$alumacc.cc:485:replace_alu$2015
  creating $alu cell for $flatten\pulses.$add$pulses.v:140$51: $auto$alumacc.cc:485:replace_alu$2018
  created 17 $alu and 2 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$897: { $flatten\control.\uart0.$procmux$671_CMP $auto$opt_reduce.cc:134:opt_mux$2022 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$906: { $flatten\control.\uart0.$procmux$671_CMP $auto$opt_reduce.cc:134:opt_mux$2024 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 16 unused wires.
<suppressed ~9 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~40 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1897 ($dffe) from module pulse_gen (D = $flatten\control.$2\rx_done[0:0], Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1870 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1317_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1867 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1933 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1858 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1932 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1834 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1819 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1793 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1775 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1759 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1748 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1722 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1946 [0], Q = \pulses.sync, rval = 1'1).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 10 unused cells and 12 unused wires.
<suppressed ~11 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1263:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1263_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1263_Y [1]
      New connections: { $flatten\control.$procmux$1263_Y [2] $flatten\control.$procmux$1263_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1303:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1933 [0] }, B=2'00, Y=$flatten\control.$procmux$1303_Y
      New ports: A=$auto$wreduce.cc:454:run$1933 [0], B=1'0, Y=$flatten\control.$procmux$1303_Y [0]
      New connections: $flatten\control.$procmux$1303_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$425:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1936 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1936 [9] $auto$wreduce.cc:454:run$1936 [1] }
      New connections: { $auto$wreduce.cc:454:run$1936 [8:2] $auto$wreduce.cc:454:run$1936 [0] } = { 1'0 $auto$wreduce.cc:454:run$1936 [1] $auto$wreduce.cc:454:run$1936 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$575:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$587:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1938 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1938 [2] $auto$wreduce.cc:454:run$1938 [0] }
      New connections: { $auto$wreduce.cc:454:run$1938 [9:3] $auto$wreduce.cc:454:run$1938 [1] } = { $auto$wreduce.cc:454:run$1938 [0] $auto$wreduce.cc:454:run$1938 [2] $auto$wreduce.cc:454:run$1938 [2] 1'1 $auto$wreduce.cc:454:run$1938 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$599:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$748:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$154:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$154_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$154_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$154_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$154_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$160:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$160_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$160_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$160_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$160_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1268:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1263_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1263_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1867 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1849 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
  add \pulses.sync_down (16 bits, unsigned)
  sub \pulses.pulse_block (8 bits, unsigned)
  add \pulses.delay (16 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=16\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=8\Y_WIDTH=24 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~2368 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1253 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~528 debug messages>
Removed a total of 176 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4677 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4677 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4678 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4678 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4679 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$4679 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 495 unused cells and 1420 unused wires.
<suppressed ~496 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4469 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1268.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4468 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1268.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2304 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$861.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2303 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$861.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2302 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$861.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2249 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2208 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$546.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2207 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$546.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PN_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
No more expansions possible.
<suppressed ~576 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2069 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 982 gates and 1188 wires to a netlist network with 204 inputs and 206 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     215.
ABC: Participating nodes from both networks       =     496.
ABC: Participating nodes from the first network   =     227. (  77.74 % of nodes)
ABC: Participating nodes from the second network  =     269. (  92.12 % of nodes)
ABC: Node pairs (any polarity)                    =     227. (  77.74 % of names can be moved)
ABC: Node pairs (same polarity)                   =     215. (  73.63 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      291
ABC RESULTS:        internal signals:      778
ABC RESULTS:           input signals:      204
ABC RESULTS:          output signals:      206
Removing temp directory.
Removed 0 unused cells and 650 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod$b5cd238a527d851ba52055b76f8b8313ff4d0a1d\$lut for cells of type $lut.
Using template $paramod$1929d44748517239e36a599c0facfb62ddb99607\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod$57619346c001bba14f685682aaa48a843cd5a7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=234881024 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod$05b7e8229d9a7a31e653ac7a3cef172aa16e73f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=401139735 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111000100000001000000010000 for cells of type $lut.
Using template $paramod$56f3e246421b6b29fd066d86d01fc72a1f44c94f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=33023 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod$561e376e62fd0ae35c0d0864d2d69979f67e9294\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100000001111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111110100000000000000 for cells of type $lut.
Using template $paramod$d611654eaf2cfdde5476b49ff7dde7a3d8cbca2c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10111111111111110000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000000011111000100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100010001111111111110000 for cells of type $lut.
Using template $paramod$34761ec4d1c147b684bec192cbb6fb046dbf7610\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
No more expansions possible.
<suppressed ~1364 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7764.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut1 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut2 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut3 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut4 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut5 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut6 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7854.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7845.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7839.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7839.lut2 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7839.lut3 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7840.lut7 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7837.lut7 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut3 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut4 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut5 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut6 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut4 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut5 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut6 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut7 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7838.lut7 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7736.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7743.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7744.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7742.lut2 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7742.lut3 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7741.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7741.lut2 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7741.lut3 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7725.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7730.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7715.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7715.lut3 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7720.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut2 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut3 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut4 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut5 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut6 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut7 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7715.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7725.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7725.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7731.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7719.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7736.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7742.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7736.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7764.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7764.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7765.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7779.lut1 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7779.lut0 (4 -> 2)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7788.lut0 (4 -> 3)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7788.lut1 (4 -> 2)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7844.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7834.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7836.lut0 (4 -> 1)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7845.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7849.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7850.lut0 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7845.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7857.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7793.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7861.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7791.lut1 (4 -> 0)
  Optimizing lut $abc$7713$auto$blifparse.cc:498:parse_blif$7877.lut0 (4 -> 3)
Removed 0 unused cells and 600 unused wires.

6.47. Executing AUTONAME pass.
Renamed 14662 objects in module pulse_gen (72 iterations).
<suppressed ~1454 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:                552
   Number of wire bits:           2430
   Number of public wires:         552
   Number of public wire bits:    2430
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1034
     CCU2C                         122
     EHXPLLL                         1
     L6MUX21                        29
     LUT4                          386
     PFUMX                          73
     TRELLIS_FF                    423

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

Warnings: 64 unique messages, 64 total
End of script. Logfile hash: f70655ad4b, CPU: user 3.27s system 0.47s, MEM: 250.66 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 26% 18x read_verilog (1 sec), 19% 1x abc (0 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 200.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:       630/83640     0%
Info:         logic LUTs:    386/83640     0%
Info:         carry LUTs:    244/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:       846/83640     1%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y41/PIOD'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y41/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y41/PIOB'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X0/Y47/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info:     promoting clock net clk_pll to global network
Info: Checksum: 0xa7533c4b

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x40ef83e6

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:   591/41820     1%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 426 cells, random placement wirelen = 66332.
Info:     at initial placer iter 0, wirelen = 926
Info:     at initial placer iter 1, wirelen = 852
Info:     at initial placer iter 2, wirelen = 838
Info:     at initial placer iter 3, wirelen = 852
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 849, spread = 5056, legal = 5177; time = 0.02s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 992, spread = 3429, legal = 3811; time = 0.03s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 1128, spread = 3314, legal = 3628; time = 0.03s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 1287, spread = 3183, legal = 3555; time = 0.03s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 1348, spread = 3088, legal = 3363; time = 0.02s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 1486, spread = 3108, legal = 3413; time = 0.03s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 1540, spread = 3047, legal = 3602; time = 0.03s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 1649, spread = 3025, legal = 3540; time = 0.02s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 1794, spread = 2972, legal = 3292; time = 0.03s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 1765, spread = 2873, legal = 3345; time = 0.02s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 1840, spread = 3086, legal = 3381; time = 0.02s
Info:     at iteration #12, type TRELLIS_SLICE: wirelen solved = 1880, spread = 3048, legal = 3468; time = 0.03s
Info:     at iteration #13, type TRELLIS_SLICE: wirelen solved = 1941, spread = 3135, legal = 3616; time = 0.05s
Info:     at iteration #14, type TRELLIS_SLICE: wirelen solved = 1995, spread = 3138, legal = 3725; time = 0.03s
Info: HeAP Placer Time: 0.58s
Info:   of which solving equations: 0.35s
Info:   of which spreading cells: 0.04s
Info:   of which strict legalisation: 0.02s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 73, wirelen = 3292
Info:   at iteration #5: temp = 0.000000, timing cost = 68, wirelen = 2907
Info:   at iteration #10: temp = 0.000000, timing cost = 71, wirelen = 2771
Info:   at iteration #15: temp = 0.000000, timing cost = 67, wirelen = 2695
Info:   at iteration #19: temp = 0.000000, timing cost = 68, wirelen = 2668 
Info: SA placement time 0.85s

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 168.98 MHz (PASS at 50.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 323.94 MHz (PASS at 200.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 11.54 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 8.24 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 9.70 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 3.42 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 1.93 ns

Info: Slack histogram:
Info:  legend: * represents 5 endpoint(s)
Info:          + represents [1,5) endpoint(s)
Info: [ -3241,    994) |*****+
Info: [   994,   5229) |***************+
Info: [  5229,   9464) |***+
Info: [  9464,  13699) |*****+
Info: [ 13699,  17934) |************************************************************ 
Info: [ 17934,  22169) |*************************+
Info: [ 22169,  26404) | 
Info: [ 26404,  30639) | 
Info: [ 30639,  34874) | 
Info: [ 34874,  39109) | 
Info: [ 39109,  43344) | 
Info: [ 43344,  47579) | 
Info: [ 47579,  51814) | 
Info: [ 51814,  56049) | 
Info: [ 56049,  60284) | 
Info: [ 60284,  64519) | 
Info: [ 64519,  68754) | 
Info: [ 68754,  72989) | 
Info: [ 72989,  77224) |+
Info: [ 77224,  81459) |+
Info: Checksum: 0xeb159cd9
Info: Routing globals...
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 0
Info:     routing clock net $glbnet$clk_pll using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 2460 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        2        997 |    2   997 |      1470|       0.43       0.43|
Info:       2000 |       11       1988 |    9   991 |       481|       0.52       0.95|
Info:       2481 |       12       2469 |    1   481 |         0|       0.60       1.54|
Info: Routing complete.
Info: Router1 time 1.54s
Info: Checksum: 0x9dd43bbd

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_SLICE.Q0
Info:  1.1  1.4    Net control.uart0.rx_clk[10] budget 3.552000 ns (101,43) -> (100,40)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.C0
Info:                Defined in:
Info:                  pulse_gen.v:61.16-80.4
Info:                  uart.v:98.39-98.45
Info:                  pulse_control.v:86.7-98.4
Info:  0.2  1.7  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  1.7    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0 budget 0.000000 ns (100,40) -> (100,40)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.50-158.52
Info:  0.1  1.8  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  1.8    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0 budget 0.000000 ns (100,40) -> (100,40)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.66-158.68
Info:  0.1  1.9  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.9  2.9    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0[2] budget 3.575000 ns (100,40) -> (102,43)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S1_S0_CCU2C_S1_S0_LUT4_D_2_SLICE.A1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.0  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S1_S0_CCU2C_S1_S0_LUT4_D_2_SLICE.F1
Info:  0.7  3.8    Net RS232_Rx_LUT4_D_Z_LUT4_Z_C[0] budget 3.574000 ns (102,43) -> (101,43)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_L6MUX21_SD_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.A0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  4.0  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_L6MUX21_SD_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  4.0    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_L6MUX21_SD_Z_L6MUX21_Z_D1 budget 0.000000 ns (101,43) -> (101,43)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_L6MUX21_SD_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  4.1  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_L6MUX21_SD_Z_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  1.1  5.3    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_L6MUX21_SD_Z[5] budget 3.653000 ns (101,43) -> (105,42)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_D_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.4  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_D_SLICE.F1
Info:  0.6  6.0    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_D_Z budget 3.652000 ns (105,42) -> (103,37)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_2_SLICE.CE
Info:  0.0  6.0  Setup control.uart0.rx_data_TRELLIS_FF_Q_2_SLICE.CE
Info: 1.5 ns logic, 4.6 ns routing

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.nutation_pulse_width_CCU2C_B0_3$CCU2_SLICE.Q0
Info:  0.7  1.0    Net pulses.nutation_pulse_start[0] budget 0.000000 ns (108,35) -> (108,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_10$CCU2_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:91.14-91.34
Info:  0.3  1.3  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_10$CCU2_SLICE.FCO
Info:  0.0  1.3    Net pulses.nutation_LUT4_B_C[1] budget 0.000000 ns (108,36) -> (108,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.nutation_LUT4_B_C[3] budget 0.000000 ns (108,36) -> (108,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.4  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  1.4    Net pulses.nutation_LUT4_B_C[5] budget 0.000000 ns (108,36) -> (109,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.nutation_LUT4_B_C[7] budget 0.000000 ns (109,36) -> (109,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.nutation_LUT4_B_C[9] budget 0.000000 ns (109,36) -> (109,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.5  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_9$CCU2_SLICE.FCO
Info:  0.0  1.5    Net pulses.nutation_LUT4_B_C[11] budget 0.000000 ns (109,36) -> (109,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_8$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.nutation_LUT4_B_C[13] budget 0.000000 ns (109,36) -> (110,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.nutation_LUT4_B_C[15] budget 0.000000 ns (110,36) -> (110,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.nutation_LUT4_B_C[17] budget 0.000000 ns (110,36) -> (110,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  1.7    Net pulses.nutation_LUT4_B_C[19] budget 0.000000 ns (110,36) -> (110,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.8  Source pulses.nutation_LUT4_B_C_CCU2C_COUT_S0_CCU2C_S0_4$CCU2_SLICE.FCO
Info:  0.0  1.8    Net pulses.nutation_LUT4_B_C[21] budget 0.000000 ns (110,36) -> (111,36)
Info:                Sink pulses.nutation_LUT4_B_C_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.8  Source pulses.nutation_LUT4_B_C_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  1.8    Net $nextpnr_CCU2C_11$CIN budget 0.000000 ns (111,36) -> (111,36)
Info:                Sink $nextpnr_CCU2C_11$CCU2_SLICE.FCI
Info:  0.3  2.1  Source $nextpnr_CCU2C_11$CCU2_SLICE.F0
Info:  0.5  2.5    Net pulses.nutation_LUT4_B_C[23] budget 1.659000 ns (111,36) -> (112,38)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:157.19-157.49
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.1  2.7  Source pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.F1
Info:  0.1  2.8    Net pulses.nut_pulse_TRELLIS_FF_Q_LSR budget 1.658000 ns (112,38) -> (112,38)
Info:                Sink pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.LSR
Info:  0.2  3.0  Setup pulses.nut_pulse_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.LSR
Info: 1.7 ns logic, 1.3 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  5.8  5.8    Net RS232_Rx$TRELLIS_IO_IN budget 3.888000 ns (0,92) -> (104,43)
Info:                Sink RS232_Rx_LUT4_D_SLICE.D0
Info:                Defined in:
Info:                  pulse_gen.v:61.16-80.4
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:86.7-98.4
Info:  0.1  5.9  Source RS232_Rx_LUT4_D_SLICE.F0
Info:  0.3  6.2    Net RS232_Rx_LUT4_D_Z[4] budget 3.653000 ns (104,43) -> (104,43)
Info:                Sink RS232_Rx_LUT4_D_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  6.3  Source RS232_Rx_LUT4_D_SLICE.F1
Info:  0.6  6.9    Net control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_C0[4] budget 4.719000 ns (104,43) -> (101,41)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  7.1  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z_LUT4_Z_SLICE.F1
Info:  0.6  7.7    Net control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_A_Z_PFUMX_ALUT_Z_L6MUX21_D1_Z[4] budget 4.718000 ns (101,41) -> (102,43)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_3_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  7.9  Source control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_3_SLICE.OFX0
Info:  0.1  7.9    Net control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_Z[2] budget 3.574000 ns (102,43) -> (102,43)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_3_SLICE.DI0
Info:                Defined in:
Info:                  pulse_gen.v:61.16-80.4
Info:                  uart.v:0.0-0.0
Info:                  uart.v:155.9-258.16
Info:                  pulse_control.v:86.7-98.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  7.9  Setup control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_1_A_LUT4_B_Z_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_3_SLICE.DI0
Info: 0.6 ns logic, 7.4 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.0  0.0  Source resetn$tr_io.O
Info:  4.5  4.5    Net resetn$TRELLIS_IO_IN budget 2.430000 ns (0,47) -> (108,37)
Info:                Sink pulses.nutation_LUT4_D_SLICE.C1
Info:                Defined in:
Info:                  pulse_gen.v:5.9-5.15
Info:  0.1  4.6  Source pulses.nutation_LUT4_D_SLICE.F1
Info:  0.9  5.5    Net pulses.nutation_LUT4_D_Z budget 2.275000 ns (108,37) -> (109,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_6$CCU2_SLICE.CE
Info:  0.0  5.5  Setup pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_6$CCU2_SLICE.CE
Info: 0.1 ns logic, 5.3 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_out_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q1
Info:  6.3  6.6    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (107,41) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:61.16-80.4
Info:                  uart.v:105.9-105.15
Info:                  pulse_control.v:86.7-98.4
Info: 0.3 ns logic, 6.3 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.3  0.3  Source pulses.nutation_pulse_delay_TRELLIS_FF_Q_14_SLICE.Q0
Info:  0.7  1.0    Net pulses.nutation_pulse_delay[1] budget 1.068000 ns (105,36) -> (105,37)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_7$CCU2_SLICE.B1
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:90.14-90.34
Info:  0.3  1.3  Source control.period_CCU2C_A0_S0_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  1.3    Net control.period_CCU2C_A0_3_COUT[2] budget 0.000000 ns (105,37) -> (105,37)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.55
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.4  Source control.period_CCU2C_A0_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  1.4    Net control.period_CCU2C_A0_3_COUT[4] budget 0.000000 ns (105,37) -> (105,37)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.55
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  1.4  Source control.period_CCU2C_A0_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  1.4    Net control.period_CCU2C_A0_3_COUT[6] budget 0.000000 ns (105,37) -> (106,37)
Info:                Sink control.period_CCU2C_A0_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.55
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.3  1.7  Source control.period_CCU2C_A0_S0_CCU2C_S0_1$CCU2_SLICE.F0
Info:  1.0  2.7    Net control.period_CCU2C_A0_S0[6] budget 1.067000 ns (106,37) -> (109,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:30.22-30.23
Info:  0.3  2.9  Source pulses.nutation_pulse_width_CCU2C_B0$CCU2_SLICE.FCO
Info:  0.0  2.9    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[8] budget 0.000000 ns (109,35) -> (109,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.0  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  3.0    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[10] budget 0.000000 ns (109,35) -> (109,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_7$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.0  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  3.0    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[12] budget 0.000000 ns (109,35) -> (109,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.1  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  3.1    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[14] budget 0.000000 ns (109,35) -> (110,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.1  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  3.1    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[16] budget 0.000000 ns (110,35) -> (110,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.2  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_4$CCU2_SLICE.FCO
Info:  0.0  3.2    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[18] budget 0.000000 ns (110,35) -> (110,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.2  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  3.2    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[20] budget 0.000000 ns (110,35) -> (110,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.0  3.2  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  3.2    Net pulses.nutation_pulse_width_CCU2C_B0_COUT[22] budget 0.000000 ns (110,35) -> (111,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:38.23-38.25
Info:  0.3  3.5  Source pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.F1
Info:  0.1  3.6    Net pulses.nutation_pulse_width_CCU2C_B0_S0[23] budget 1.067000 ns (111,35) -> (111,35)
Info:                Sink pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.DI1
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:154.29-154.78
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.0  3.6  Setup pulses.nutation_pulse_width_CCU2C_B0_S0_CCU2C_S0_1$CCU2_SLICE.DI1
Info: 1.8 ns logic, 1.8 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.block_PFUMX_C0_SLICE.Q0
Info:  1.3  1.6    Net P2$TRELLIS_IO_OUT budget 83.024002 ns (111,39) -> (126,41)
Info:                Sink P2$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:84.9-109.4
Info:                  pulses.v:47.13-47.18
Info: 0.3 ns logic, 1.3 ns routing

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 165.54 MHz (PASS at 50.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 332.01 MHz (PASS at 200.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 7.94 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 5.47 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 6.57 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 3.62 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 1.57 ns

Info: Slack histogram:
Info:  legend: * represents 6 endpoint(s)
Info:          + represents [1,6) endpoint(s)
Info: [  -470,   3651) |****************+
Info: [  3651,   7772) |+
Info: [  7772,  11893) | 
Info: [ 11893,  16014) |*****************+
Info: [ 16014,  20135) |************************************************************ 
Info: [ 20135,  24256) | 
Info: [ 24256,  28377) | 
Info: [ 28377,  32498) | 
Info: [ 32498,  36619) | 
Info: [ 36619,  40740) | 
Info: [ 40740,  44861) | 
Info: [ 44861,  48982) | 
Info: [ 48982,  53103) | 
Info: [ 53103,  57224) | 
Info: [ 57224,  61345) | 
Info: [ 61345,  65466) | 
Info: [ 65466,  69587) | 
Info: [ 69587,  73708) | 
Info: [ 73708,  77829) |+
Info: [ 77829,  81950) |+
ecppack --svf pulse_gen.svf pulse_gen_out.config pulse_gen.bit
rm pulse_gen_out.config pulse_gen.json
