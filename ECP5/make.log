yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$302'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$382 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$127 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$127 in module uart.
Marked 1 switch rules as full_case in process $proc$pulses.v:159$59 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:129$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:129$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 65 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$386'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$156'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$155'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$154'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:95$119'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:57$118'.
  Set init value: \cw = 1'0
Found init rule in `\pulses.$proc$pulses.v:48$116'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:126$45'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:109$44'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:108$43'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:106$41'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:45$40'.
  Set init value: \nut_wid = 8'01100100
Found init rule in `\pulse_control.$proc$pulse_control.v:44$39'.
  Set init value: \nut_del = 16'0000000001100100
Found init rule in `\pulse_control.$proc$pulse_control.v:43$38'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:42$37'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:41$36'.
  Set init value: \cpmg = 8'00000001
Found init rule in `\pulse_control.$proc$pulse_control.v:39$34'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:38$33'.
  Set init value: \p2width = 16'0000000000111100
Found init rule in `\pulse_control.$proc$pulse_control.v:37$32'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:36$31'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:35$30'.
  Set init value: \period = 100500

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$386'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$382'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$379'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$358'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$357_EN[3:0]$361
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$357_DATA[3:0]$360
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$357_ADDR[3:0]$359
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$325'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$303'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$301_EN[3:0]$306
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$301_DATA[3:0]$305
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$301_ADDR[3:0]$304
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$302'.
Creating decoders for process `\uart.$proc$uart.v:106$156'.
Creating decoders for process `\uart.$proc$uart.v:105$155'.
Creating decoders for process `\uart.$proc$uart.v:101$154'.
Creating decoders for process `\uart.$proc$uart.v:135$127'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:101$120'.
Creating decoders for process `\pulses.$proc$pulses.v:95$119'.
Creating decoders for process `\pulses.$proc$pulses.v:57$118'.
Creating decoders for process `\pulses.$proc$pulses.v:56$117'.
Creating decoders for process `\pulses.$proc$pulses.v:48$116'.
Creating decoders for process `\pulses.$proc$pulses.v:159$59'.
     1/8: $0\cblock_on[31:0]
     2/8: $0\cblock_delay[31:0]
     3/8: $0\cpulse[31:0]
     4/8: $0\cdelay[31:0]
     5/8: $0\ccount[7:0]
     6/8: $0\inh[0:0]
     7/8: $0\sync[0:0]
     8/8: $0\pulses[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:113$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:126$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:109$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:108$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:107$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:106$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:36$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:35$30'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:129$3'.
     1/31: $2\rx_done[0:0]
     2/31: $4$bitselwrite$data$pulse_control.v:145$2[31:0]$14
     3/31: $4$bitselwrite$mask$pulse_control.v:145$1[31:0]$13
     4/31: $4\vinput[31:0]
     5/31: $3$bitselwrite$data$pulse_control.v:145$2[31:0]$11
     6/31: $3$bitselwrite$mask$pulse_control.v:145$1[31:0]$10
     7/31: $3\vinput[31:0]
     8/31: $2$bitselwrite$data$pulse_control.v:145$2[31:0]$9
     9/31: $2$bitselwrite$mask$pulse_control.v:145$1[31:0]$8
    10/31: $2\vinput[31:0]
    11/31: $1$bitselwrite$data$pulse_control.v:145$2[31:0]$7
    12/31: $1$bitselwrite$mask$pulse_control.v:145$1[31:0]$6
    13/31: $1\vinput[31:0]
    14/31: $1\voutput[7:0]
    15/31: $1\rx_done[0:0]
    16/31: $0\state[2:0]
    17/31: $0\readcount[5:0]
    18/31: $0\readstate[1:0]
    19/31: $0\writestate[0:0]
    20/31: $0\vcontrol[7:0]
    21/31: $0\tx_byte[7:0]
    22/31: $0\transmit[0:0]
    23/31: $0\cpmg[7:0]
    24/31: $0\pulse_block[7:0]
    25/31: $0\block[0:0]
    26/31: $0\nut_wid[7:0]
    27/31: $0\nut_del[15:0]
    28/31: $0\p2width[15:0]
    29/31: $0\delay[15:0]
    30/31: $0\p1width[15:0]
    31/31: $0\period[31:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\xfer_bits' from process `\pulses.$proc$pulses.v:101$120'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:56$117'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:107$42'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:40$35'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$382'.
  created $dff cell `$procdff$1378' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$379'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$357_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$358'.
  created $dff cell `$procdff$1379' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$357_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$358'.
  created $dff cell `$procdff$1380' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$357_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$358'.
  created $dff cell `$procdff$1381' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$325'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$301_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$303'.
  created $dff cell `$procdff$1382' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$301_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$303'.
  created $dff cell `$procdff$1383' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$301_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$303'.
  created $dff cell `$procdff$1384' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$302'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1385' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1386' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1387' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1388' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1389' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1390' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1391' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1392' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1393' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1394' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$127'.
  created $dff cell `$procdff$1395' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1396' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1397' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1398' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1399' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1400' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1401' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1402' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1403' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1404' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1405' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1406' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1407' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:159$59'.
  created $dff cell `$procdff$1408' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1409' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1410' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1411' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1412' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1413' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1414' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_off' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1415' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1416' with positive edge clock.
Creating register for signal `\pulses.\cw' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1417' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1418' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1419' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1420' with positive edge clock.
Creating register for signal `\pulses.\block_on' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1421' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1422' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:113$46'.
  created $dff cell `$procdff$1423' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1424' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1425' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1426' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1427' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1428' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1429' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1430' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1431' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1432' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1433' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1434' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1435' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1436' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1437' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1438' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1439' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1440' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1441' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1442' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:145$1' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1443' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:145$2' using process `\pulse_control.$proc$pulse_control.v:129$3'.
  created $dff cell `$procdff$1444' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$386'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$382'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$382'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$379'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$358'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$358'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$325'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$303'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$303'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$302'.
Removing empty process `uart.$proc$uart.v:106$156'.
Removing empty process `uart.$proc$uart.v:105$155'.
Removing empty process `uart.$proc$uart.v:101$154'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$127'.
Removing empty process `uart.$proc$uart.v:135$127'.
Removing empty process `pulses.$proc$pulses.v:101$120'.
Removing empty process `pulses.$proc$pulses.v:95$119'.
Removing empty process `pulses.$proc$pulses.v:57$118'.
Removing empty process `pulses.$proc$pulses.v:56$117'.
Removing empty process `pulses.$proc$pulses.v:48$116'.
Found and cleaned up 6 empty switches in `\pulses.$proc$pulses.v:159$59'.
Removing empty process `pulses.$proc$pulses.v:159$59'.
Removing empty process `pulses.$proc$pulses.v:113$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:126$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:109$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:108$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:107$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:106$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:36$31'.
Removing empty process `pulse_control.$proc$pulse_control.v:35$30'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:129$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:129$3'.
Cleaned up 36 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~94 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 91 unused cells and 352 unused wires.
<suppressed ~107 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~576 debug messages>
Removed a total of 192 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1251: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1249: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1253: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$560.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$570.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$572.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$582.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$584.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$594.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$596.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$605.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$614.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$623.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$632.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$641.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$650.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$661.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$663.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$673.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$683.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$693.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$703.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$715.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$717.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$729.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$731.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$743.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$745.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$757.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$759.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$771.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$773.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$784.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$795.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$806.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$817.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$828.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$840.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$852.
    dead port 2/2 on $mux $flatten\control.$procmux$1103.
    dead port 2/2 on $mux $flatten\control.$procmux$1105.
    dead port 2/2 on $mux $flatten\control.$procmux$1107.
    dead port 2/2 on $mux $flatten\control.$procmux$1141.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$410.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$412.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$420.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$422.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$430.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$432.
    dead port 2/2 on $mux $flatten\control.$procmux$1143.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$440.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$442.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$450.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$452.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$459.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$466.
    dead port 2/2 on $mux $flatten\control.$procmux$1170.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$473.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$480.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$487.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$495.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$503.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$511.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$519.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$527.
Removed 62 multiplexer ports.
<suppressed ~34 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$863: { $flatten\control.\uart0.$procmux$841_CMP $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$664_CMP $flatten\control.\uart0.$procmux$573_CMP $flatten\control.\uart0.$procmux$857_CMP $auto$opt_reduce.cc:134:opt_mux$1446 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$872: { $flatten\control.\uart0.$procmux$573_CMP $auto$opt_reduce.cc:134:opt_mux$1448 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$881: { $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$573_CMP $auto$opt_reduce.cc:134:opt_mux$1450 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$890: { $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$664_CMP $flatten\control.\uart0.$procmux$573_CMP $auto$opt_reduce.cc:134:opt_mux$1452 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$899: { $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$664_CMP $flatten\control.\uart0.$procmux$573_CMP $auto$opt_reduce.cc:134:opt_mux$1454 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1003: $auto$opt_reduce.cc:134:opt_mux$1456
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$935: $auto$opt_reduce.cc:134:opt_mux$1458
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$529: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP $auto$opt_reduce.cc:134:opt_mux$1460 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$534: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP $auto$opt_reduce.cc:134:opt_mux$1462 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$953: $auto$opt_reduce.cc:134:opt_mux$1464
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$969: $auto$opt_reduce.cc:134:opt_mux$1466
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$544: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP $auto$opt_reduce.cc:134:opt_mux$1468 }
    New ctrl vector for $pmux cell $flatten\control.$procmux$1217: { $flatten\control.$procmux$1108_CMP $auto$opt_reduce.cc:134:opt_mux$1470 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$985: $auto$opt_reduce.cc:134:opt_mux$1472
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$549: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP $auto$opt_reduce.cc:134:opt_mux$1474 }
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1422 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1416 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1415 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1414 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1413 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1412 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1411 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1410 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 1-bit at position 9 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 1-bit at position 10 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 1-bit at position 11 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 1-bit at position 14 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 16 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 17 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 18 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 19 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 20 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 21 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 22 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 23 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 24 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 25 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 26 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 27 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 28 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 29 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 30 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.
Setting constant 0-bit at position 31 on $flatten\pulses.$procdff$1409 ($dff) from module pulse_gen.

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 262 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~22 debug messages>

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1000.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1000.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1006.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1006.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1008.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1008.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1010.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1010.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1012.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1012.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1014.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1014.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1016.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1016.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1018.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1018.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1020.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1020.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1023.
    dead port 3/3 on $pmux $flatten\pulses.$procmux$1023.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1028.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1028.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1030.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1030.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1032.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1032.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1034.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1034.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1037.
    dead port 3/3 on $pmux $flatten\pulses.$procmux$1037.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1039.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1039.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1044.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1044.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1046.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1046.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1048.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1048.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1050.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1050.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1052.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1052.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1055.
    dead port 3/3 on $pmux $flatten\pulses.$procmux$1055.
    dead port 1/2 on $mux $flatten\pulses.$procmux$920.
    dead port 2/2 on $mux $flatten\pulses.$procmux$920.
    dead port 1/2 on $mux $flatten\pulses.$procmux$922.
    dead port 2/2 on $mux $flatten\pulses.$procmux$922.
    dead port 1/2 on $mux $flatten\pulses.$procmux$924.
    dead port 2/2 on $mux $flatten\pulses.$procmux$924.
    dead port 1/2 on $mux $flatten\pulses.$procmux$926.
    dead port 2/2 on $mux $flatten\pulses.$procmux$926.
    dead port 1/2 on $mux $flatten\pulses.$procmux$928.
    dead port 2/2 on $mux $flatten\pulses.$procmux$928.
    dead port 1/2 on $mux $flatten\pulses.$procmux$930.
    dead port 2/2 on $mux $flatten\pulses.$procmux$930.
    dead port 1/2 on $mux $flatten\pulses.$procmux$932.
    dead port 2/2 on $mux $flatten\pulses.$procmux$932.
    dead port 1/2 on $mux $flatten\pulses.$procmux$938.
    dead port 2/2 on $mux $flatten\pulses.$procmux$938.
    dead port 1/2 on $mux $flatten\pulses.$procmux$940.
    dead port 2/2 on $mux $flatten\pulses.$procmux$940.
    dead port 1/2 on $mux $flatten\pulses.$procmux$942.
    dead port 2/2 on $mux $flatten\pulses.$procmux$942.
    dead port 1/2 on $mux $flatten\pulses.$procmux$944.
    dead port 2/2 on $mux $flatten\pulses.$procmux$944.
    dead port 1/2 on $mux $flatten\pulses.$procmux$946.
    dead port 2/2 on $mux $flatten\pulses.$procmux$946.
    dead port 1/2 on $mux $flatten\pulses.$procmux$948.
    dead port 2/2 on $mux $flatten\pulses.$procmux$948.
    dead port 1/2 on $mux $flatten\pulses.$procmux$950.
    dead port 2/2 on $mux $flatten\pulses.$procmux$950.
    dead port 1/2 on $mux $flatten\pulses.$procmux$958.
    dead port 2/2 on $mux $flatten\pulses.$procmux$958.
    dead port 1/2 on $mux $flatten\pulses.$procmux$960.
    dead port 2/2 on $mux $flatten\pulses.$procmux$960.
    dead port 1/2 on $mux $flatten\pulses.$procmux$962.
    dead port 2/2 on $mux $flatten\pulses.$procmux$962.
    dead port 1/2 on $mux $flatten\pulses.$procmux$964.
    dead port 2/2 on $mux $flatten\pulses.$procmux$964.
    dead port 1/2 on $mux $flatten\pulses.$procmux$966.
    dead port 2/2 on $mux $flatten\pulses.$procmux$966.
    dead port 1/2 on $mux $flatten\pulses.$procmux$974.
    dead port 2/2 on $mux $flatten\pulses.$procmux$974.
    dead port 1/2 on $mux $flatten\pulses.$procmux$976.
    dead port 2/2 on $mux $flatten\pulses.$procmux$976.
    dead port 1/2 on $mux $flatten\pulses.$procmux$978.
    dead port 2/2 on $mux $flatten\pulses.$procmux$978.
    dead port 1/2 on $mux $flatten\pulses.$procmux$980.
    dead port 2/2 on $mux $flatten\pulses.$procmux$980.
    dead port 1/2 on $mux $flatten\pulses.$procmux$982.
    dead port 2/2 on $mux $flatten\pulses.$procmux$982.
    dead port 1/2 on $mux $flatten\pulses.$procmux$988.
    dead port 2/2 on $mux $flatten\pulses.$procmux$988.
    dead port 1/2 on $mux $flatten\pulses.$procmux$990.
    dead port 2/2 on $mux $flatten\pulses.$procmux$990.
    dead port 1/2 on $mux $flatten\pulses.$procmux$992.
    dead port 2/2 on $mux $flatten\pulses.$procmux$992.
    dead port 1/2 on $mux $flatten\pulses.$procmux$994.
    dead port 2/2 on $mux $flatten\pulses.$procmux$994.
    dead port 1/2 on $mux $flatten\pulses.$procmux$996.
    dead port 2/2 on $mux $flatten\pulses.$procmux$996.
    dead port 1/2 on $mux $flatten\pulses.$procmux$998.
    dead port 2/2 on $mux $flatten\pulses.$procmux$998.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:212$96.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:212$96.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:225$106.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:225$106.
Removed 108 multiplexer ports.
<suppressed ~28 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 20 unused cells and 94 unused wires.
<suppressed ~27 debug messages>

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Rerunning OPT passes. (Maybe there is more to do..)

6.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

6.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1421 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1418 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1417 ($dff) from module pulse_gen.

6.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.23. Rerunning OPT passes. (Maybe there is more to do..)

6.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:167$65.
Removed 1 multiplexer ports.
<suppressed ~28 debug messages>

6.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $mux cell $flatten\pulses.$ternary$pulses.v:166$66: { }
  Optimizing cells in module \pulse_gen.
Performed a total of 1 changes.

6.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.11.27. Executing OPT_DFF pass (perform DFF optimizations).

6.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 11 unused cells and 15 unused wires.
<suppressed ~15 debug messages>

6.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.30. Rerunning OPT passes. (Maybe there is more to do..)

6.11.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1400 ($dff) from module pulse_gen.

6.11.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1 debug messages>

6.11.37. Rerunning OPT passes. (Maybe there is more to do..)

6.11.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.41. Executing OPT_DFF pass (perform DFF optimizations).

6.11.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.11.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.44. Rerunning OPT passes. (Maybe there is more to do..)

6.11.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.11.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.48. Executing OPT_DFF pass (perform DFF optimizations).

6.11.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.51. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\pulses.$procdff$1401 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:183$80_Y [0], Q = \pulses.inh, rval = 1'1).
Adding SRST signal on $flatten\pulses.$procdff$1397 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:247$113_Y, Q = \pulses.counter, rval = 0).
Adding SRST signal on $flatten\pulses.$procdff$1396 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:179$75_Y [0], Q = \pulses.pulses, rval = 1'1).
Adding EN signal on $flatten\control.\uart0.$procdff$1395 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1394 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1393 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1392 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1391 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1390 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1389 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1386 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1385 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1442 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1441 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1440 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1237_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1439 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1438 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:162$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1436 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1435 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1434 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 12 unused cells and 14 unused wires.
<suppressed ~13 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~11 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$529: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$534: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$544: { $flatten\control.\uart0.$procmux$496_CMP $flatten\control.\uart0.$procmux$413_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$872: $flatten\control.\uart0.$procmux$573_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$881: { $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$573_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$890: { $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$664_CMP $flatten\control.\uart0.$procmux$573_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$899: { $flatten\control.\uart0.$procmux$718_CMP $flatten\control.\uart0.$procmux$664_CMP $flatten\control.\uart0.$procmux$573_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 7 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1483 ($ne).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1576 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$139 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$141 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$145 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$152 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$413_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$418 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$428 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$448 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$457 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$464 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$471 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$478 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$493 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$501 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$509 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$525 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$558 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$573_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$580 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$603 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$621 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$630 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$639 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$648 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$659 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$664_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$671 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$681 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$701 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$713 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$718_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$727 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$755 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$782 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$793 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$815 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$826 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$838 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$872 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1287 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1283 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1243 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1241 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1238_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1235 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1228 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1226 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1213 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1211 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1209 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1203_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1199 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1195 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1190_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:146$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:146$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1604 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1586 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1582 ($ne).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:247$113 ($add).
Removed top 17 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:247$112 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:183$80 ($mux).
Removed top 7 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:183$78 ($lt).
Removed top 7 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:182$77 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:179$75 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:180$73 ($mux).
Removed top 7 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:180$71 ($lt).
Removed top 8 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:179$70 ($lt).
Removed top 11 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:178$69 ($lt).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:146$23_Y.
Removed top 24 bits (of 32) from wire pulse_gen.$flatten\control.$and$pulse_control.v:0$17_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1241_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$139_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$145_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$152_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:179$75_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:183$80_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~196 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:146$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:162$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$136 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$129 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$131 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$137 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$142 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$150 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:247$113 ($add).
  merging $macc model for $flatten\control.$add$pulse_control.v:162$26 into $flatten\control.$add$pulse_control.v:162$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:162$25 into $flatten\control.$add$pulse_control.v:162$27.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$142.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$137.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$131.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$129.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$136.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$150.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:247$113.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:146$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:162$27: $auto$alumacc.cc:365:replace_macc$1651
  creating $alu model for $flatten\pulses.$lt$pulses.v:178$69 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:179$70 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:180$71 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:182$77 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:183$78 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:247$112 ($lt): new $alu
  creating $alu cell for $flatten\pulses.$lt$pulses.v:247$112: $auto$alumacc.cc:485:replace_alu$1658
  creating $alu cell for $flatten\pulses.$lt$pulses.v:183$78: $auto$alumacc.cc:485:replace_alu$1669
  creating $alu cell for $flatten\pulses.$lt$pulses.v:182$77: $auto$alumacc.cc:485:replace_alu$1680
  creating $alu cell for $flatten\pulses.$lt$pulses.v:180$71: $auto$alumacc.cc:485:replace_alu$1691
  creating $alu cell for $flatten\pulses.$lt$pulses.v:179$70: $auto$alumacc.cc:485:replace_alu$1702
  creating $alu cell for $flatten\pulses.$lt$pulses.v:178$69: $auto$alumacc.cc:485:replace_alu$1713
  creating $alu cell for $flatten\control.$add$pulse_control.v:146$23: $auto$alumacc.cc:485:replace_alu$1724
  creating $alu cell for $flatten\pulses.$add$pulses.v:247$113: $auto$alumacc.cc:485:replace_alu$1727
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$150: $auto$alumacc.cc:485:replace_alu$1730
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$136: $auto$alumacc.cc:485:replace_alu$1733
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$129: $auto$alumacc.cc:485:replace_alu$1736
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$131: $auto$alumacc.cc:485:replace_alu$1739
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$137: $auto$alumacc.cc:485:replace_alu$1742
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$142: $auto$alumacc.cc:485:replace_alu$1745
  created 14 $alu and 1 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~6 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$890: { $flatten\control.\uart0.$procmux$664_CMP $auto$opt_reduce.cc:134:opt_mux$1749 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$899: { $flatten\control.\uart0.$procmux$664_CMP $auto$opt_reduce.cc:134:opt_mux$1751 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 15 unused wires.
<suppressed ~9 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~115 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1634 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1285_Y, Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1610 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1251_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1607 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1637 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1598 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1635 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1574 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1559 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1533 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1515 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1499 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1488 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 12 unused wires.
<suppressed ~10 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1197:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1197_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1197_Y [1]
      New connections: { $flatten\control.$procmux$1197_Y [2] $flatten\control.$procmux$1197_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1237:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1637 [0] }, B=2'00, Y=$flatten\control.$procmux$1237_Y
      New ports: A=$auto$wreduce.cc:454:run$1637 [0], B=1'0, Y=$flatten\control.$procmux$1237_Y [0]
      New connections: $flatten\control.$procmux$1237_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$418:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1640 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1640 [9] $auto$wreduce.cc:454:run$1640 [1] }
      New connections: { $auto$wreduce.cc:454:run$1640 [8:2] $auto$wreduce.cc:454:run$1640 [0] } = { 1'0 $auto$wreduce.cc:454:run$1640 [1] $auto$wreduce.cc:454:run$1640 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$568:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$580:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1642 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1642 [2] $auto$wreduce.cc:454:run$1642 [0] }
      New connections: { $auto$wreduce.cc:454:run$1642 [9:3] $auto$wreduce.cc:454:run$1642 [1] } = { $auto$wreduce.cc:454:run$1642 [0] $auto$wreduce.cc:454:run$1642 [2] $auto$wreduce.cc:454:run$1642 [2] 1'1 $auto$wreduce.cc:454:run$1642 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$592:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$741:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$147:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$147_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$147_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$147_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$147_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$153:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$153_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$153_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$153_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$153_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1202:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1197_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1197_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1607 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1589 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper maccmap for cells of type $macc.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~2311 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1342 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~1188 debug messages>
Removed a total of 396 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2496 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2496 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2497 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2497 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2498 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2498 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 199 unused cells and 1323 unused wires.
<suppressed ~200 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3984 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$854.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3983 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$854.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3982 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$854.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3944 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1202.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$3943 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1202.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2757 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$539.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2756 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$539.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2353 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~276 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 781 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 944 gates and 1121 wires to a netlist network with 175 inputs and 161 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     179.
ABC: Participating nodes from both networks       =     433.
ABC: Participating nodes from the first network   =     196. (  76.86 % of nodes)
ABC: Participating nodes from the second network  =     237. (  92.94 % of nodes)
ABC: Node pairs (any polarity)                    =     196. (  76.86 % of names can be moved)
ABC: Node pairs (same polarity)                   =     186. (  72.94 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      254
ABC RESULTS:        internal signals:      785
ABC RESULTS:           input signals:      175
ABC RESULTS:          output signals:      161
Removing temp directory.
Removed 0 unused cells and 559 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod$746424d0983081829316163db34337ccf8ceb1ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod$0d7a58a2521c9f7f639d5074fac2fc6fc0481634\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod$ed1e42d11e35854322e05c8629e1f0580c259392\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000000011111000100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16777216 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65536 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101111111111110000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod$d611654eaf2cfdde5476b49ff7dde7a3d8cbca2c\$lut for cells of type $lut.
Using template $paramod$561e376e62fd0ae35c0d0864d2d69979f67e9294\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1073807359 for cells of type $lut.
Using template $paramod$05b7e8229d9a7a31e653ac7a3cef172aa16e73f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod$629bea346f0daddb39cb1ebf17c36b3d1144d5d1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=33023 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100010001111111111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101111000011110000111100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod$d14e95c1bda4547ebb7841a7a3d5963076836472\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111010100110000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=268372104 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000000000000000000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~1327 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7011.lut2 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6992.lut2 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6992.lut3 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut2 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut4 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut5 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut6 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7025.lut2 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut2 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut3 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut4 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut5 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut6 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7017.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7016.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7018.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7018.lut2 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7018.lut3 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7019.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6939.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6943.lut2 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6943.lut3 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6944.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6904.lut2 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6910.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut2 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut3 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut5 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut6 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6913.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut2 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut3 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut4 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut5 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut6 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut7 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6904.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6909.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6911.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6908.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6904.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6936.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6945.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6957.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7036.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6957.lut0 (4 -> 2)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6943.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6965.lut0 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6953.lut1 (4 -> 2)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6973.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6965.lut1 (4 -> 2)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6980.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6982.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6991.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6992.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6998.lut0 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7011.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut0 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7025.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7025.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7015.lut1 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7011.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7024.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7033.lut0 (4 -> 1)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7038.lut0 (4 -> 2)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7028.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7039.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7038.lut1 (4 -> 3)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$6938.lut1 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7058.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7061.lut0 (4 -> 0)
  Optimizing lut $abc$6902$auto$blifparse.cc:498:parse_blif$7055.lut1 (4 -> 0)
Removed 0 unused cells and 536 unused wires.

6.47. Executing AUTONAME pass.
Renamed 12817 objects in module pulse_gen (81 iterations).
<suppressed ~1156 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:                523
   Number of wire bits:           2315
   Number of public wires:         523
   Number of public wire bits:    2315
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                752
     CCU2C                         130
     EHXPLLL                         1
     L6MUX21                        30
     LUT4                          356
     PFUMX                          79
     TRELLIS_FF                    156

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: 1df967e1aa, CPU: user 9.12s system 0.46s, MEM: 250.00 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 19% 18x read_verilog (1 sec), 16% 8x techmap (1 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 100.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:       616/83640     0%
Info:         logic LUTs:    356/83640     0%
Info:         carry LUTs:    260/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:       312/83640     0%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y92/PIOB'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y92/PIOC'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y83/PIOD'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X126/Y83/PIOB'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info:     promoting clock net clk_pll to global network
Info: Checksum: 0xf9900676

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x9fe1d7f1

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:   373/41820     0%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 203 cells, random placement wirelen = 37523.
Info:     at initial placer iter 0, wirelen = 747
Info:     at initial placer iter 1, wirelen = 608
Info:     at initial placer iter 2, wirelen = 591
Info:     at initial placer iter 3, wirelen = 593
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 591, spread = 2169, legal = 2298; time = 0.05s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 654, spread = 1917, legal = 2062; time = 0.06s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 681, spread = 1907, legal = 2045; time = 0.05s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 748, spread = 1782, legal = 1906; time = 0.05s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 756, spread = 1823, legal = 1988; time = 0.05s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 896, spread = 1851, legal = 2095; time = 0.08s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 865, spread = 1811, legal = 2119; time = 0.05s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 897, spread = 1758, legal = 2081; time = 0.05s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 891, spread = 1785, legal = 2077; time = 0.05s
Info: HeAP Placer Time: 0.88s
Info:   of which solving equations: 0.48s
Info:   of which spreading cells: 0.03s
Info:   of which strict legalisation: 0.02s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 173, wirelen = 1906
Info:   at iteration #5: temp = 0.000000, timing cost = 149, wirelen = 1672
Info:   at iteration #8: temp = 0.000000, timing cost = 133, wirelen = 1607 
Info: SA placement time 0.64s

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 197.12 MHz (PASS at 50.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 255.95 MHz (PASS at 100.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 3.81 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 1.71 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 1.50 ns

Info: Slack histogram:
Info:  legend: * represents 2 endpoint(s)
Info:          + represents [1,2) endpoint(s)
Info: [  6093,   9908) |********************+
Info: [  9908,  13723) | 
Info: [ 13723,  17538) |************************************************************ 
Info: [ 17538,  21353) |*****************************************+
Info: [ 21353,  25168) | 
Info: [ 25168,  28983) | 
Info: [ 28983,  32798) | 
Info: [ 32798,  36613) | 
Info: [ 36613,  40428) | 
Info: [ 40428,  44243) | 
Info: [ 44243,  48058) | 
Info: [ 48058,  51873) | 
Info: [ 51873,  55688) | 
Info: [ 55688,  59503) | 
Info: [ 59503,  63318) | 
Info: [ 63318,  67133) | 
Info: [ 67133,  70948) | 
Info: [ 70948,  74763) | 
Info: [ 74763,  78578) | 
Info: [ 78578,  82393) |*+
Info: Checksum: 0xdff8e661
Info: Routing globals...
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 0
Info:     routing clock net $glbnet$clk_pll using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 1896 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        5        994 |    5   994 |       904|       1.48       1.48|
Info:       1919 |       16       1903 |   11   909 |         0|       1.55       3.04|
Info: Routing complete.
Info: Router1 time 3.04s
Info: Checksum: 0x21bc84b7

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source RS232_Rx_LUT4_A_Z_PFUMX_Z_2_SLICE.Q0
Info:  0.8  1.1    Net control.uart0.rx_clk[8] budget 3.549000 ns (3,85) -> (3,84)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:98.39-98.45
Info:                  pulse_control.v:78.7-90.4
Info:  0.2  1.3  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX0
Info:  0.0  1.3    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D0 budget 0.000000 ns (3,84) -> (3,84)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.50-158.52
Info:  0.1  1.4  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  1.4    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D0 budget 0.000000 ns (3,84) -> (3,84)
Info:                Sink RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXA
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.66-158.68
Info:  0.1  1.6  Source RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_CCU2C_S0_S1_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  1.1  2.7    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0[2] budget 3.574000 ns (3,84) -> (2,86)
Info:                Sink RS232_Rx_LUT4_A_Z_LUT4_Z_6_D_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.9  Source RS232_Rx_LUT4_A_Z_LUT4_Z_6_D_LUT4_Z_SLICE.F1
Info:  0.5  3.3    Net RS232_Rx_LUT4_C_Z_L6MUX21_Z_1_D0_PFUMX_Z_C0_LUT4_D_Z[4] budget 3.574000 ns (2,86) -> (3,86)
Info:                Sink RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.5  Source RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  3.5    Net RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D1 budget 0.000000 ns (3,86) -> (3,86)
Info:                Sink RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.62-158.64
Info:  0.1  3.6  Source RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  3.6    Net RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1 budget 0.000000 ns (3,86) -> (3,86)
Info:                Sink RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  3.8  Source RS232_Rx_LUT4_A_1_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.9  4.7    Net RS232_Rx_LUT4_A_1_Z[4] budget 3.608000 ns (3,86) -> (2,88)
Info:                Sink control.uart0.rx_bits_remaining_TRELLIS_FF_Q_DI_LUT4_Z_1_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  4.8  Source control.uart0.rx_bits_remaining_TRELLIS_FF_Q_DI_LUT4_Z_1_SLICE.F1
Info:  0.4  5.2    Net control.uart0.rx_bits_remaining_TRELLIS_FF_Q_LSR budget 3.608000 ns (2,88) -> (2,88)
Info:                Sink control.uart0.rx_bits_remaining_TRELLIS_FF_Q_DI_LUT4_Z_1_SLICE.LSR
Info:  0.2  5.5  Setup control.uart0.rx_bits_remaining_TRELLIS_FF_Q_DI_LUT4_Z_1_SLICE.LSR
Info: 1.8 ns logic, 3.7 ns routing

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0$CCU2_SLICE.Q1
Info:  1.0  1.3    Net pulses.counter[9] budget 1.629000 ns (120,86) -> (123,85)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_B_LUT4_Z_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:48.18-48.25
Info:  0.1  1.4  Source pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_B_LUT4_Z_SLICE.F0
Info:  0.3  1.7    Net pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_B[3] budget 1.629000 ns (123,85) -> (123,85)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_B_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  1.9  Source pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_B_LUT4_Z_SLICE.F1
Info:  0.3  2.2    Net pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D[0] budget 1.629000 ns (123,85) -> (123,85)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D_LUT4_A_Z_PFUMX_ALUT_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  2.4  Source pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D_LUT4_A_Z_PFUMX_ALUT_SLICE.OFX0
Info:  0.6  3.1    Net pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D_LUT4_A_Z_PFUMX_ALUT_Z[1] budget 1.629000 ns (123,85) -> (123,86)
Info:                Sink pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_B_SLICE.C0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.2  Source pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_B_SLICE.F0
Info:  0.5  3.7    Net pulses.inh_TRELLIS_FF_Q_DI_PFUMX_Z_C0_LUT4_Z_D_LUT4_D_Z_LUT4_Z_D_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_B_Z budget 1.629000 ns (123,86) -> (120,86)
Info:                Sink pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_13$CCU2_SLICE.LSR
Info:  0.2  3.9  Setup pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_13$CCU2_SLICE.LSR
Info: 1.2 ns logic, 2.7 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  1.2  1.2    Net RS232_Rx$TRELLIS_IO_IN budget 3.868000 ns (0,92) -> (2,85)
Info:                Sink RS232_Rx_LUT4_A_Z_LUT4_Z_5_D_LUT4_Z_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:78.7-90.4
Info:  0.1  1.4  Source RS232_Rx_LUT4_A_Z_LUT4_Z_5_D_LUT4_Z_SLICE.F1
Info:  0.5  1.9    Net control.uart0.recv_state_TRELLIS_FF_Q_2_LSR[4] budget 3.634000 ns (2,85) -> (2,84)
Info:                Sink RS232_Rx_LUT4_A_Z_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.0  Source RS232_Rx_LUT4_A_Z_LUT4_Z_SLICE.F1
Info:  0.6  2.6    Net control.uart0.recv_state_TRELLIS_FF_Q_2_LSR_LUT4_D_Z[4] budget 3.634000 ns (2,84) -> (3,85)
Info:                Sink RS232_Rx_LUT4_A_C_LUT4_Z_SLICE.D0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.7  Source RS232_Rx_LUT4_A_C_LUT4_Z_SLICE.F0
Info:  0.9  3.6    Net RS232_Rx_LUT4_A_C[3] budget 3.634000 ns (3,85) -> (3,85)
Info:                Sink RS232_Rx_LUT4_A_Z_PFUMX_Z_2_SLICE.B0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.9  Source RS232_Rx_LUT4_A_Z_PFUMX_Z_2_SLICE.OFX0
Info:  0.1  3.9    Net RS232_Rx_LUT4_A_Z[8] budget 3.634000 ns (3,85) -> (3,85)
Info:                Sink RS232_Rx_LUT4_A_Z_PFUMX_Z_2_SLICE.DI0
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:0.0-0.0
Info:                  uart.v:155.9-258.16
Info:                  pulse_control.v:78.7-90.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  3.9  Setup RS232_Rx_LUT4_A_Z_PFUMX_Z_2_SLICE.DI0
Info: 0.7 ns logic, 3.3 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_out_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q1
Info:  1.0  1.3    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (9,89) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:59.16-76.4
Info:                  uart.v:105.9-105.15
Info:                  pulse_control.v:78.7-90.4
Info: 0.3 ns logic, 1.0 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.pulse_TRELLIS_FF_Q_SLICE.Q0
Info:  0.9  1.2    Net Pulse$TRELLIS_IO_OUT budget 83.024002 ns (124,91) -> (126,92)
Info:                Sink Pulse$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:80.9-103.4
Info:                  pulses.v:42.13-42.21
Info: 0.3 ns logic, 0.9 ns routing

Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 182.92 MHz (PASS at 50.00 MHz)
Info: Max frequency for clock           '$glbnet$clk_pll': 256.87 MHz (PASS at 100.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 3.94 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 1.32 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 1.16 ns

Info: Slack histogram:
Info:  legend: * represents 2 endpoint(s)
Info:          + represents [1,2) endpoint(s)
Info: [  6107,   9915) |********************+
Info: [  9915,  13723) | 
Info: [ 13723,  17531) |************************************************************ 
Info: [ 17531,  21339) |***************************************+
Info: [ 21339,  25147) | 
Info: [ 25147,  28955) | 
Info: [ 28955,  32763) | 
Info: [ 32763,  36571) | 
Info: [ 36571,  40379) | 
Info: [ 40379,  44187) | 
Info: [ 44187,  47995) | 
Info: [ 47995,  51803) | 
Info: [ 51803,  55611) | 
Info: [ 55611,  59419) | 
Info: [ 59419,  63227) | 
Info: [ 63227,  67035) | 
Info: [ 67035,  70843) | 
Info: [ 70843,  74651) | 
Info: [ 74651,  78459) | 
Info: [ 78459,  82267) |*+
ecppack --svf pulse_gen.svf pulse_gen_out.config pulse_gen.bit
rm pulse_gen_out.config pulse_gen.json
