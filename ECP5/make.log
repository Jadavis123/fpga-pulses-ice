yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart_nonblock.v 

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart_nonblock.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart_nonblock.v
Parsing Verilog input from `uart_nonblock.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$310'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$390 in module TRELLIS_FF.
Removed 1 dead cases from process $proc$uart_nonblock.v:142$134 in module uart.
Marked 7 switch rules as full_case in process $proc$uart_nonblock.v:142$134 in module uart.
Marked 2 switch rules as full_case in process $proc$pulses.v:135$50 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:133$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:133$3 in module pulse_control.
Removed a total of 2 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 63 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$394'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart_nonblock.v:113$164'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart_nonblock.v:112$163'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart_nonblock.v:108$162'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:98$127'.
  Set init value: \xfer_bits = 2'01
Found init rule in `\pulses.$proc$pulses.v:92$126'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:87$125'.
  Set init value: \nutation_pulse_delay = 300
Found init rule in `\pulses.$proc$pulses.v:86$124'.
  Set init value: \nutation_pulse_width = 50
Found init rule in `\pulses.$proc$pulses.v:82$122'.
  Set init value: \block_off = 16'0000000110011010
Found init rule in `\pulses.$proc$pulses.v:81$121'.
  Set init value: \sync_down = 16'0000000100000100
Found init rule in `\pulses.$proc$pulses.v:80$120'.
  Set init value: \p2start = 16'0000000011100110
Found init rule in `\pulses.$proc$pulses.v:78$119'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulses.$proc$pulses.v:77$118'.
  Set init value: \block = 1'1
Found init rule in `\pulses.$proc$pulses.v:76$117'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulses.$proc$pulses.v:75$116'.
  Set init value: \pulse_block_off = 16'0000000001100100
Found init rule in `\pulses.$proc$pulses.v:74$115'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulses.$proc$pulses.v:73$114'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:72$113'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulses.$proc$pulses.v:71$112'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulses.$proc$pulses.v:70$111'.
  Set init value: \period = 8'00000001
Found init rule in `\pulses.$proc$pulses.v:69$110'.
  Set init value: \pump = 1'1
Found init rule in `\pulses.$proc$pulses.v:48$108'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:130$48'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:113$47'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:112$46'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:110$44'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:48$43'.
  Set init value: \nut_wid = 300
Found init rule in `\pulse_control.$proc$pulse_control.v:47$42'.
  Set init value: \nut_del = 300
Found init rule in `\pulse_control.$proc$pulse_control.v:46$41'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:45$40'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:44$39'.
  Set init value: \cpmg = 8'00000011
Found init rule in `\pulse_control.$proc$pulse_control.v:42$37'.
  Set init value: \pulse_block = 8'00110010
Found init rule in `\pulse_control.$proc$pulse_control.v:41$36'.
  Set init value: \p2width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:40$35'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:39$34'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:38$33'.
  Set init value: \period = 8'00001111
Found init rule in `\pulse_control.$proc$pulse_control.v:37$32'.
  Set init value: \pump = 1'1

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$394'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$390'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$387'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$366'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$365_EN[3:0]$369
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$365_DATA[3:0]$368
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$365_ADDR[3:0]$367
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$333'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$311'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$309_EN[3:0]$314
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$309_DATA[3:0]$313
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$309_ADDR[3:0]$312
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$310'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:113$164'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:112$163'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:108$162'.
Creating decoders for process `\uart.$proc$uart_nonblock.v:142$134'.
     1/15: $3\tx_data[7:0]
     2/15: $3\tx_out[0:0]
     3/15: $2\tx_data[7:0]
     4/15: $2\tx_out[0:0]
     5/15: $1\tx_data[7:0]
     6/15: $1\tx_out[0:0]
     7/15: $0\tx_bits_remaining[3:0]
     8/15: $0\tx_state[1:0]
     9/15: $0\rx_data[7:0]
    10/15: $0\rx_bits_remaining[3:0]
    11/15: $0\recv_state[2:0]
    12/15: $0\tx_clk[10:0]
    13/15: $0\rx_clk[14:0]
    14/15: $0\rx_sample_countdown[3:0]
    15/15: $0\rx_samples[3:0]
Creating decoders for process `\pulses.$proc$pulses.v:98$127'.
Creating decoders for process `\pulses.$proc$pulses.v:92$126'.
Creating decoders for process `\pulses.$proc$pulses.v:87$125'.
Creating decoders for process `\pulses.$proc$pulses.v:86$124'.
Creating decoders for process `\pulses.$proc$pulses.v:85$123'.
Creating decoders for process `\pulses.$proc$pulses.v:82$122'.
Creating decoders for process `\pulses.$proc$pulses.v:81$121'.
Creating decoders for process `\pulses.$proc$pulses.v:80$120'.
Creating decoders for process `\pulses.$proc$pulses.v:78$119'.
Creating decoders for process `\pulses.$proc$pulses.v:77$118'.
Creating decoders for process `\pulses.$proc$pulses.v:76$117'.
Creating decoders for process `\pulses.$proc$pulses.v:75$116'.
Creating decoders for process `\pulses.$proc$pulses.v:74$115'.
Creating decoders for process `\pulses.$proc$pulses.v:73$114'.
Creating decoders for process `\pulses.$proc$pulses.v:72$113'.
Creating decoders for process `\pulses.$proc$pulses.v:71$112'.
Creating decoders for process `\pulses.$proc$pulses.v:70$111'.
Creating decoders for process `\pulses.$proc$pulses.v:69$110'.
Creating decoders for process `\pulses.$proc$pulses.v:56$109'.
Creating decoders for process `\pulses.$proc$pulses.v:48$108'.
Creating decoders for process `\pulses.$proc$pulses.v:135$50'.
     1/19: $0\counter[31:0]
     2/19: $0\rx_done[0:0]
     3/19: $0\cblock_on[31:0]
     4/19: $0\cblock_delay[31:0]
     5/19: $0\cpulse[31:0]
     6/19: $0\cdelay[31:0]
     7/19: $0\ccount[7:0]
     8/19: $0\per_shift[31:0]
     9/19: $0\nutation_pulse_stop[31:0]
    10/19: $0\nutation_pulse_start[31:0]
    11/19: $0\block_off[15:0]
    12/19: $0\sync_down[15:0]
    13/19: $0\p2start[15:0]
    14/19: $0\inh[0:0]
    15/19: $0\nut_pulse[0:0]
    16/19: $0\pulse[0:0]
    17/19: $0\sync[0:0]
    18/19: $0\pulses[0:0]
    19/19: $0\xfer_bits[1:0]
Creating decoders for process `\pulses.$proc$pulses.v:119$49'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:130$48'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:113$47'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:112$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:111$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:110$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:48$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:47$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:46$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:133$3'.
     1/32: $2\rx_done[0:0]
     2/32: $4$bitselwrite$data$pulse_control.v:149$2[31:0]$14
     3/32: $4$bitselwrite$mask$pulse_control.v:149$1[31:0]$13
     4/32: $4\vinput[31:0]
     5/32: $3$bitselwrite$data$pulse_control.v:149$2[31:0]$11
     6/32: $3$bitselwrite$mask$pulse_control.v:149$1[31:0]$10
     7/32: $3\vinput[31:0]
     8/32: $2$bitselwrite$data$pulse_control.v:149$2[31:0]$9
     9/32: $2$bitselwrite$mask$pulse_control.v:149$1[31:0]$8
    10/32: $2\vinput[31:0]
    11/32: $1$bitselwrite$data$pulse_control.v:149$2[31:0]$7
    12/32: $1$bitselwrite$mask$pulse_control.v:149$1[31:0]$6
    13/32: $1\vinput[31:0]
    14/32: $1\voutput[7:0]
    15/32: $1\rx_done[0:0]
    16/32: $0\state[2:0]
    17/32: $0\readcount[5:0]
    18/32: $0\readstate[1:0]
    19/32: $0\writestate[0:0]
    20/32: $0\vcontrol[7:0]
    21/32: $0\tx_byte[7:0]
    22/32: $0\transmit[0:0]
    23/32: $0\cpmg[7:0]
    24/32: $0\pulse_block[7:0]
    25/32: $0\block[0:0]
    26/32: $0\pump[0:0]
    27/32: $0\nut_wid[31:0]
    28/32: $0\nut_del[31:0]
    29/32: $0\p2width[15:0]
    30/32: $0\delay[15:0]
    31/32: $0\p1width[15:0]
    32/32: $0\period[7:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\nutation_pulse' from process `\pulses.$proc$pulses.v:85$123'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:56$109'.
No latch inferred for signal `\pulses.\period' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'1 for non-memory siginal `\pulses.\period [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\period [7]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\p1width' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p1width [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p1width [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p1width [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p1width [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [7]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [8]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [9]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [10]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [11]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [12]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [13]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [14]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p1width [15]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\delay' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\delay [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\delay [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\delay [7]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [8]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [9]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [10]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [11]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [12]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [13]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [14]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\delay [15]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\p2width' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p2width [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p2width [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p2width [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\p2width [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [7]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [8]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [9]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [10]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [11]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [12]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [13]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [14]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\p2width [15]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\pump' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'1 for non-memory siginal `\pulses.\pump` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\block' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'1 for non-memory siginal `\pulses.\block` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\pulse_block' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\pulse_block [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\pulse_block [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\pulse_block [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block [7]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\pulse_block_off' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\pulse_block_off [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\pulse_block_off [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\pulse_block_off [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [7]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [8]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [9]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [10]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [11]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [12]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [13]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [14]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\pulse_block_off [15]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\cpmg' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'1 for non-memory siginal `\pulses.\cpmg [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\cpmg [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\cpmg [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\cpmg [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\cpmg [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\cpmg [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\cpmg [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\cpmg [7]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\nutation_pulse_width' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_width [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_width [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_width [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [7]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [8]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [9]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [10]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [11]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [12]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [13]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [14]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [15]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [16]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [17]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [18]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [19]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [20]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [21]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [22]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [23]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [24]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [25]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [26]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [27]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [28]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [29]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [30]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_width [31]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulses.\nutation_pulse_delay' from process `\pulses.$proc$pulses.v:119$49'.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [0]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [1]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_delay [2]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_delay [3]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [4]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_delay [5]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [6]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [7]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'1 for non-memory siginal `\pulses.\nutation_pulse_delay [8]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [9]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [10]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [11]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [12]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [13]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [14]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [15]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [16]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [17]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [18]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [19]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [20]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [21]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [22]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [23]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [24]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [25]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [26]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [27]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [28]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [29]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [30]` in process `\pulses.$proc$pulses.v:119$49`.
Removing init bit 1'0 for non-memory siginal `\pulses.\nutation_pulse_delay [31]` in process `\pulses.$proc$pulses.v:119$49`.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:111$45'.
No latch inferred for signal `\pulse_control.\pulse_block_off' from process `\pulse_control.$proc$pulse_control.v:43$38'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$390'.
  created $dff cell `$procdff$1160' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$387'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$365_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$366'.
  created $dff cell `$procdff$1161' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$365_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$366'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$365_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$366'.
  created $dff cell `$procdff$1163' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$333'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$309_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$311'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$309_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$311'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$309_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$311'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$310'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1172' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1175' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1176' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart_nonblock.v:142$134'.
  created $dff cell `$procdff$1177' with positive edge clock.
Creating register for signal `\pulses.\rx_done' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1178' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1179' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1186' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1187' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1188' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1189' with positive edge clock.
Creating register for signal `\pulses.\per_shift' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1190' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1191' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `\pulses.\xfer_bits' using process `\pulses.$proc$pulses.v:135$50'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `\pulse_control.\pump' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:149$1' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:149$2' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1218' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$394'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$390'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$390'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$387'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$366'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$366'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$333'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$311'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$311'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$310'.
Removing empty process `uart.$proc$uart_nonblock.v:113$164'.
Removing empty process `uart.$proc$uart_nonblock.v:112$163'.
Removing empty process `uart.$proc$uart_nonblock.v:108$162'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart_nonblock.v:142$134'.
Removing empty process `uart.$proc$uart_nonblock.v:142$134'.
Removing empty process `pulses.$proc$pulses.v:98$127'.
Removing empty process `pulses.$proc$pulses.v:92$126'.
Removing empty process `pulses.$proc$pulses.v:87$125'.
Removing empty process `pulses.$proc$pulses.v:86$124'.
Removing empty process `pulses.$proc$pulses.v:85$123'.
Removing empty process `pulses.$proc$pulses.v:82$122'.
Removing empty process `pulses.$proc$pulses.v:81$121'.
Removing empty process `pulses.$proc$pulses.v:80$120'.
Removing empty process `pulses.$proc$pulses.v:78$119'.
Removing empty process `pulses.$proc$pulses.v:77$118'.
Removing empty process `pulses.$proc$pulses.v:76$117'.
Removing empty process `pulses.$proc$pulses.v:75$116'.
Removing empty process `pulses.$proc$pulses.v:74$115'.
Removing empty process `pulses.$proc$pulses.v:73$114'.
Removing empty process `pulses.$proc$pulses.v:72$113'.
Removing empty process `pulses.$proc$pulses.v:71$112'.
Removing empty process `pulses.$proc$pulses.v:70$111'.
Removing empty process `pulses.$proc$pulses.v:69$110'.
Removing empty process `pulses.$proc$pulses.v:56$109'.
Removing empty process `pulses.$proc$pulses.v:48$108'.
Found and cleaned up 5 empty switches in `\pulses.$proc$pulses.v:135$50'.
Removing empty process `pulses.$proc$pulses.v:135$50'.
Removing empty process `pulses.$proc$pulses.v:119$49'.
Removing empty process `pulse_control.$proc$pulse_control.v:130$48'.
Removing empty process `pulse_control.$proc$pulse_control.v:113$47'.
Removing empty process `pulse_control.$proc$pulse_control.v:112$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:111$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:110$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:48$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:47$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:46$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$32'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:133$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:133$3'.
Cleaned up 35 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~104 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 56 unused cells and 300 unused wires.
<suppressed ~70 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~426 debug messages>
Removed a total of 142 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1024: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1022: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1026: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$418.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$420.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$428.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$430.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$437.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$444.
    dead port 2/2 on $mux $flatten\control.$procmux$876.
    dead port 2/2 on $mux $flatten\control.$procmux$878.
    dead port 2/2 on $mux $flatten\control.$procmux$880.
    dead port 2/2 on $mux $flatten\control.$procmux$914.
    dead port 2/2 on $mux $flatten\control.$procmux$916.
    dead port 2/2 on $mux $flatten\control.$procmux$943.
Removed 12 multiplexer ports.
<suppressed ~49 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$446: { $flatten\control.\uart0.$procmux$452_CMP $flatten\control.\uart0.$procmux$421_CMP $auto$opt_reduce.cc:134:opt_mux$1220 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$453: { $flatten\control.\uart0.$procmux$452_CMP $flatten\control.\uart0.$procmux$421_CMP $auto$opt_reduce.cc:134:opt_mux$1222 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$637: $auto$opt_reduce.cc:134:opt_mux$1224
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$658: $auto$opt_reduce.cc:134:opt_mux$1226
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$677: $auto$opt_reduce.cc:134:opt_mux$1228
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$696: $auto$opt_reduce.cc:134:opt_mux$1230
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$717: $auto$opt_reduce.cc:134:opt_mux$1232
    New ctrl vector for $pmux cell $flatten\control.$procmux$990: { $flatten\control.$procmux$1003_CMP $auto$opt_reduce.cc:134:opt_mux$1234 }
  Optimizing cells in module \pulse_gen.
Performed a total of 8 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 160 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~50 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pulses.$procdff$1195 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$634_Y, Q = \pulses.cblock_on).
Adding EN signal on $flatten\pulses.$procdff$1194 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$655_Y, Q = \pulses.cblock_delay).
Adding EN signal on $flatten\pulses.$procdff$1193 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$674_Y, Q = \pulses.cpulse).
Adding EN signal on $flatten\pulses.$procdff$1192 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$693_Y, Q = \pulses.cdelay).
Adding EN signal on $flatten\pulses.$procdff$1191 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$714_Y, Q = \pulses.ccount).
Adding SRST signal on $auto$opt_dff.cc:764:run$1321 ($dffe) from module pulse_gen (D = $flatten\pulses.$procmux$712_Y, Q = \pulses.ccount, rval = 8'00000000).
Adding EN signal on $flatten\pulses.$procdff$1190 ($dff) from module pulse_gen (D = { 8'00000000 \control.period 16'0000000000000000 }, Q = \pulses.per_shift).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 25 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 27 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 28 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 29 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 30 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 31 on $auto$opt_dff.cc:764:run$1327 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\pulses.$procdff$1189 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:168$57_Y, Q = \pulses.nutation_pulse_stop).
Adding EN signal on $flatten\pulses.$procdff$1188 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:168$58_Y, Q = \pulses.nutation_pulse_start).
Adding EN signal on $flatten\pulses.$procdff$1187 ($dff) from module pulse_gen (D = $flatten\pulses.$sub$pulses.v:161$55_Y, Q = \pulses.block_off).
Adding EN signal on $flatten\pulses.$procdff$1186 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:160$53_Y, Q = \pulses.sync_down).
Adding EN signal on $flatten\pulses.$procdff$1185 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:159$52_Y, Q = \pulses.p2start).
Adding EN signal on $flatten\pulses.$procdff$1184 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$774_Y, Q = \pulses.inh).
Adding EN signal on $flatten\pulses.$procdff$1183 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:200$70_Y [0], Q = \pulses.nut_pulse).
Adding SRST signal on $auto$opt_dff.cc:764:run$1376 ($dffe) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:201$69_Y [0], Q = \pulses.nut_pulse, rval = 1'0).
Adding EN signal on $flatten\pulses.$procdff$1182 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$799_Y, Q = \pulses.pulse).
Adding EN signal on $flatten\pulses.$procdff$1181 ($dff) from module pulse_gen (D = $flatten\pulses.$procmux$817_Y, Q = \pulses.sync).
Adding SRST signal on $flatten\pulses.$procdff$1180 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:301$106_Y, Q = \pulses.counter, rval = 0).
Adding EN signal on $flatten\pulses.$procdff$1179 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:197$66_Y [0], Q = \pulses.pulses).
Adding EN signal on $flatten\control.\uart0.$procdff$1177 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1176 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1175 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1174 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1173 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$procmux$493_Y, Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1172 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1171 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1168 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1167 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1216 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1215 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1214 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1010_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1213 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1212 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:166$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1211 ($dff) from module pulse_gen (D = \control.uart0.rx_data, Q = \control.vcontrol).
Adding EN signal on $flatten\control.$procdff$1210 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1209 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1208 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1206 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.cpmg).
Adding EN signal on $flatten\control.$procdff$1205 ($dff) from module pulse_gen (D = \control.vinput [15:8], Q = \control.pulse_block).
Adding EN signal on $flatten\control.$procdff$1204 ($dff) from module pulse_gen (D = \control.vinput [1], Q = \control.block).
Adding EN signal on $flatten\control.$procdff$1203 ($dff) from module pulse_gen (D = \control.vinput [0], Q = \control.pump).
Adding EN signal on $flatten\control.$procdff$1202 ($dff) from module pulse_gen (D = { \control.vinput [7:0] 24'000000000000000000000000 }, Q = \control.nut_wid).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1590 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\control.$procdff$1201 ($dff) from module pulse_gen (D = { \control.vinput [7:0] 24'000000000000000000000000 }, Q = \control.nut_del).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 10 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$1593 ($dffe) from module pulse_gen.
Adding EN signal on $flatten\control.$procdff$1200 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p2width).
Adding EN signal on $flatten\control.$procdff$1199 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.delay).
Adding EN signal on $flatten\control.$procdff$1198 ($dff) from module pulse_gen (D = \control.vinput [15:0], Q = \control.p1width).
Adding EN signal on $flatten\control.$procdff$1197 ($dff) from module pulse_gen (D = \control.vinput [7:0], Q = \control.period).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 68 unused cells and 68 unused wires.
<suppressed ~69 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~22 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$446: { $flatten\control.\uart0.$procmux$452_CMP $flatten\control.\uart0.$procmux$421_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$453: { $flatten\control.\uart0.$procmux$452_CMP $flatten\control.\uart0.$procmux$421_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~234 debug messages>
Removed a total of 78 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 78 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 5) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1276 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:200$147 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart_nonblock.v:208$149 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:233$153 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:308$160 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$416 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$421_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$435 ($mux).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1238 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$442 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$450 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1524 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$457 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$464 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$466 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1520 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$470 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$482 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$485 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$498_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$503 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1514 ($ne).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$508 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$510 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$512_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$519 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$525 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$528 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$530_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$534 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$537 ($mux).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$546 ($mux).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$562 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$583 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$587 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$591 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$593 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$600 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$604 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$606 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$610 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$612 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1157_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1145_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1121_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1111_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1104_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1080_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell pulse_gen.$flatten\control.$procmux$1071_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1060 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1056 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1031_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1030_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1016 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1014 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1011_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1008 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1001 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$999 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$986 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$984 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$982 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$972 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$968 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1542 ($ne).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:150$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:150$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 1 bits (of 8) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1392 ($ne).
Removed top 1 bits (of 6) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1383 ($ne).
Removed top 1 bits (of 7) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1381 ($ne).
Removed top 1 bits (of 8) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1358 ($ne).
Removed top 1 bits (of 9) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1356 ($ne).
Removed cell pulse_gen.$flatten\pulses.$procmux$812 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1421 ($ne).
Removed cell pulse_gen.$flatten\pulses.$procmux$810 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$808 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$806 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$790 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$788 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$769 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$767 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$765 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$761 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$759 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$712 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$710 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$708 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$706 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$704 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$702 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$691 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$689 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$687 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$685 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$672 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$670 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$668 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$666 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$653 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$651 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$649 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$647 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$645 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$643 ($mux).
Removed top 7 bits (of 8) from port B of cell pulse_gen.$flatten\pulses.$procmux$638_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$632 ($mux).
Removed top 16 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$procmux$633_CMP0 ($eq).
Removed cell pulse_gen.$flatten\pulses.$procmux$630 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$628 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$626 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$624 ($mux).
Removed cell pulse_gen.$flatten\pulses.$procmux$622 ($mux).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:301$106 ($add).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:295$104 ($add).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:295$104 ($add).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:293$103 ($add).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:277$99 ($mux).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:271$96 ($mux).
Removed cell pulse_gen.$flatten\pulses.$ternary$pulses.v:249$89 ($mux).
Removed top 9 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:239$86 ($add).
Removed top 15 bits (of 32) from port Y of cell pulse_gen.$flatten\pulses.$add$pulses.v:236$77 ($add).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:213$74 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:201$69 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:197$66 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:198$64 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:199$63 ($mux).
Removed top 8 bits (of 32) from port A of cell pulse_gen.$flatten\pulses.$sub$pulses.v:168$57 ($sub).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:150$23_Y.
Removed top 24 bits (of 32) from wire pulse_gen.$flatten\control.$and$pulse_control.v:0$17_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1014_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$2\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$procmux$519_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$procmux$528_Y.
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$procmux$546_Y.
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$procmux$562_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:200$147_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:233$153_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart_nonblock.v:308$160_Y.
Removed top 15 bits (of 32) from wire pulse_gen.$flatten\pulses.$add$pulses.v:236$77_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:197$66_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:199$63_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:201$69_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 94 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:150$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:166$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart_nonblock.v:196$143 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:152$136 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:156$138 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:199$144 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:217$150 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart_nonblock.v:290$158 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:159$52 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:160$53 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:161$54 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:236$77 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:237$79 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:238$82 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:239$86 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:264$91 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:265$93 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:292$101 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:293$103 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:295$104 ($add).
  creating $macc model for $flatten\pulses.$add$pulses.v:301$106 ($add).
  creating $macc model for $flatten\pulses.$sub$pulses.v:161$55 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:168$57 ($sub).
  creating $macc model for $flatten\pulses.$sub$pulses.v:168$58 ($sub).
  merging $macc model for $flatten\pulses.$add$pulses.v:161$54 into $flatten\pulses.$sub$pulses.v:161$55.
  merging $macc model for $flatten\control.$add$pulse_control.v:166$26 into $flatten\control.$add$pulse_control.v:166$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:166$25 into $flatten\control.$add$pulse_control.v:166$27.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:301$106.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:295$104.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:293$103.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:292$101.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:265$93.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:264$91.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:239$86.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:238$82.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:237$79.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:236$77.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:160$53.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:159$52.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:290$158.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:217$150.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:199$144.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:156$138.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart_nonblock.v:152$136.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart_nonblock.v:196$143.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:168$57.
  creating $alu model for $macc $flatten\pulses.$sub$pulses.v:168$58.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:150$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:166$27: $auto$alumacc.cc:365:replace_macc$1624
  creating $macc cell for $flatten\pulses.$sub$pulses.v:161$55: $auto$alumacc.cc:365:replace_macc$1625
  creating $alu model for $flatten\pulses.$lt$pulses.v:197$60 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:198$61 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:199$62 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:200$67 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:201$68 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:213$72 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:249$87 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:301$105 ($lt): new $alu
  creating $alu model for $flatten\pulses.$procmux$633_CMP0 ($eq): merged with $flatten\pulses.$lt$pulses.v:197$60.
  creating $alu cell for $flatten\pulses.$lt$pulses.v:301$105: $auto$alumacc.cc:485:replace_alu$1634
  creating $alu cell for $flatten\pulses.$lt$pulses.v:249$87: $auto$alumacc.cc:485:replace_alu$1639
  creating $alu cell for $flatten\pulses.$lt$pulses.v:213$72: $auto$alumacc.cc:485:replace_alu$1644
  creating $alu cell for $flatten\pulses.$lt$pulses.v:201$68: $auto$alumacc.cc:485:replace_alu$1655
  creating $alu cell for $flatten\pulses.$lt$pulses.v:200$67: $auto$alumacc.cc:485:replace_alu$1660
  creating $alu cell for $flatten\pulses.$lt$pulses.v:199$62: $auto$alumacc.cc:485:replace_alu$1665
  creating $alu cell for $flatten\pulses.$lt$pulses.v:198$61: $auto$alumacc.cc:485:replace_alu$1676
  creating $alu cell for $flatten\pulses.$lt$pulses.v:197$60, $flatten\pulses.$procmux$633_CMP0: $auto$alumacc.cc:485:replace_alu$1687
  creating $alu cell for $flatten\control.$add$pulse_control.v:150$23: $auto$alumacc.cc:485:replace_alu$1698
  creating $alu cell for $flatten\pulses.$sub$pulses.v:168$58: $auto$alumacc.cc:485:replace_alu$1701
  creating $alu cell for $flatten\pulses.$sub$pulses.v:168$57: $auto$alumacc.cc:485:replace_alu$1704
  creating $alu cell for $flatten\control.\uart0.$add$uart_nonblock.v:196$143: $auto$alumacc.cc:485:replace_alu$1707
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:152$136: $auto$alumacc.cc:485:replace_alu$1710
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:156$138: $auto$alumacc.cc:485:replace_alu$1713
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:199$144: $auto$alumacc.cc:485:replace_alu$1716
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:217$150: $auto$alumacc.cc:485:replace_alu$1719
  creating $alu cell for $flatten\control.\uart0.$sub$uart_nonblock.v:290$158: $auto$alumacc.cc:485:replace_alu$1722
  creating $alu cell for $flatten\pulses.$add$pulses.v:160$53: $auto$alumacc.cc:485:replace_alu$1725
  creating $alu cell for $flatten\pulses.$add$pulses.v:159$52: $auto$alumacc.cc:485:replace_alu$1728
  creating $alu cell for $flatten\pulses.$add$pulses.v:236$77: $auto$alumacc.cc:485:replace_alu$1731
  creating $alu cell for $flatten\pulses.$add$pulses.v:237$79: $auto$alumacc.cc:485:replace_alu$1734
  creating $alu cell for $flatten\pulses.$add$pulses.v:238$82: $auto$alumacc.cc:485:replace_alu$1737
  creating $alu cell for $flatten\pulses.$add$pulses.v:239$86: $auto$alumacc.cc:485:replace_alu$1740
  creating $alu cell for $flatten\pulses.$add$pulses.v:264$91: $auto$alumacc.cc:485:replace_alu$1743
  creating $alu cell for $flatten\pulses.$add$pulses.v:265$93: $auto$alumacc.cc:485:replace_alu$1746
  creating $alu cell for $flatten\pulses.$add$pulses.v:292$101: $auto$alumacc.cc:485:replace_alu$1749
  creating $alu cell for $flatten\pulses.$add$pulses.v:293$103: $auto$alumacc.cc:485:replace_alu$1752
  creating $alu cell for $flatten\pulses.$add$pulses.v:295$104: $auto$alumacc.cc:485:replace_alu$1755
  creating $alu cell for $flatten\pulses.$add$pulses.v:301$106: $auto$alumacc.cc:485:replace_alu$1758
  created 29 $alu and 2 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~7 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$585: { $flatten\control.\uart0.$procmux$530_CMP $auto$opt_reduce.cc:134:opt_mux$1762 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$602: { $flatten\control.\uart0.$procmux$530_CMP $auto$opt_reduce.cc:134:opt_mux$1764 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1302 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:264$91_Y [31:17], Q = \pulses.cdelay [31:17], rval = 15'000000000000000).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 10 unused cells and 21 unused wires.
<suppressed ~11 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~195 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1575 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1058_Y, Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1548 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1024_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1545 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1608 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1536 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1606 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1512 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$add$uart_nonblock.v:196$143_Y, Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1497 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$procmux$587_Y, Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1469 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$procmux$503_Y, Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1455 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$2\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1437 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$procmux$464_Y, Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1426 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 56 unused wires.
<suppressed ~10 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1337 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1337 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1332 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$1332 ($dffe) from module pulse_gen.
Adding SRST signal on $auto$opt_dff.cc:764:run$1287 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:265$93_Y [31:18], Q = \pulses.cpulse [31:18], rval = 14'00000000000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1272 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:292$101_Y [31:19], Q = \pulses.cblock_delay [31:19], rval = 13'0000000000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1253 ($dffe) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:293$103_Y [31:20], Q = \pulses.cblock_on [31:20], rval = 12'000000000000).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Rerunning OPT passes. (Removed registers in this run.)

6.30.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~2 debug messages>

6.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.30.13. Executing OPT_DFF pass (perform DFF optimizations).

6.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 2 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

6.30.15. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1010:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1608 [0] }, B=2'00, Y=$flatten\control.$procmux$1010_Y
      New ports: A=$auto$wreduce.cc:454:run$1608 [0], B=1'0, Y=$flatten\control.$procmux$1010_Y [0]
      New connections: $flatten\control.$procmux$1010_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$970:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$970_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$970_Y [1]
      New connections: { $flatten\control.$procmux$970_Y [2] $flatten\control.$procmux$970_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$493:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$procmux$493_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$procmux$493_Y [7]
      New connections: $flatten\control.\uart0.$procmux$493_Y [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$523:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$procmux$523_Y
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$procmux$523_Y [2:1]
      New connections: $flatten\control.\uart0.$procmux$523_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$532:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$procmux$532_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$procmux$532_Y [2]
      New connections: $flatten\control.\uart0.$procmux$532_Y [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$546:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1613 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1613 [9] $auto$wreduce.cc:454:run$1613 [1] }
      New connections: { $auto$wreduce.cc:454:run$1613 [8:2] $auto$wreduce.cc:454:run$1613 [0] } = { 1'0 $auto$wreduce.cc:454:run$1613 [1] $auto$wreduce.cc:454:run$1613 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$562:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1614 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1614 [2] $auto$wreduce.cc:454:run$1614 [0] }
      New connections: { $auto$wreduce.cc:454:run$1614 [9:3] $auto$wreduce.cc:454:run$1614 [1] } = { $auto$wreduce.cc:454:run$1614 [0] $auto$wreduce.cc:454:run$1614 [2] $auto$wreduce.cc:454:run$1614 [2] 1'1 $auto$wreduce.cc:454:run$1614 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart_nonblock.v:254$155:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:254$155_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:254$155_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart_nonblock.v:254$155_Y [2:1] = { $flatten\control.\uart0.$ternary$uart_nonblock.v:254$155_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart_nonblock.v:313$161:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:313$161_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart_nonblock.v:313$161_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart_nonblock.v:313$161_Y [1] = $flatten\control.\uart0.$ternary$uart_nonblock.v:313$161_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$975:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$970_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$970_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1545 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1527 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add \pulses.sync_down (16 bits, unsigned)
  sub \control.pulse_block (8 bits, unsigned)
  add \control.delay (16 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~3294 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~2215 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~1437 debug messages>
Removed a total of 479 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5136 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5136 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5137 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5137 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5138 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$5138 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1303 unused cells and 2432 unused wires.
<suppressed ~1304 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5870 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$515.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5869 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$515.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5868 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$515.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5201 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5181 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$475.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$5180 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$475.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2569 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$975.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2568 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$975.B_AND_S [4], Q = \control.state [0], rval = 1'0).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~627 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2601 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 1695 gates and 2260 wires to a netlist network with 563 inputs and 343 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     302.
ABC: Participating nodes from both networks       =     665.
ABC: Participating nodes from the first network   =     312. (  57.25 % of nodes)
ABC: Participating nodes from the second network  =     353. (  64.77 % of nodes)
ABC: Node pairs (any polarity)                    =     312. (  57.25 % of names can be moved)
ABC: Node pairs (same polarity)                   =     288. (  52.84 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      544
ABC RESULTS:        internal signals:     1354
ABC RESULTS:           input signals:      563
ABC RESULTS:          output signals:      343
Removing temp directory.
Removed 0 unused cells and 1251 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=15990784 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod$53afc4693cdd4770ebaebeb0ab6c288fde062f75\$lut for cells of type $lut.
Using template $paramod$e10ca4aca4e4c8627be5bb912095a9253494b061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10111111111111110000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod$3dd1cfeaac2399e8e1df42382a37ba2eafacb216\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000010010000000000000000 for cells of type $lut.
Using template $paramod$5fba6fa4affd3d8cb90b92595f737467c857f3c8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=285147136 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=218103808 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod$f8bdca125e424c8e9c5f5e84960e0e034e7c473c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod$5547587bde2f1ca8d884d89fe5b90567ab8bb30e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10010000000000000000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod$55c55e421fe9578c90ebfeee35699d6eb691fc09\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16777216 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=11518159 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65536 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=127 for cells of type $lut.
Using template $paramod$aee2f1a92da4d6917706e9d46aacddb09e9a1c38\$lut for cells of type $lut.
Using template $paramod$c38a2c02ce7163e8d111af40296e77c246f504d9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=4079 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1090519040 for cells of type $lut.
Using template $paramod$aa5c72b3fcf30ca58086a919c491c5393a609621\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16775423 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111000000001111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110001111111110000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111010000001111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111000000001111111101001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16580608 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod$ba1e43cca5a965980ca1ed56b0e0f7c537428e91\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod$09b9daf9b083a5061c2bcf14792aca3feed7915b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111001100110011000101 for cells of type $lut.
No more expansions possible.
<suppressed ~1873 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11086.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut2 (4 -> 3)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut3 (4 -> 1)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut4 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut5 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut6 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut7 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11199.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11147.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11147.lut3 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut3 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut4 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut5 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut6 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11148.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11148.lut3 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11149.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11283.lut2 (4 -> 2)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11087.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11089.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11089.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11091.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11097.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11065.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11085.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut3 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut4 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut5 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut6 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11020.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11020.lut3 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11021.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11021.lut2 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11021.lut3 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$10990.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$10992.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11014.lut1 (4 -> 3)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11008.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11315.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11086.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11017.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11020.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11023.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11039.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11050.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11065.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11061.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11065.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11066.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11073.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11075.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11080.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11085.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11086.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11087.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11088.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11091.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11092.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11097.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11108.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11114.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11283.lut1 (4 -> 2)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11123.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11124.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11137.lut1 (4 -> 3)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11137.lut0 (4 -> 3)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11159.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11147.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11148.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11151.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut1 (4 -> 1)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11157.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11160.lut0 (4 -> 3)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11331.lut1 (4 -> 1)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11198.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11199.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11200.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11207.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11199.lut1 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11297.lut1 (4 -> 1)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11283.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11285.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11292.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11302.lut0 (4 -> 0)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11312.lut1 (4 -> 1)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11311.lut0 (4 -> 1)
  Optimizing lut $abc$10979$auto$blifparse.cc:498:parse_blif$11087.lut1 (4 -> 0)
Removed 0 unused cells and 1190 unused wires.

6.47. Executing AUTONAME pass.
Renamed 36478 objects in module pulse_gen (99 iterations).
<suppressed ~2170 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:                754
   Number of wire bits:           3959
   Number of public wires:         754
   Number of public wire bits:    3959
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1547
     CCU2C                         294
     EHXPLLL                         1
     L6MUX21                        22
     LUT4                          639
     PFUMX                          84
     TRELLIS_FF                    507

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: c24e83d7fb, CPU: user 3.23s system 0.24s, MEM: 251.10 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 16% 18x read_verilog (0 sec), 13% 8x techmap (0 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 200.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:      1227/83640     1%
Info:         logic LUTs:    639/83640     0%
Info:         carry LUTs:    588/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:      1014/83640     1%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y41/PIOD'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y41/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y41/PIOB'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'resetn$tr_io' constrained to Bel 'X0/Y47/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk_pll to global network
Info:     promoting clock net clk$TRELLIS_IO_IN to global network
Info: Checksum: 0x054e54de

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0xf91706c2

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:   918/41820     2%
Info: 	          TRELLIS_IO:     7/  365     1%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 576 cells, random placement wirelen = 106239.
Info:     at initial placer iter 0, wirelen = 1459
Info:     at initial placer iter 1, wirelen = 1286
Info:     at initial placer iter 2, wirelen = 1244
Info:     at initial placer iter 3, wirelen = 1260
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 1249, spread = 11292, legal = 11852; time = 0.03s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 1698, spread = 8234, legal = 9082; time = 0.03s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 1926, spread = 7800, legal = 8587; time = 0.03s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 2116, spread = 7062, legal = 7834; time = 0.02s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 2281, spread = 7670, legal = 8257; time = 0.02s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 2507, spread = 7149, legal = 7888; time = 0.03s
Info:     at iteration #7, type TRELLIS_SLICE: wirelen solved = 2553, spread = 7077, legal = 7808; time = 0.04s
Info:     at iteration #8, type TRELLIS_SLICE: wirelen solved = 2648, spread = 6972, legal = 7630; time = 0.03s
Info:     at iteration #9, type TRELLIS_SLICE: wirelen solved = 2584, spread = 7246, legal = 7939; time = 0.04s
Info:     at iteration #10, type TRELLIS_SLICE: wirelen solved = 2908, spread = 7211, legal = 7840; time = 0.03s
Info:     at iteration #11, type TRELLIS_SLICE: wirelen solved = 3138, spread = 6883, legal = 7618; time = 0.03s
Info:     at iteration #12, type TRELLIS_SLICE: wirelen solved = 3134, spread = 6942, legal = 7518; time = 0.03s
Info:     at iteration #13, type TRELLIS_SLICE: wirelen solved = 3375, spread = 6727, legal = 7457; time = 0.04s
Info:     at iteration #14, type TRELLIS_SLICE: wirelen solved = 3356, spread = 6728, legal = 7863; time = 0.03s
Info:     at iteration #15, type TRELLIS_SLICE: wirelen solved = 3700, spread = 7438, legal = 8039; time = 0.03s
Info:     at iteration #16, type TRELLIS_SLICE: wirelen solved = 4065, spread = 6867, legal = 7396; time = 0.03s
Info:     at iteration #17, type TRELLIS_SLICE: wirelen solved = 3762, spread = 7089, legal = 7688; time = 0.03s
Info:     at iteration #18, type TRELLIS_SLICE: wirelen solved = 4084, spread = 7112, legal = 7712; time = 0.03s
Info:     at iteration #19, type TRELLIS_SLICE: wirelen solved = 4023, spread = 6970, legal = 7711; time = 0.03s
Info:     at iteration #20, type TRELLIS_SLICE: wirelen solved = 4212, spread = 6790, legal = 7389; time = 0.03s
Info:     at iteration #21, type TRELLIS_SLICE: wirelen solved = 3959, spread = 6442, legal = 7354; time = 0.03s
Info:     at iteration #22, type TRELLIS_SLICE: wirelen solved = 4092, spread = 6717, legal = 7400; time = 0.03s
Info:     at iteration #23, type TRELLIS_SLICE: wirelen solved = 4142, spread = 7136, legal = 7542; time = 0.03s
Info:     at iteration #24, type TRELLIS_SLICE: wirelen solved = 4366, spread = 6710, legal = 7335; time = 0.03s
Info:     at iteration #25, type TRELLIS_SLICE: wirelen solved = 4180, spread = 6489, legal = 7313; time = 0.03s
Info:     at iteration #26, type TRELLIS_SLICE: wirelen solved = 4334, spread = 6795, legal = 7493; time = 0.03s
Info:     at iteration #27, type TRELLIS_SLICE: wirelen solved = 4678, spread = 7136, legal = 7729; time = 0.02s
Info:     at iteration #28, type TRELLIS_SLICE: wirelen solved = 4873, spread = 6597, legal = 7527; time = 0.02s
Info:     at iteration #29, type TRELLIS_SLICE: wirelen solved = 4707, spread = 6951, legal = 7708; time = 0.02s
Info:     at iteration #30, type TRELLIS_SLICE: wirelen solved = 4770, spread = 6852, legal = 7376; time = 0.04s
Info: HeAP Placer Time: 1.71s
Info:   of which solving equations: 0.70s
Info:   of which spreading cells: 0.12s
Info:   of which strict legalisation: 0.07s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 283, wirelen = 7313
Info:   at iteration #5: temp = 0.000000, timing cost = 266, wirelen = 6347
Info:   at iteration #10: temp = 0.000000, timing cost = 216, wirelen = 5900
Info:   at iteration #15: temp = 0.000000, timing cost = 187, wirelen = 5736
Info:   at iteration #20: temp = 0.000000, timing cost = 190, wirelen = 5629
Info:   at iteration #23: temp = 0.000000, timing cost = 195, wirelen = 5613 
Info: SA placement time 1.50s

Info: Max frequency for clock           '$glbnet$clk_pll': 158.78 MHz (FAIL at 200.00 MHz)
Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 219.01 MHz (PASS at 50.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 9.05 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 8.76 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 7.22 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 6.55 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 4.57 ns

Info: Slack histogram:
Info:  legend: * represents 10 endpoint(s)
Info:          + represents [1,10) endpoint(s)
Info: [ -3759,    392) |************************************************************ 
Info: [   392,   4543) |***********************************************+
Info: [  4543,   8694) | 
Info: [  8694,  12845) |****+
Info: [ 12845,  16996) |******************+
Info: [ 16996,  21147) |**********+
Info: [ 21147,  25298) | 
Info: [ 25298,  29449) | 
Info: [ 29449,  33600) | 
Info: [ 33600,  37751) | 
Info: [ 37751,  41902) | 
Info: [ 41902,  46053) | 
Info: [ 46053,  50204) | 
Info: [ 50204,  54355) | 
Info: [ 54355,  58506) | 
Info: [ 58506,  62657) | 
Info: [ 62657,  66808) | 
Info: [ 66808,  70959) | 
Info: [ 70959,  75110) | 
Info: [ 75110,  79261) |+
Info: Checksum: 0x7307966e
Info: Routing globals...
Info:     routing clock net $glbnet$clk_pll using global 0
Info:     routing clock net $glbnet$clk$TRELLIS_IO_IN using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 4136 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |       26        973 |   26   973 |      3171|       0.83       0.83|
Info:       2000 |       27       1972 |    1   999 |      2172|       0.37       1.19|
Info:       3000 |       55       2944 |   28   972 |      1217|       0.74       1.94|
Info:       4000 |       58       3941 |    3   997 |       222|       0.52       2.46|
Info:       4227 |       63       4164 |    5   223 |         0|       0.26       2.72|
Info: Routing complete.
Info: Router1 time 2.72s
Info: Checksum: 0x91fd9566

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_1$CCU2_SLICE.Q0
Info:  1.1  1.4    Net control.block_PFUMX_C0_ALUT_LUT4_Z_A_L6MUX21_Z_1_SD_LUT4_Z_1_A[0] budget 0.000000 ns (77,36) -> (77,37)
Info:                Sink resetn_LUT4_D_Z_LUT4_Z_2_B_LUT4_Z_1_SLICE.B1
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:48.18-48.25
Info:  0.1  1.5  Source resetn_LUT4_D_Z_LUT4_Z_2_B_LUT4_Z_1_SLICE.F1
Info:  0.7  2.3    Net resetn_LUT4_D_Z_LUT4_Z_2_B[3] budget 0.000000 ns (77,37) -> (78,37)
Info:                Sink resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  2.5  Source resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  2.5    Net resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D1 budget 0.000000 ns (78,37) -> (78,37)
Info:                Sink resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.62-158.64
Info:  0.1  2.7  Source resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D1_PFUMX_Z_SLICE.OFX1
Info:  0.0  2.7    Net resetn_LUT4_D_Z_L6MUX21_Z_D1 budget 0.000000 ns (78,37) -> (78,37)
Info:                Sink resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:158.70-158.72
Info:  0.1  2.8  Source resetn_LUT4_D_Z_L6MUX21_Z_D1_L6MUX21_Z_D0_PFUMX_Z_SLICE.OFX1
Info:  0.8  3.6    Net resetn_LUT4_A_Z[0] budget 0.606000 ns (78,37) -> (75,36)
Info:                Sink control.cpmg_CCU2C_B0_COUT_PFUMX_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.9  Source control.cpmg_CCU2C_B0_COUT_PFUMX_Z_SLICE.OFX0
Info:  1.6  5.5    Net control.block_PFUMX_C0_ALUT_LUT4_Z_A[5] budget 0.637000 ns (75,36) -> (78,44)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_6_LSR_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.6  Source pulses.cdelay_TRELLIS_FF_Q_6_LSR_LUT4_Z_SLICE.F1
Info:  0.5  6.1    Net pulses.cdelay_TRELLIS_FF_Q_6_LSR budget 0.637000 ns (78,44) -> (78,44)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_6_SLICE.LSR
Info:  0.2  6.3  Setup pulses.cdelay_TRELLIS_FF_Q_6_SLICE.LSR
Info: 1.6 ns logic, 4.8 ns routing

Info: Critical path report for clock '$glbnet$clk$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_6_SLICE.Q0
Info:  0.9  1.2    Net control.uart0.rx_clk[5] budget 3.749000 ns (64,44) -> (65,45)
Info:                Sink RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_5_SLICE.B1
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:105.39-105.45
Info:                  pulse_control.v:82.7-94.4
Info:  0.1  1.4  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_5_SLICE.F1
Info:  0.7  2.1    Net RS232_Rx_LUT4_C_1_D_LUT4_Z_A[0] budget 3.749000 ns (65,45) -> (66,45)
Info:                Sink RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_1_SLICE.A1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.2  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_1_SLICE.F1
Info:  0.6  2.9    Net RS232_Rx_LUT4_A_Z[1] budget 3.778000 ns (66,45) -> (62,44)
Info:                Sink RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.0  Source RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_SLICE.OFX0
Info:  0.8  3.8    Net RS232_Rx_LUT4_A_2_Z_PFUMX_ALUT_Z[0] budget 3.778000 ns (62,44) -> (59,45)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_B_LUT4_Z_1_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  4.0  Source control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_B_LUT4_Z_1_SLICE.F1
Info:  0.2  4.2    Net control.uart0.rx_sample_countdown_TRELLIS_FF_Q_1_LSR budget 3.778000 ns (59,45) -> (59,45)
Info:                Sink control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_B_LUT4_Z_1_SLICE.LSR
Info:  0.2  4.4  Setup control.uart0.recv_state_TRELLIS_FF_Q_DI_LUT4_Z_B_LUT4_Z_1_SLICE.LSR
Info: 1.1 ns logic, 3.3 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  4.2  4.2    Net RS232_Rx$TRELLIS_IO_IN budget 4.870000 ns (0,92) -> (64,44)
Info:                Sink RS232_Rx_LUT4_D_SLICE.D0
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:53.11-53.13
Info:                  pulse_control.v:82.7-94.4
Info:  0.1  4.3  Source RS232_Rx_LUT4_D_SLICE.F0
Info:  0.9  5.3    Net RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0[0] budget 4.689000 ns (64,44) -> (67,45)
Info:                Sink RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_2_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.4  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_2_SLICE.F1
Info:  0.9  6.3    Net RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_LUT4_Z_7_C[3] budget 4.870000 ns (67,45) -> (65,45)
Info:                Sink RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_PFUMX_Z_2_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  6.5  Source RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_PFUMX_Z_2_SLICE.OFX0
Info:  0.1  6.6    Net RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z[2] budget 3.783000 ns (65,45) -> (65,45)
Info:                Sink RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_PFUMX_Z_2_SLICE.DI0
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:0.0-0.0
Info:                  uart_nonblock.v:162.9-265.16
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/techmap.v:575.21-575.22
Info:  0.0  6.6  Setup RS232_Rx_LUT4_A_Z_CCU2C_S1_S0_CCU2C_S1_1_S0_LUT4_C_Z_PFUMX_BLUT_Z_PFUMX_Z_2_SLICE.DI0
Info: 0.5 ns logic, 6.1 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.0  0.0  Source resetn$tr_io.O
Info:  3.3  3.3    Net resetn$TRELLIS_IO_IN budget 1.086000 ns (0,47) -> (75,35)
Info:                Sink resetn_LUT4_C_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  3.4  Source resetn_LUT4_C_SLICE.F1
Info:  0.2  3.6    Net resetn_LUT4_A_Z[4] budget 0.606000 ns (75,35) -> (75,36)
Info:                Sink control.cpmg_CCU2C_B0_COUT_PFUMX_Z_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.8  Source control.cpmg_CCU2C_B0_COUT_PFUMX_Z_SLICE.OFX0
Info:  1.6  5.4    Net control.block_PFUMX_C0_ALUT_LUT4_Z_A[5] budget 0.637000 ns (75,36) -> (78,44)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_6_LSR_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  5.5  Source pulses.cdelay_TRELLIS_FF_Q_6_LSR_LUT4_Z_SLICE.F1
Info:  0.5  6.0    Net pulses.cdelay_TRELLIS_FF_Q_6_LSR budget 0.637000 ns (78,44) -> (78,44)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_6_SLICE.LSR
Info:  0.2  6.2  Setup pulses.cdelay_TRELLIS_FF_Q_6_SLICE.LSR
Info: 0.7 ns logic, 5.6 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.tx_out_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q1
Info:  4.5  4.8    Net RS232_Tx$TRELLIS_IO_OUT budget 83.025002 ns (62,42) -> (0,92)
Info:                Sink RS232_Tx$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:60.16-78.4
Info:                  uart_nonblock.v:112.9-112.15
Info:                  pulse_control.v:82.7-94.4
Info: 0.3 ns logic, 4.5 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk$TRELLIS_IO_IN' -> 'posedge $glbnet$clk_pll':
Info: curr total
Info:  0.3  0.3  Source control.p1width_TRELLIS_FF_Q_15_SLICE.Q0
Info:  1.0  1.3    Net p1width[0] budget 0.000000 ns (72,38) -> (74,38)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_8$CCU2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:71.20-71.27
Info:  0.3  1.6  Source pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_8$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_4_COUT[0] budget 0.000000 ns (74,38) -> (74,38)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:236.16-236.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_3$CCU2_SLICE.FCO
Info:  0.0  1.6    Net pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_4_COUT[2] budget 0.000000 ns (74,38) -> (74,38)
Info:                Sink pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:236.16-236.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  1.9  Source pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B_CCU2C_S0_2$CCU2_SLICE.F0
Info:  0.9  2.8    Net pulses.cdelay_TRELLIS_FF_Q_31_DI_LUT4_Z_B[4] budget 0.000000 ns (74,38) -> (74,39)
Info:                Sink control.p2width_CCU2C_A0_2$CCU2_SLICE.B0
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:236.16-236.31
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.4  3.2  Source control.p2width_CCU2C_A0_2$CCU2_SLICE.F1
Info:  1.0  4.1    Net pulses.cpulse_TRELLIS_FF_Q_31_DI_LUT4_Z_B[5] budget 0.000000 ns (74,39) -> (77,39)
Info:                Sink control.pulse_block_CCU2C_A0_1$CCU2_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.3  4.4  Source control.pulse_block_CCU2C_A0_1$CCU2_SLICE.FCO
Info:  0.0  4.4    Net control.pulse_block_CCU2C_A0_COUT[6] budget 0.000000 ns (77,39) -> (78,39)
Info:                Sink control.pulse_block_CCU2C_A0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:65.22-65.25
Info:  0.3  4.7  Source control.pulse_block_CCU2C_A0$CCU2_SLICE.F1
Info:  1.1  5.8    Net pulses.cblock_delay_TRELLIS_FF_Q_29_DI_LUT4_Z_B[7] budget 0.177000 ns (78,39) -> (79,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_2$CCU2_SLICE.B1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:65.27-65.29
Info:  0.3  6.1  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_2$CCU2_SLICE.FCO
Info:  0.0  6.1    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[5] budget 0.000000 ns (79,38) -> (80,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  6.1  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_1$CCU2_SLICE.FCO
Info:  0.0  6.1    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[7] budget 0.000000 ns (80,38) -> (80,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  6.1  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  6.1    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[9] budget 0.000000 ns (80,38) -> (80,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_7$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  6.2  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_7$CCU2_SLICE.FCO
Info:  0.0  6.2    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[11] budget 0.000000 ns (80,38) -> (80,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_6$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  6.2  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_6$CCU2_SLICE.FCO
Info:  0.0  6.2    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[13] budget 0.000000 ns (80,38) -> (81,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_5$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  6.3  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_5$CCU2_SLICE.FCO
Info:  0.0  6.3    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4_COUT[15] budget 0.000000 ns (81,38) -> (81,38)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  6.5  Source pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B_CCU2C_S0_4$CCU2_SLICE.F1
Info:  0.7  7.2    Net pulses.cblock_on_TRELLIS_FF_Q_29_DI_LUT4_Z_B[17] budget 0.710000 ns (81,38) -> (81,37)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_12_DI_LUT4_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:34.26-34.27
Info:  0.1  7.4  Source pulses.cblock_on_TRELLIS_FF_Q_12_DI_LUT4_Z_SLICE.F1
Info:  0.1  7.5    Net pulses.cblock_on_TRELLIS_FF_Q_12_DI budget 0.710000 ns (81,37) -> (81,37)
Info:                Sink pulses.cblock_on_TRELLIS_FF_Q_12_DI_LUT4_Z_SLICE.DI1
Info:  0.0  7.5  Setup pulses.cblock_on_TRELLIS_FF_Q_12_DI_LUT4_Z_SLICE.DI1
Info: 2.7 ns logic, 4.7 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.pump_LUT4_C_D_LUT4_Z_1_SLICE.Q1
Info:  2.5  2.8    Net Sync$TRELLIS_IO_OUT budget 83.025002 ns (69,35) -> (126,41)
Info:                Sink Sync$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:82.9-105.4
Info:                  pulses.v:41.13-41.20
Info: 0.3 ns logic, 2.5 ns routing

ERROR: Max frequency for clock           '$glbnet$clk_pll': 157.51 MHz (FAIL at 200.00 MHz)
Info: Max frequency for clock '$glbnet$clk$TRELLIS_IO_IN': 227.38 MHz (PASS at 50.00 MHz)

Info: Max delay <async>                           -> posedge $glbnet$clk$TRELLIS_IO_IN: 6.58 ns
Info: Max delay <async>                           -> posedge $glbnet$clk_pll          : 6.24 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> <async>                          : 4.84 ns
Info: Max delay posedge $glbnet$clk$TRELLIS_IO_IN -> posedge $glbnet$clk_pll          : 7.46 ns
Info: Max delay posedge $glbnet$clk_pll           -> <async>                          : 2.84 ns

Info: Slack histogram:
Info:  legend: * represents 15 endpoint(s)
Info:          + represents [1,15) endpoint(s)
Info: [ -2460,   1691) |************************************************************ 
Info: [  1691,   5842) |****************+
Info: [  5842,   9993) | 
Info: [  9993,  14144) |*+
Info: [ 14144,  18295) |*********************+
Info: [ 18295,  22446) |*+
Info: [ 22446,  26597) | 
Info: [ 26597,  30748) | 
Info: [ 30748,  34899) | 
Info: [ 34899,  39050) | 
Info: [ 39050,  43201) | 
Info: [ 43201,  47352) | 
Info: [ 47352,  51503) | 
Info: [ 51503,  55654) | 
Info: [ 55654,  59805) | 
Info: [ 59805,  63956) | 
Info: [ 63956,  68107) | 
Info: [ 68107,  72258) | 
Info: [ 72258,  76409) | 
Info: [ 76409,  80560) |+
0 warnings, 1 error
Makefile:23: recipe for target 'pulse_gen_out.config' failed
make: *** [pulse_gen_out.config] Error 1
rm pulse_gen_out.config pulse_gen.json
