yosys -p "synth_ecp5 -json pulse_gen.json -top pulse_gen" pulse_gen.v ecppll.v pulse_control.v pulses.v uart.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `pulse_gen.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: pulse_gen.v
Parsing Verilog input from `pulse_gen.v' to AST representation.
Generating RTLIL representation for module `\pulse_gen'.
Successfully finished Verilog frontend.

-- Parsing `ecppll.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ecppll.v
Parsing Verilog input from `ecppll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Parsing `pulse_control.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: pulse_control.v
Parsing Verilog input from `pulse_control.v' to AST representation.
Generating RTLIL representation for module `\pulse_control'.
Successfully finished Verilog frontend.

-- Parsing `pulses.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: pulses.v
Parsing Verilog input from `pulses.v' to AST representation.
Generating RTLIL representation for module `\pulses'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Running command `synth_ecp5 -json pulse_gen.json -top pulse_gen' --

6. Executing SYNTH_ECP5 pass.

6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

6.3. Executing HIERARCHY pass (managing design hierarchy).

6.3.1. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll

6.3.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Used module:     \pulses
Used module:     \pulse_control
Used module:         \uart
Used module:     \pll
Removed 0 unused modules.

6.4. Executing PROC pass (convert processes to netlists).

6.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$304'.
Cleaned up 1 empty switch.

6.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$384 in module TRELLIS_FF.
Removed 2 dead cases from process $proc$uart.v:135$129 in module uart.
Marked 17 switch rules as full_case in process $proc$uart.v:135$129 in module uart.
Marked 1 switch rules as full_case in process $proc$pulses.v:159$57 in module pulses.
Removed 1 dead cases from process $proc$pulse_control.v:133$3 in module pulse_control.
Marked 5 switch rules as full_case in process $proc$pulse_control.v:133$3 in module pulse_control.
Removed a total of 3 dead cases.

6.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 66 assignments to connections.

6.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$388'.
  Set init value: \Q = 1'0
Found init rule in `\uart.$proc$uart.v:106$158'.
  Set init value: \tx_state = 2'00
Found init rule in `\uart.$proc$uart.v:105$157'.
  Set init value: \tx_out = 1'1
Found init rule in `\uart.$proc$uart.v:101$156'.
  Set init value: \recv_state = 3'000
Found init rule in `\pulses.$proc$pulses.v:95$121'.
  Set init value: \ccount = 8'00000000
Found init rule in `\pulses.$proc$pulses.v:57$120'.
  Set init value: \cw = 1'0
Found init rule in `\pulses.$proc$pulses.v:48$118'.
  Set init value: \counter = 0
Found init rule in `\pulse_control.$proc$pulse_control.v:130$47'.
  Set init value: \state = 3'000
Found init rule in `\pulse_control.$proc$pulse_control.v:113$46'.
  Set init value: \readcount = 6'000000
Found init rule in `\pulse_control.$proc$pulse_control.v:112$45'.
  Set init value: \readstate = 2'00
Found init rule in `\pulse_control.$proc$pulse_control.v:110$43'.
  Set init value: \writestate = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:48$42'.
  Set init value: \recv_set = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:47$41'.
  Set init value: \nut_wid = 8'01100100
Found init rule in `\pulse_control.$proc$pulse_control.v:46$40'.
  Set init value: \nut_del = 16'0000000001100100
Found init rule in `\pulse_control.$proc$pulse_control.v:45$39'.
  Set init value: \rx_done = 1'0
Found init rule in `\pulse_control.$proc$pulse_control.v:44$38'.
  Set init value: \block = 1'1
Found init rule in `\pulse_control.$proc$pulse_control.v:43$37'.
  Set init value: \cpmg = 8'00000001
Found init rule in `\pulse_control.$proc$pulse_control.v:42$36'.
  Set init value: \pulse_block_half = 16'0000000000110010
Found init rule in `\pulse_control.$proc$pulse_control.v:41$35'.
  Set init value: \pulse_block = 8'01100100
Found init rule in `\pulse_control.$proc$pulse_control.v:40$34'.
  Set init value: \p2width = 16'0000000000111100
Found init rule in `\pulse_control.$proc$pulse_control.v:39$33'.
  Set init value: \delay = 16'0000000011001000
Found init rule in `\pulse_control.$proc$pulse_control.v:38$32'.
  Set init value: \p1width = 16'0000000000011110
Found init rule in `\pulse_control.$proc$pulse_control.v:37$31'.
  Set init value: \period = 2000

6.4.5. Executing PROC_ARST pass (detect async resets in processes).

6.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$388'.
Creating decoders for process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$384'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$381'.
Creating decoders for process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$360'.
     1/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$359_EN[3:0]$363
     2/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$359_DATA[3:0]$362
     3/3: $0$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$359_ADDR[3:0]$361
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$327'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$305'.
     1/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$303_EN[3:0]$308
     2/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$303_DATA[3:0]$307
     3/3: $0$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$303_ADDR[3:0]$306
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$304'.
Creating decoders for process `\uart.$proc$uart.v:106$158'.
Creating decoders for process `\uart.$proc$uart.v:105$157'.
Creating decoders for process `\uart.$proc$uart.v:101$156'.
Creating decoders for process `\uart.$proc$uart.v:135$129'.
     1/57: $5\tx_state[1:0]
     2/57: $5\tx_clk[10:0]
     3/57: $4\tx_data[7:0]
     4/57: $4\tx_out[0:0]
     5/57: $4\tx_bits_remaining[3:0]
     6/57: $3\tx_data[7:0]
     7/57: $3\tx_bits_remaining[3:0]
     8/57: $4\tx_state[1:0]
     9/57: $3\tx_out[0:0]
    10/57: $4\tx_clk[10:0]
    11/57: $3\tx_state[1:0]
    12/57: $2\tx_bits_remaining[3:0]
    13/57: $2\tx_out[0:0]
    14/57: $3\tx_clk[10:0]
    15/57: $2\tx_data[7:0]
    16/57: $1\tx_data[7:0]
    17/57: $1\tx_bits_remaining[3:0]
    18/57: $2\tx_state[1:0]
    19/57: $1\tx_out[0:0]
    20/57: $2\tx_clk[10:0]
    21/57: $9\recv_state[2:0]
    22/57: $8\recv_state[2:0]
    23/57: $8\rx_clk[14:0]
    24/57: $3\rx_data[7:0]
    25/57: $7\recv_state[2:0]
    26/57: $7\rx_clk[14:0]
    27/57: $4\rx_bits_remaining[3:0]
    28/57: $5\rx_sample_countdown[3:0]
    29/57: $6\rx_samples[3:0]
    30/57: $2\rx_data[7:0]
    31/57: $5\rx_samples[3:0]
    32/57: $6\recv_state[2:0]
    33/57: $4\rx_sample_countdown[3:0]
    34/57: $6\rx_clk[14:0]
    35/57: $4\rx_samples[3:0]
    36/57: $3\rx_sample_countdown[3:0]
    37/57: $3\rx_samples[3:0]
    38/57: $5\recv_state[2:0]
    39/57: $3\rx_bits_remaining[3:0]
    40/57: $5\rx_clk[14:0]
    41/57: $2\rx_bits_remaining[3:0]
    42/57: $4\recv_state[2:0]
    43/57: $4\rx_clk[14:0]
    44/57: $2\rx_sample_countdown[3:0]
    45/57: $2\rx_samples[3:0]
    46/57: $3\recv_state[2:0]
    47/57: $3\rx_clk[14:0]
    48/57: $2\recv_state[2:0]
    49/57: $2\rx_clk[14:0]
    50/57: $1\rx_data[7:0]
    51/57: $1\rx_bits_remaining[3:0]
    52/57: $1\rx_sample_countdown[3:0]
    53/57: $1\rx_samples[3:0]
    54/57: $1\tx_clk[10:0]
    55/57: $1\rx_clk[14:0]
    56/57: $1\tx_state[1:0]
    57/57: $1\recv_state[2:0]
Creating decoders for process `\pulses.$proc$pulses.v:101$122'.
Creating decoders for process `\pulses.$proc$pulses.v:95$121'.
Creating decoders for process `\pulses.$proc$pulses.v:57$120'.
Creating decoders for process `\pulses.$proc$pulses.v:56$119'.
Creating decoders for process `\pulses.$proc$pulses.v:48$118'.
Creating decoders for process `\pulses.$proc$pulses.v:159$57'.
     1/8: $0\cblock_on[31:0]
     2/8: $0\cblock_delay[31:0]
     3/8: $0\cpulse[31:0]
     4/8: $0\cdelay[31:0]
     5/8: $0\ccount[7:0]
     6/8: $0\inh[0:0]
     7/8: $0\sync[0:0]
     8/8: $0\pulses[0:0]
Creating decoders for process `\pulses.$proc$pulses.v:113$48'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:130$47'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:113$46'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:112$45'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:111$44'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:110$43'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:48$42'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:47$41'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:46$40'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:45$39'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:44$38'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:43$37'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:42$36'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:41$35'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:40$34'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:39$33'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:38$32'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:37$31'.
Creating decoders for process `\pulse_control.$proc$pulse_control.v:133$3'.
     1/33: $2\rx_done[0:0]
     2/33: $4$bitselwrite$data$pulse_control.v:148$2[31:0]$14
     3/33: $4$bitselwrite$mask$pulse_control.v:148$1[31:0]$13
     4/33: $4\vinput[31:0]
     5/33: $3$bitselwrite$data$pulse_control.v:148$2[31:0]$11
     6/33: $3$bitselwrite$mask$pulse_control.v:148$1[31:0]$10
     7/33: $3\vinput[31:0]
     8/33: $2$bitselwrite$data$pulse_control.v:148$2[31:0]$9
     9/33: $2$bitselwrite$mask$pulse_control.v:148$1[31:0]$8
    10/33: $2\vinput[31:0]
    11/33: $1$bitselwrite$data$pulse_control.v:148$2[31:0]$7
    12/33: $1$bitselwrite$mask$pulse_control.v:148$1[31:0]$6
    13/33: $1\vinput[31:0]
    14/33: $1\voutput[7:0]
    15/33: $1\rx_done[0:0]
    16/33: $0\state[2:0]
    17/33: $0\readcount[5:0]
    18/33: $0\readstate[1:0]
    19/33: $0\writestate[0:0]
    20/33: $0\vcontrol[7:0]
    21/33: $0\tx_byte[7:0]
    22/33: $0\transmit[0:0]
    23/33: $0\recv_set[0:0]
    24/33: $0\cpmg[7:0]
    25/33: $0\pulse_block_half[15:0]
    26/33: $0\pulse_block[7:0]
    27/33: $0\block[0:0]
    28/33: $0\nut_wid[7:0]
    29/33: $0\nut_del[15:0]
    30/33: $0\p2width[15:0]
    31/33: $0\delay[15:0]
    32/33: $0\p1width[15:0]
    33/33: $0\period[31:0]

6.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pulses.\xfer_bits' from process `\pulses.$proc$pulses.v:101$122'.
No latch inferred for signal `\pulses.\rec' from process `\pulses.$proc$pulses.v:56$119'.
No latch inferred for signal `\pulse_control.\writecount' from process `\pulse_control.$proc$pulse_control.v:111$44'.

6.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$384'.
  created $dff cell `$procdff$1401' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$381'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$359_ADDR' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$360'.
  created $dff cell `$procdff$1402' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$359_DATA' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$360'.
  created $dff cell `$procdff$1403' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:287$359_EN' using process `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$360'.
  created $dff cell `$procdff$1404' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$327'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$303_ADDR' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$305'.
  created $dff cell `$procdff$1405' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$303_DATA' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$305'.
  created $dff cell `$procdff$1406' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:223$303_EN' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$305'.
  created $dff cell `$procdff$1407' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$304'.
  created direct connection (no actual register cell created).
Creating register for signal `\uart.\rx_samples' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1408' with positive edge clock.
Creating register for signal `\uart.\rx_sample_countdown' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1409' with positive edge clock.
Creating register for signal `\uart.\rx_clk' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1410' with positive edge clock.
Creating register for signal `\uart.\tx_clk' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1411' with positive edge clock.
Creating register for signal `\uart.\recv_state' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1412' with positive edge clock.
Creating register for signal `\uart.\rx_bits_remaining' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1413' with positive edge clock.
Creating register for signal `\uart.\rx_data' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1414' with positive edge clock.
Creating register for signal `\uart.\tx_out' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1415' with positive edge clock.
Creating register for signal `\uart.\tx_state' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1416' with positive edge clock.
Creating register for signal `\uart.\tx_bits_remaining' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1417' with positive edge clock.
Creating register for signal `\uart.\tx_data' using process `\uart.$proc$uart.v:135$129'.
  created $dff cell `$procdff$1418' with positive edge clock.
Creating register for signal `\pulses.\pulses' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1419' with positive edge clock.
Creating register for signal `\pulses.\counter' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1420' with positive edge clock.
Creating register for signal `\pulses.\sync' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1421' with positive edge clock.
Creating register for signal `\pulses.\pulse' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1422' with positive edge clock.
Creating register for signal `\pulses.\nut_pulse' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1423' with positive edge clock.
Creating register for signal `\pulses.\inh' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1424' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_start' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1425' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_stop' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1426' with positive edge clock.
Creating register for signal `\pulses.\ccount' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1427' with positive edge clock.
Creating register for signal `\pulses.\cdelay' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1428' with positive edge clock.
Creating register for signal `\pulses.\cpulse' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1429' with positive edge clock.
Creating register for signal `\pulses.\cblock_delay' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1430' with positive edge clock.
Creating register for signal `\pulses.\cblock_on' using process `\pulses.$proc$pulses.v:159$57'.
  created $dff cell `$procdff$1431' with positive edge clock.
Creating register for signal `\pulses.\period' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1432' with positive edge clock.
Creating register for signal `\pulses.\p1width' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1433' with positive edge clock.
Creating register for signal `\pulses.\delay' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1434' with positive edge clock.
Creating register for signal `\pulses.\p2width' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1435' with positive edge clock.
Creating register for signal `\pulses.\block' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1436' with positive edge clock.
Creating register for signal `\pulses.\pulse_block' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1437' with positive edge clock.
Creating register for signal `\pulses.\pulse_block_half' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1438' with positive edge clock.
Creating register for signal `\pulses.\cpmg' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1439' with positive edge clock.
Creating register for signal `\pulses.\cw' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1440' with positive edge clock.
Creating register for signal `\pulses.\p2start' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1441' with positive edge clock.
Creating register for signal `\pulses.\sync_down' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1442' with positive edge clock.
Creating register for signal `\pulses.\block_off' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1443' with positive edge clock.
Creating register for signal `\pulses.\block_on' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1444' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_width' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1445' with positive edge clock.
Creating register for signal `\pulses.\nutation_pulse_delay' using process `\pulses.$proc$pulses.v:113$48'.
  created $dff cell `$procdff$1446' with positive edge clock.
Creating register for signal `\pulse_control.\period' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1447' with positive edge clock.
Creating register for signal `\pulse_control.\p1width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1448' with positive edge clock.
Creating register for signal `\pulse_control.\delay' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1449' with positive edge clock.
Creating register for signal `\pulse_control.\p2width' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1450' with positive edge clock.
Creating register for signal `\pulse_control.\nut_del' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1451' with positive edge clock.
Creating register for signal `\pulse_control.\nut_wid' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1452' with positive edge clock.
Creating register for signal `\pulse_control.\block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1453' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1454' with positive edge clock.
Creating register for signal `\pulse_control.\pulse_block_half' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1455' with positive edge clock.
Creating register for signal `\pulse_control.\cpmg' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1456' with positive edge clock.
Creating register for signal `\pulse_control.\rx_done' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1457' with positive edge clock.
Creating register for signal `\pulse_control.\recv_set' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1458' with positive edge clock.
Creating register for signal `\pulse_control.\transmit' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1459' with positive edge clock.
Creating register for signal `\pulse_control.\tx_byte' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1460' with positive edge clock.
Creating register for signal `\pulse_control.\vinput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1461' with positive edge clock.
Creating register for signal `\pulse_control.\vcontrol' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1462' with positive edge clock.
Creating register for signal `\pulse_control.\voutput' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1463' with positive edge clock.
Creating register for signal `\pulse_control.\writestate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1464' with positive edge clock.
Creating register for signal `\pulse_control.\readstate' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1465' with positive edge clock.
Creating register for signal `\pulse_control.\readcount' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1466' with positive edge clock.
Creating register for signal `\pulse_control.\state' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1467' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$mask$pulse_control.v:148$1' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1468' with positive edge clock.
Creating register for signal `\pulse_control.$bitselwrite$data$pulse_control.v:148$2' using process `\pulse_control.$proc$pulse_control.v:133$3'.
  created $dff cell `$procdff$1469' with positive edge clock.

6.4.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$388'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$384'.
Removing empty process `TRELLIS_FF.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:350$384'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$381'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$360'.
Removing empty process `DPR16X4C.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:285$360'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:0$327'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$305'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:221$305'.
Removing empty process `TRELLIS_DPR16X4.$proc$/usr/local/bin/../share/yosys/ecp5/cells_sim.v:213$304'.
Removing empty process `uart.$proc$uart.v:106$158'.
Removing empty process `uart.$proc$uart.v:105$157'.
Removing empty process `uart.$proc$uart.v:101$156'.
Found and cleaned up 17 empty switches in `\uart.$proc$uart.v:135$129'.
Removing empty process `uart.$proc$uart.v:135$129'.
Removing empty process `pulses.$proc$pulses.v:101$122'.
Removing empty process `pulses.$proc$pulses.v:95$121'.
Removing empty process `pulses.$proc$pulses.v:57$120'.
Removing empty process `pulses.$proc$pulses.v:56$119'.
Removing empty process `pulses.$proc$pulses.v:48$118'.
Found and cleaned up 6 empty switches in `\pulses.$proc$pulses.v:159$57'.
Removing empty process `pulses.$proc$pulses.v:159$57'.
Removing empty process `pulses.$proc$pulses.v:113$48'.
Removing empty process `pulse_control.$proc$pulse_control.v:130$47'.
Removing empty process `pulse_control.$proc$pulse_control.v:113$46'.
Removing empty process `pulse_control.$proc$pulse_control.v:112$45'.
Removing empty process `pulse_control.$proc$pulse_control.v:111$44'.
Removing empty process `pulse_control.$proc$pulse_control.v:110$43'.
Removing empty process `pulse_control.$proc$pulse_control.v:48$42'.
Removing empty process `pulse_control.$proc$pulse_control.v:47$41'.
Removing empty process `pulse_control.$proc$pulse_control.v:46$40'.
Removing empty process `pulse_control.$proc$pulse_control.v:45$39'.
Removing empty process `pulse_control.$proc$pulse_control.v:44$38'.
Removing empty process `pulse_control.$proc$pulse_control.v:43$37'.
Removing empty process `pulse_control.$proc$pulse_control.v:42$36'.
Removing empty process `pulse_control.$proc$pulse_control.v:41$35'.
Removing empty process `pulse_control.$proc$pulse_control.v:40$34'.
Removing empty process `pulse_control.$proc$pulse_control.v:39$33'.
Removing empty process `pulse_control.$proc$pulse_control.v:38$32'.
Removing empty process `pulse_control.$proc$pulse_control.v:37$31'.
Found and cleaned up 9 empty switches in `\pulse_control.$proc$pulse_control.v:133$3'.
Removing empty process `pulse_control.$proc$pulse_control.v:133$3'.
Cleaned up 36 empty switches.

6.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart.
Deleting now unused module pulses.
Deleting now unused module pulse_control.
Deleting now unused module pll.
<suppressed ~4 debug messages>

6.6. Executing TRIBUF pass.

6.7. Executing DEMINOUT pass (demote inout ports to input or output).

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~99 debug messages>

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 96 unused cells and 362 unused wires.
<suppressed ~112 debug messages>

6.10. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~573 debug messages>
Removed a total of 191 cells.

6.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\control.$procmux$1253: \control.writestate -> 1'0
      Replacing known input bits on port B of cell $flatten\control.$procmux$1251: \control.writestate -> 1'1
      Replacing known input bits on port B of cell $flatten\control.$procmux$1255: \control.writestate -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$562.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$572.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$574.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$584.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$586.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$596.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$598.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$607.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$616.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$625.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$634.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$643.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$652.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$663.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$665.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$675.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$685.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$695.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$705.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$717.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$719.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$731.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$733.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$745.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$747.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$759.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$761.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$773.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$775.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$786.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$797.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$808.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$819.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$830.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$842.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$854.
    dead port 2/2 on $mux $flatten\control.$procmux$1105.
    dead port 2/2 on $mux $flatten\control.$procmux$1107.
    dead port 2/2 on $mux $flatten\control.$procmux$1109.
    dead port 2/2 on $mux $flatten\control.$procmux$1143.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$412.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$414.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$422.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$424.
    dead port 2/2 on $mux $flatten\control.$procmux$1145.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$432.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$434.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$442.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$444.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$452.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$454.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$461.
    dead port 2/2 on $mux $flatten\control.$procmux$1172.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$468.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$475.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$482.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$489.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$497.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$505.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$513.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$521.
    dead port 2/2 on $mux $flatten\control.\uart0.$procmux$529.
Removed 62 multiplexer ports.
<suppressed ~35 debug messages>

6.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$551: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP $auto$opt_reduce.cc:134:opt_mux$1471 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$865: { $flatten\control.\uart0.$procmux$843_CMP $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$666_CMP $flatten\control.\uart0.$procmux$575_CMP $flatten\control.\uart0.$procmux$859_CMP $auto$opt_reduce.cc:134:opt_mux$1473 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$874: { $flatten\control.\uart0.$procmux$575_CMP $auto$opt_reduce.cc:134:opt_mux$1475 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$883: { $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$575_CMP $auto$opt_reduce.cc:134:opt_mux$1477 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$892: { $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$666_CMP $flatten\control.\uart0.$procmux$575_CMP $auto$opt_reduce.cc:134:opt_mux$1479 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$901: { $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$666_CMP $flatten\control.\uart0.$procmux$575_CMP $auto$opt_reduce.cc:134:opt_mux$1481 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$1005: $auto$opt_reduce.cc:134:opt_mux$1483
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$937: $auto$opt_reduce.cc:134:opt_mux$1485
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$955: $auto$opt_reduce.cc:134:opt_mux$1487
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$531: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP $auto$opt_reduce.cc:134:opt_mux$1489 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$536: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP $auto$opt_reduce.cc:134:opt_mux$1491 }
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$971: $auto$opt_reduce.cc:134:opt_mux$1493
    New ctrl vector for $pmux cell $flatten\pulses.$procmux$987: $auto$opt_reduce.cc:134:opt_mux$1495
    New ctrl vector for $pmux cell $flatten\control.$procmux$1219: { $flatten\control.$procmux$1110_CMP $auto$opt_reduce.cc:134:opt_mux$1497 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$546: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP $auto$opt_reduce.cc:134:opt_mux$1499 }
  Optimizing cells in module \pulse_gen.
Performed a total of 15 changes.

6.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

6.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1446 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1445 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1439 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1437 ($dff) from module pulse_gen.
Setting constant 1-bit at position 0 on $flatten\pulses.$procdff$1436 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1435 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1434 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1433 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 1-bit at position 9 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 1-bit at position 10 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 1-bit at position 11 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 16 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 17 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 18 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 19 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 20 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 21 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 22 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 23 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 24 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 25 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 26 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 27 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 28 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 29 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 30 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.
Setting constant 0-bit at position 31 on $flatten\pulses.$procdff$1432 ($dff) from module pulse_gen.

6.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 261 unused wires.
<suppressed ~1 debug messages>

6.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~18 debug messages>

6.11.9. Rerunning OPT passes. (Maybe there is more to do..)

6.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1000.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1000.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1002.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1002.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1008.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1008.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1010.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1010.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1012.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1012.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1014.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1014.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1016.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1016.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1018.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1018.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1020.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1020.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1022.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1022.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1025.
    dead port 3/3 on $pmux $flatten\pulses.$procmux$1025.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1030.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1030.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1032.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1032.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1034.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1034.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1036.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1036.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1039.
    dead port 3/3 on $pmux $flatten\pulses.$procmux$1039.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1041.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1041.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1046.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1046.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1048.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1048.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1050.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1050.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1052.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1052.
    dead port 1/2 on $mux $flatten\pulses.$procmux$1054.
    dead port 2/2 on $mux $flatten\pulses.$procmux$1054.
    dead port 2/3 on $pmux $flatten\pulses.$procmux$1057.
    dead port 3/3 on $pmux $flatten\pulses.$procmux$1057.
    dead port 1/2 on $mux $flatten\pulses.$procmux$922.
    dead port 2/2 on $mux $flatten\pulses.$procmux$922.
    dead port 1/2 on $mux $flatten\pulses.$procmux$924.
    dead port 2/2 on $mux $flatten\pulses.$procmux$924.
    dead port 1/2 on $mux $flatten\pulses.$procmux$926.
    dead port 2/2 on $mux $flatten\pulses.$procmux$926.
    dead port 1/2 on $mux $flatten\pulses.$procmux$928.
    dead port 2/2 on $mux $flatten\pulses.$procmux$928.
    dead port 1/2 on $mux $flatten\pulses.$procmux$930.
    dead port 2/2 on $mux $flatten\pulses.$procmux$930.
    dead port 1/2 on $mux $flatten\pulses.$procmux$932.
    dead port 2/2 on $mux $flatten\pulses.$procmux$932.
    dead port 1/2 on $mux $flatten\pulses.$procmux$934.
    dead port 2/2 on $mux $flatten\pulses.$procmux$934.
    dead port 1/2 on $mux $flatten\pulses.$procmux$940.
    dead port 2/2 on $mux $flatten\pulses.$procmux$940.
    dead port 1/2 on $mux $flatten\pulses.$procmux$942.
    dead port 2/2 on $mux $flatten\pulses.$procmux$942.
    dead port 1/2 on $mux $flatten\pulses.$procmux$944.
    dead port 2/2 on $mux $flatten\pulses.$procmux$944.
    dead port 1/2 on $mux $flatten\pulses.$procmux$946.
    dead port 2/2 on $mux $flatten\pulses.$procmux$946.
    dead port 1/2 on $mux $flatten\pulses.$procmux$948.
    dead port 2/2 on $mux $flatten\pulses.$procmux$948.
    dead port 1/2 on $mux $flatten\pulses.$procmux$950.
    dead port 2/2 on $mux $flatten\pulses.$procmux$950.
    dead port 1/2 on $mux $flatten\pulses.$procmux$952.
    dead port 2/2 on $mux $flatten\pulses.$procmux$952.
    dead port 1/2 on $mux $flatten\pulses.$procmux$960.
    dead port 2/2 on $mux $flatten\pulses.$procmux$960.
    dead port 1/2 on $mux $flatten\pulses.$procmux$962.
    dead port 2/2 on $mux $flatten\pulses.$procmux$962.
    dead port 1/2 on $mux $flatten\pulses.$procmux$964.
    dead port 2/2 on $mux $flatten\pulses.$procmux$964.
    dead port 1/2 on $mux $flatten\pulses.$procmux$966.
    dead port 2/2 on $mux $flatten\pulses.$procmux$966.
    dead port 1/2 on $mux $flatten\pulses.$procmux$968.
    dead port 2/2 on $mux $flatten\pulses.$procmux$968.
    dead port 1/2 on $mux $flatten\pulses.$procmux$976.
    dead port 2/2 on $mux $flatten\pulses.$procmux$976.
    dead port 1/2 on $mux $flatten\pulses.$procmux$978.
    dead port 2/2 on $mux $flatten\pulses.$procmux$978.
    dead port 1/2 on $mux $flatten\pulses.$procmux$980.
    dead port 2/2 on $mux $flatten\pulses.$procmux$980.
    dead port 1/2 on $mux $flatten\pulses.$procmux$982.
    dead port 2/2 on $mux $flatten\pulses.$procmux$982.
    dead port 1/2 on $mux $flatten\pulses.$procmux$984.
    dead port 2/2 on $mux $flatten\pulses.$procmux$984.
    dead port 1/2 on $mux $flatten\pulses.$procmux$990.
    dead port 2/2 on $mux $flatten\pulses.$procmux$990.
    dead port 1/2 on $mux $flatten\pulses.$procmux$992.
    dead port 2/2 on $mux $flatten\pulses.$procmux$992.
    dead port 1/2 on $mux $flatten\pulses.$procmux$994.
    dead port 2/2 on $mux $flatten\pulses.$procmux$994.
    dead port 1/2 on $mux $flatten\pulses.$procmux$996.
    dead port 2/2 on $mux $flatten\pulses.$procmux$996.
    dead port 1/2 on $mux $flatten\pulses.$procmux$998.
    dead port 2/2 on $mux $flatten\pulses.$procmux$998.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:213$96.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:213$96.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:226$106.
    dead port 2/2 on $mux $flatten\pulses.$ternary$pulses.v:226$106.
Removed 108 multiplexer ports.
<suppressed ~29 debug messages>

6.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1438 ($dff) from module pulse_gen.

6.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 22 unused cells and 92 unused wires.
<suppressed ~29 debug messages>

6.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.16. Rerunning OPT passes. (Maybe there is more to do..)

6.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

6.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 1-bit at position 6 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1441 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1440 ($dff) from module pulse_gen.

6.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1 debug messages>

6.11.23. Rerunning OPT passes. (Maybe there is more to do..)

6.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\pulses.$ternary$pulses.v:167$63.
Removed 1 multiplexer ports.
<suppressed ~29 debug messages>

6.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $mux cell $flatten\pulses.$ternary$pulses.v:166$64: { }
  Optimizing cells in module \pulse_gen.
Performed a total of 1 changes.

6.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.11.27. Executing OPT_DFF pass (perform DFF optimizations).

6.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 11 unused cells and 16 unused wires.
<suppressed ~15 debug messages>

6.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.30. Rerunning OPT passes. (Maybe there is more to do..)

6.11.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.11.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 1-bit at position 1 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 3 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 4 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1442 ($dff) from module pulse_gen.
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1423 ($dff) from module pulse_gen.

6.11.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~3 debug messages>

6.11.37. Rerunning OPT passes. (Maybe there is more to do..)

6.11.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.11.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.41. Executing OPT_DFF pass (perform DFF optimizations).

6.11.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.11.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.44. Rerunning OPT passes. (Maybe there is more to do..)

6.11.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.11.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.48. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 2 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 1-bit at position 5 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 1-bit at position 7 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 1-bit at position 8 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 9 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1443 ($dff) from module pulse_gen.

6.11.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1 debug messages>

6.11.51. Rerunning OPT passes. (Maybe there is more to do..)

6.11.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.11.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.55. Executing OPT_DFF pass (perform DFF optimizations).

6.11.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6.11.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.58. Rerunning OPT passes. (Maybe there is more to do..)

6.11.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.11.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.62. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 1 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 1-bit at position 2 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 1-bit at position 3 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 1-bit at position 4 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 5 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 6 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 7 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 8 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 1-bit at position 9 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 10 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 11 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 12 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 13 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 14 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.
Setting constant 0-bit at position 15 on $flatten\pulses.$procdff$1444 ($dff) from module pulse_gen.

6.11.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.65. Rerunning OPT passes. (Maybe there is more to do..)

6.11.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.11.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.11.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.11.69. Executing OPT_DFF pass (perform DFF optimizations).

6.11.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.11.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.11.72. Finished OPT passes. (There is nothing left to do.)

6.12. Executing FSM pass (extract and optimize FSM).

6.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking pulse_gen.control.readstate as FSM state register:
    Register has an initialization value.
Not marking pulse_gen.control.state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.recv_state as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking pulse_gen.control.uart0.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
    Circuit seems to be self-resetting.

6.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.13. Executing OPT pass (performing simple optimizations).

6.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

6.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\pulses.$procdff$1424 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:184$78_Y [0], Q = \pulses.inh, rval = 1'1).
Adding SRST signal on $flatten\pulses.$procdff$1420 ($dff) from module pulse_gen (D = $flatten\pulses.$add$pulses.v:248$115_Y, Q = \pulses.counter, rval = 0).
Adding SRST signal on $flatten\pulses.$procdff$1419 ($dff) from module pulse_gen (D = $flatten\pulses.$ternary$pulses.v:180$73_Y [0], Q = \pulses.pulses, rval = 1'1).
Adding EN signal on $flatten\control.\uart0.$procdff$1418 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_data[7:0], Q = \control.uart0.tx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1417 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1416 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_state[1:0], Q = \control.uart0.tx_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1415 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\tx_out[0:0], Q = \control.uart0.tx_out).
Adding EN signal on $flatten\control.\uart0.$procdff$1414 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_data[7:0], Q = \control.uart0.rx_data).
Adding EN signal on $flatten\control.\uart0.$procdff$1413 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining).
Adding EN signal on $flatten\control.\uart0.$procdff$1412 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\recv_state[2:0], Q = \control.uart0.recv_state).
Adding EN signal on $flatten\control.\uart0.$procdff$1409 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown).
Adding EN signal on $flatten\control.\uart0.$procdff$1408 ($dff) from module pulse_gen (D = $flatten\control.\uart0.$0\rx_samples[3:0], Q = \control.uart0.rx_samples).
Adding EN signal on $flatten\control.$procdff$1467 ($dff) from module pulse_gen (D = $flatten\control.$0\state[2:0], Q = \control.state).
Adding EN signal on $flatten\control.$procdff$1466 ($dff) from module pulse_gen (D = $flatten\control.$0\readcount[5:0], Q = \control.readcount).
Adding EN signal on $flatten\control.$procdff$1465 ($dff) from module pulse_gen (D = $flatten\control.$procmux$1239_Y, Q = \control.readstate).
Adding EN signal on $flatten\control.$procdff$1464 ($dff) from module pulse_gen (D = $flatten\control.$0\writestate[0:0], Q = \control.writestate).
Adding EN signal on $flatten\control.$procdff$1463 ($dff) from module pulse_gen (D = $flatten\control.$add$pulse_control.v:165$27_Y, Q = \control.voutput).
Adding EN signal on $flatten\control.$procdff$1461 ($dff) from module pulse_gen (D = $flatten\control.$or$pulse_control.v:0$22_Y, Q = \control.vinput).
Adding EN signal on $flatten\control.$procdff$1460 ($dff) from module pulse_gen (D = \control.voutput, Q = \control.tx_byte).
Adding EN signal on $flatten\control.$procdff$1459 ($dff) from module pulse_gen (D = $flatten\control.$0\transmit[0:0], Q = \control.transmit).
Adding EN signal on $flatten\control.$procdff$1458 ($dff) from module pulse_gen (D = 1'1, Q = \control.recv_set).

6.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 15 unused cells and 17 unused wires.
<suppressed ~16 debug messages>

6.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~11 debug messages>

6.13.9. Rerunning OPT passes. (Maybe there is more to do..)

6.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$531: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$536: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$546: { $flatten\control.\uart0.$procmux$498_CMP $flatten\control.\uart0.$procmux$415_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$874: $flatten\control.\uart0.$procmux$575_CMP
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$883: { $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$575_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$892: { $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$666_CMP $flatten\control.\uart0.$procmux$575_CMP }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$901: { $flatten\control.\uart0.$procmux$720_CMP $flatten\control.\uart0.$procmux$666_CMP $flatten\control.\uart0.$procmux$575_CMP }
  Optimizing cells in module \pulse_gen.
Performed a total of 7 changes.

6.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

6.13.13. Executing OPT_DFF pass (perform DFF optimizations).

6.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

6.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.16. Rerunning OPT passes. (Maybe there is more to do..)

6.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.13.20. Executing OPT_DFF pass (perform DFF optimizations).

6.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.13.23. Finished OPT passes. (There is nothing left to do.)

6.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1607 ($ne).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$141 ($mux).
Removed top 30 bits (of 32) from port B of cell pulse_gen.$flatten\control.\uart0.$gt$uart.v:201$143 ($gt).
Removed top 2 bits (of 3) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$147 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$154 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$415_CMP0 ($eq).
Removed top 1 bits (of 11) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$420 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$430 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$450 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$459 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$466 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$473 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$480 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$495 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$503 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$511 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$527 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$560 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$575_CMP0 ($eq).
Removed top 5 bits (of 15) from mux cell pulse_gen.$flatten\control.\uart0.$procmux$582 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$605 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$623 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$632 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$641 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$650 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$661 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$666_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$673 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$683 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$703 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$715 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.\uart0.$procmux$720_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$729 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$757 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$784 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$795 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$817 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$828 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$840 ($mux).
Removed cell pulse_gen.$flatten\control.\uart0.$procmux$874 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1289 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1285 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1245 ($mux).
Removed top 1 bits (of 2) from mux cell pulse_gen.$flatten\control.$procmux$1243 ($mux).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$flatten\control.$procmux$1240_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1237 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1230 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1228 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1215 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1213 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1211 ($mux).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1205_CMP0 ($eq).
Removed cell pulse_gen.$flatten\control.$procmux$1201 ($mux).
Removed cell pulse_gen.$flatten\control.$procmux$1197 ($mux).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$flatten\control.$procmux$1192_CMP0 ($eq).
Removed top 28 bits (of 32) from port B of cell pulse_gen.$flatten\control.$add$pulse_control.v:149$23 ($add).
Removed top 26 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$add$pulse_control.v:149$23 ($add).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$19 ($shl).
Removed top 24 bits (of 32) from port Y of cell pulse_gen.$flatten\control.$and$pulse_control.v:0$17 ($and).
Removed top 26 bits (of 32) from port B of cell pulse_gen.$flatten\control.$shl$pulse_control.v:0$16 ($shl).
Removed top 2 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1601 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1629 ($ne).
Removed top 1 bits (of 3) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1611 ($ne).
Removed top 1 bits (of 2) from port B of cell pulse_gen.$auto$opt_dff.cc:218:make_patterns_logic$1508 ($ne).
Removed top 31 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$add$pulses.v:248$115 ($add).
Removed top 20 bits (of 32) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:248$114 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:184$78 ($mux).
Removed top 6 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:184$76 ($lt).
Removed top 7 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:183$75 ($lt).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:180$73 ($mux).
Removed top 31 bits (of 32) from mux cell pulse_gen.$flatten\pulses.$ternary$pulses.v:181$71 ($mux).
Removed top 7 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:181$69 ($lt).
Removed top 8 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:180$68 ($lt).
Removed top 11 bits (of 16) from port B of cell pulse_gen.$flatten\pulses.$lt$pulses.v:179$67 ($lt).
Removed top 26 bits (of 32) from wire pulse_gen.$flatten\control.$add$pulse_control.v:149$23_Y.
Removed top 24 bits (of 32) from wire pulse_gen.$flatten\control.$and$pulse_control.v:0$17_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.$procmux$1243_Y.
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$3\tx_data[7:0].
Removed top 1 bits (of 8) from wire pulse_gen.$flatten\control.\uart0.$4\tx_data[7:0].
Removed top 1 bits (of 11) from wire pulse_gen.$flatten\control.\uart0.$5\tx_clk[10:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$6\recv_state[2:0].
Removed top 5 bits (of 15) from wire pulse_gen.$flatten\control.\uart0.$8\rx_clk[14:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$9\recv_state[2:0].
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:193$141_Y.
Removed top 2 bits (of 3) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:226$147_Y.
Removed top 1 bits (of 2) from wire pulse_gen.$flatten\control.\uart0.$ternary$uart.v:301$154_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:180$73_Y.
Removed top 31 bits (of 32) from wire pulse_gen.$flatten\pulses.$ternary$pulses.v:184$78_Y.

6.15. Executing PEEPOPT pass (run peephole optimizers).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

6.17. Executing SHARE pass (SAT-based resource sharing).

6.18. Executing TECHMAP pass (map to technology primitives).

6.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

6.18.2. Continuing TECHMAP pass.
Using template $paramod$5c6790619fdd520f2101529d9884f145abb8b880\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~196 debug messages>

6.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

6.21. Executing TECHMAP pass (map to technology primitives).

6.21.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

6.21.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

6.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

6.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pulse_gen:
  creating $macc model for $flatten\control.$add$pulse_control.v:149$23 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:165$25 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:165$26 ($add).
  creating $macc model for $flatten\control.$add$pulse_control.v:165$27 ($add).
  creating $macc model for $flatten\control.\uart0.$add$uart.v:189$138 ($add).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:145$131 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:149$133 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:192$139 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:210$144 ($sub).
  creating $macc model for $flatten\control.\uart0.$sub$uart.v:283$152 ($sub).
  creating $macc model for $flatten\pulses.$add$pulses.v:248$115 ($add).
  merging $macc model for $flatten\control.$add$pulse_control.v:165$26 into $flatten\control.$add$pulse_control.v:165$27.
  merging $macc model for $flatten\control.$add$pulse_control.v:165$25 into $flatten\control.$add$pulse_control.v:165$27.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:210$144.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:192$139.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:149$133.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:145$131.
  creating $alu model for $macc $flatten\control.\uart0.$add$uart.v:189$138.
  creating $alu model for $macc $flatten\control.\uart0.$sub$uart.v:283$152.
  creating $alu model for $macc $flatten\pulses.$add$pulses.v:248$115.
  creating $alu model for $macc $flatten\control.$add$pulse_control.v:149$23.
  creating $macc cell for $flatten\control.$add$pulse_control.v:165$27: $auto$alumacc.cc:365:replace_macc$1679
  creating $alu model for $flatten\pulses.$lt$pulses.v:179$67 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:180$68 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:181$69 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:183$75 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:184$76 ($lt): new $alu
  creating $alu model for $flatten\pulses.$lt$pulses.v:248$114 ($lt): new $alu
  creating $alu cell for $flatten\pulses.$lt$pulses.v:248$114: $auto$alumacc.cc:485:replace_alu$1686
  creating $alu cell for $flatten\pulses.$lt$pulses.v:184$76: $auto$alumacc.cc:485:replace_alu$1697
  creating $alu cell for $flatten\pulses.$lt$pulses.v:183$75: $auto$alumacc.cc:485:replace_alu$1708
  creating $alu cell for $flatten\pulses.$lt$pulses.v:181$69: $auto$alumacc.cc:485:replace_alu$1719
  creating $alu cell for $flatten\pulses.$lt$pulses.v:180$68: $auto$alumacc.cc:485:replace_alu$1730
  creating $alu cell for $flatten\pulses.$lt$pulses.v:179$67: $auto$alumacc.cc:485:replace_alu$1741
  creating $alu cell for $flatten\control.$add$pulse_control.v:149$23: $auto$alumacc.cc:485:replace_alu$1752
  creating $alu cell for $flatten\pulses.$add$pulses.v:248$115: $auto$alumacc.cc:485:replace_alu$1755
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:283$152: $auto$alumacc.cc:485:replace_alu$1758
  creating $alu cell for $flatten\control.\uart0.$add$uart.v:189$138: $auto$alumacc.cc:485:replace_alu$1761
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:145$131: $auto$alumacc.cc:485:replace_alu$1764
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:149$133: $auto$alumacc.cc:485:replace_alu$1767
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:192$139: $auto$alumacc.cc:485:replace_alu$1770
  creating $alu cell for $flatten\control.\uart0.$sub$uart.v:210$144: $auto$alumacc.cc:485:replace_alu$1773
  created 14 $alu and 1 $macc cells.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~6 debug messages>

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$892: { $flatten\control.\uart0.$procmux$666_CMP $auto$opt_reduce.cc:134:opt_mux$1777 }
    New ctrl vector for $pmux cell $flatten\control.\uart0.$procmux$901: { $flatten\control.\uart0.$procmux$666_CMP $auto$opt_reduce.cc:134:opt_mux$1779 }
  Optimizing cells in module \pulse_gen.
Performed a total of 2 changes.

6.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

6.23.6. Executing OPT_DFF pass (perform DFF optimizations).

6.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 15 unused wires.
<suppressed ~9 debug messages>

6.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.9. Rerunning OPT passes. (Maybe there is more to do..)

6.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

6.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.23.13. Executing OPT_DFF pass (perform DFF optimizations).

6.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.23.16. Finished OPT passes. (There is nothing left to do.)

6.24. Executing MEMORY pass.

6.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.24.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

6.24.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.24.6. Executing MEMORY_COLLECT pass (generating $mem cells).

6.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.27. Executing TECHMAP pass (map to technology primitives).

6.27.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

6.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

6.29. Executing TECHMAP pass (map to technology primitives).

6.29.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

6.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

6.30. Executing OPT pass (performing simple optimizations).

6.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~120 debug messages>

6.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1659 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1287_Y, Q = \control.transmit, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1635 ($dffe) from module pulse_gen (D = $flatten\control.$procmux$1253_Y, Q = \control.writestate, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1632 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1665 [0], Q = \control.readstate [0], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1623 ($dffe) from module pulse_gen (D = $auto$wreduce.cc:454:run$1663 [5:0], Q = \control.readcount, rval = 6'000000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1599 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_samples[3:0], Q = \control.uart0.rx_samples, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1584 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_sample_countdown[3:0], Q = \control.uart0.rx_sample_countdown, rval = 4'0101).
Adding SRST signal on $auto$opt_dff.cc:764:run$1558 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$4\rx_bits_remaining[3:0], Q = \control.uart0.rx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1540 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_out[0:0], Q = \control.uart0.tx_out, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$1524 ($dffe) from module pulse_gen (D = $flatten\control.\uart0.$3\tx_bits_remaining[3:0], Q = \control.uart0.tx_bits_remaining, rval = 4'1000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1513 ($dffe) from module pulse_gen (D = \control.tx_byte [7], Q = \control.uart0.tx_data [7], rval = 1'0).

6.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 9 unused cells and 12 unused wires.
<suppressed ~10 debug messages>

6.30.5. Rerunning OPT passes. (Removed registers in this run.)

6.30.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.30.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.30.8. Executing OPT_DFF pass (perform DFF optimizations).

6.30.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.30.10. Finished fast OPT passes.

6.31. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

6.32. Executing OPT pass (performing simple optimizations).

6.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1199:
      Old ports: A=3'010, B=3'000, Y=$flatten\control.$procmux$1199_Y
      New ports: A=1'1, B=1'0, Y=$flatten\control.$procmux$1199_Y [1]
      New connections: { $flatten\control.$procmux$1199_Y [2] $flatten\control.$procmux$1199_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $flatten\control.$procmux$1239:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1665 [0] }, B=2'00, Y=$flatten\control.$procmux$1239_Y
      New ports: A=$auto$wreduce.cc:454:run$1665 [0], B=1'0, Y=$flatten\control.$procmux$1239_Y [0]
      New connections: $flatten\control.$procmux$1239_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$420:
      Old ports: A=10'1000100000, B=10'0011100010, Y=$auto$wreduce.cc:454:run$1668 [9:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$1668 [9] $auto$wreduce.cc:454:run$1668 [1] }
      New connections: { $auto$wreduce.cc:454:run$1668 [8:2] $auto$wreduce.cc:454:run$1668 [0] } = { 1'0 $auto$wreduce.cc:454:run$1668 [1] $auto$wreduce.cc:454:run$1668 [1] 5'10000 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$570:
      Old ports: A=3'100, B=3'010, Y=$flatten\control.\uart0.$7\recv_state[2:0]
      New ports: A=2'10, B=2'01, Y=$flatten\control.\uart0.$7\recv_state[2:0] [2:1]
      New connections: $flatten\control.\uart0.$7\recv_state[2:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$582:
      Old ports: A=10'1001110001, B=10'0111010100, Y=$auto$wreduce.cc:454:run$1670 [9:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$1670 [2] $auto$wreduce.cc:454:run$1670 [0] }
      New connections: { $auto$wreduce.cc:454:run$1670 [9:3] $auto$wreduce.cc:454:run$1670 [1] } = { $auto$wreduce.cc:454:run$1670 [0] $auto$wreduce.cc:454:run$1670 [2] $auto$wreduce.cc:454:run$1670 [2] 1'1 $auto$wreduce.cc:454:run$1670 [0] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$594:
      Old ports: A={ 1'0 \control.uart0.rx_data [7:1] }, B={ 1'1 \control.uart0.rx_data [7:1] }, Y=$flatten\control.\uart0.$0\rx_data[7:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$0\rx_data[7:0] [7]
      New connections: $flatten\control.\uart0.$0\rx_data[7:0] [6:0] = \control.uart0.rx_data [7:1]
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$procmux$743:
      Old ports: A=3'010, B=3'110, Y=$flatten\control.\uart0.$4\recv_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$4\recv_state[2:0] [2]
      New connections: $flatten\control.\uart0.$4\recv_state[2:0] [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:247$149:
      Old ports: A=3'000, B=3'101, Y=$flatten\control.\uart0.$ternary$uart.v:247$149_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:247$149_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:247$149_Y [2:1] = { $flatten\control.\uart0.$ternary$uart.v:247$149_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\control.\uart0.$ternary$uart.v:306$155:
      Old ports: A=2'00, B=2'11, Y=$flatten\control.\uart0.$ternary$uart.v:306$155_Y
      New ports: A=1'0, B=1'1, Y=$flatten\control.\uart0.$ternary$uart.v:306$155_Y [0]
      New connections: $flatten\control.\uart0.$ternary$uart.v:306$155_Y [1] = $flatten\control.\uart0.$ternary$uart.v:306$155_Y [0]
  Optimizing cells in module \pulse_gen.
    Consolidated identical input bits for $pmux cell $flatten\control.$procmux$1204:
      Old ports: A=3'000, B={ 6'001010 $flatten\control.$procmux$1199_Y }, Y=$flatten\control.$0\state[2:0]
      New ports: A=2'00, B={ 4'0110 $flatten\control.$procmux$1199_Y [1] 1'0 }, Y=$flatten\control.$0\state[2:0] [1:0]
      New connections: $flatten\control.$0\state[2:0] [2] = 1'0
  Optimizing cells in module \pulse_gen.
Performed a total of 10 changes.

6.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

6.32.6. Executing OPT_DFF pass (perform DFF optimizations).

6.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

6.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.9. Rerunning OPT passes. (Maybe there is more to do..)

6.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$1632 ($dffe) from module pulse_gen.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$1614 ($dffe) from module pulse_gen.

6.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~5 debug messages>

6.32.16. Rerunning OPT passes. (Maybe there is more to do..)

6.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.20. Executing OPT_DFF pass (perform DFF optimizations).

6.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.23. Rerunning OPT passes. (Maybe there is more to do..)

6.32.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pulse_gen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

6.32.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pulse_gen.
Performed a total of 0 changes.

6.32.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.32.27. Executing OPT_DFF pass (perform DFF optimizations).

6.32.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.32.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.32.30. Finished OPT passes. (There is nothing left to do.)

6.33. Executing TECHMAP pass (map to technology primitives).

6.33.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.33.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

6.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=11\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper maccmap for cells of type $macc.
  add \control.vinput [31:24] (8 bits, unsigned)
  add \control.vinput [7:0] (8 bits, unsigned)
  add \control.vinput [15:8] (8 bits, unsigned)
  add \control.vinput [23:16] (8 bits, unsigned)
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f1a86313b2935847134cde0e02ff53e41f28add9$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:65a646296d3e5153eab58e58e05dcc6ed23f3479$paramod$6117e4f67b56bde6aa6a4e39e73a4e382ea036be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_80_ecp5_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
No more expansions possible.
<suppressed ~2332 debug messages>

6.34. Executing OPT pass (performing simple optimizations).

6.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~1341 debug messages>

6.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~1179 debug messages>
Removed a total of 393 cells.

6.34.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2500 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2500 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2501 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2501 ($_SDFFCE_PP0P_) from module pulse_gen.
Handling D = Q on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2502 ($_SDFFCE_PP0P_) from module pulse_gen (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$2502 ($_SDFFCE_PP0P_) from module pulse_gen.

6.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 199 unused cells and 1324 unused wires.
<suppressed ~200 debug messages>

6.34.5. Rerunning OPT passes. (Removed registers in this run.)

6.34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.
<suppressed ~78 debug messages>

6.34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

6.34.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4545 ($_DFFE_PP_) from module pulse_gen (D = \control.uart0.rx_samples [2], Q = \control.uart0.rx_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4032 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$856.Y_B [2], Q = \control.uart0.recv_state [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4031 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$856.Y_B [1], Q = \control.uart0.recv_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4030 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$856.Y_B [0], Q = \control.uart0.recv_state [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4009 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1204.Y_B [1], Q = \control.state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$4008 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.$procmux$1204.B_AND_S [4], Q = \control.state [0], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2051 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$541.Y_B [1], Q = \control.uart0.tx_state [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$2050 ($_DFFE_PP_) from module pulse_gen (D = $flatten\control.\uart0.$procmux$541.Y_B [0], Q = \control.uart0.tx_state [0], rval = 1'1).

6.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 8 unused cells and 14 unused wires.
<suppressed ~9 debug messages>

6.34.10. Rerunning OPT passes. (Removed registers in this run.)

6.34.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.34.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pulse_gen'.
Removed a total of 0 cells.

6.34.13. Executing OPT_DFF pass (perform DFF optimizations).

6.34.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.34.15. Finished fast OPT passes.

6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..

6.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

6.37. Executing TECHMAP pass (map to technology primitives).

6.37.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

6.37.2. Continuing TECHMAP pass.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template $paramod\$_DFFE_PN_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PN_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_P_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~277 debug messages>

6.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pulse_gen.

6.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

6.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in pulse_gen.

6.41. Executing ATTRMVCP pass (move or copy attributes).

6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pulse_gen..
Removed 0 unused cells and 786 unused wires.
<suppressed ~1 debug messages>

6.43. Executing TECHMAP pass (map to technology primitives).

6.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

6.44. Executing ABC pass (technology mapping using ABC).

6.44.1. Extracting gate netlist of module `\pulse_gen' to `<abc-temp-dir>/input.blif'..
Extracted 949 gates and 1126 wires to a netlist network with 175 inputs and 163 outputs.

6.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =     171.
ABC: Participating nodes from both networks       =     396.
ABC: Participating nodes from the first network   =     180. (  73.47 % of nodes)
ABC: Participating nodes from the second network  =     216. (  88.16 % of nodes)
ABC: Node pairs (any polarity)                    =     180. (  73.47 % of names can be moved)
ABC: Node pairs (same polarity)                   =     172. (  70.20 % of names can be moved)
ABC: Total runtime =     0.05 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

6.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      244
ABC RESULTS:        internal signals:      788
ABC RESULTS:           input signals:      175
ABC RESULTS:          output signals:      163
Removing temp directory.
Removed 0 unused cells and 562 unused wires.

6.45. Executing TECHMAP pass (map to technology primitives).

6.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

6.45.2. Continuing TECHMAP pass.
Using template $paramod$53afc4693cdd4770ebaebeb0ab6c288fde062f75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000100000001000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod$50551b8d943b0c170a72faa9739a5a88f4abce2d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod$2ddb5b5cad1eda4b448691edd161080bb92bfe50\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod$2415ae731198fab63542cb33ec0423f052901ef2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=16777216 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1073741824 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1996947456 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod$89a7c44637a153ae876a5df3b846d5543893af1c\$lut for cells of type $lut.
Using template $paramod$57619346c001bba14f685682aaa48a843cd5a7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111100000001111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod$5fba6fa4affd3d8cb90b92595f737467c857f3c8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111110111010101010100010000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=401139735 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10000000000000001111111111111111 for cells of type $lut.
Using template $paramod$629bea346f0daddb39cb1ebf17c36b3d1144d5d1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod$05b7e8229d9a7a31e653ac7a3cef172aa16e73f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=1073807359 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111000000001111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11101111000011110000111100001111 for cells of type $lut.
Using template $paramod$fcd45dac87ecaf8167f012f6f6d6fa7b369dedb8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111111111111111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000000000000100010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11111111010100110000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65536 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=65524 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'10111111111111110000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11110000101010100011001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=5\LUT=32'11010000000000000000000000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~1340 debug messages>

6.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in pulse_gen.
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut3 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut4 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut5 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut6 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut4 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut5 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut6 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7088.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7088.lut3 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7028.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7027.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7023.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7023.lut2 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7023.lut3 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7029.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7113.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7036.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7039.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7039.lut2 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7039.lut3 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7040.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7037.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut3 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut4 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut5 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7011.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7038.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut3 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut5 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut6 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut7 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7008.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7008.lut2 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7008.lut3 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7004.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7009.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7007.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7036.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7012.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7036.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7045.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7063.lut1 (4 -> 3)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7010.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7063.lut0 (4 -> 2)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7067.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7075.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7131.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7078.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7088.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7090.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7096.lut0 (4 -> 1)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7121.lut1 (4 -> 2)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7106.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7109.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7110.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7113.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7112.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7120.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7121.lut0 (4 -> 2)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7122.lut0 (4 -> 1)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7125.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7128.lut0 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7113.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7124.lut1 (4 -> 1)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7022.lut1 (4 -> 0)
  Optimizing lut $abc$7002$auto$blifparse.cc:498:parse_blif$7152.lut0 (4 -> 0)
Removed 0 unused cells and 508 unused wires.

6.47. Executing AUTONAME pass.
Renamed 14275 objects in module pulse_gen (83 iterations).
<suppressed ~1140 debug messages>

6.48. Executing HIERARCHY pass (managing design hierarchy).

6.48.1. Analyzing design hierarchy..
Top module:  \pulse_gen

6.48.2. Analyzing design hierarchy..
Top module:  \pulse_gen
Removed 0 unused modules.

6.49. Printing statistics.

=== pulse_gen ===

   Number of wires:                523
   Number of wire bits:           2286
   Number of public wires:         523
   Number of public wire bits:    2286
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                744
     CCU2C                         130
     EHXPLLL                         1
     L6MUX21                        30
     LUT4                          345
     PFUMX                          81
     TRELLIS_FF                    157

6.50. Executing CHECK pass (checking for obvious problems).
checking module pulse_gen..
found and reported 0 problems.

6.51. Executing JSON backend.

End of script. Logfile hash: 51978400ac, CPU: user 14.11s system 0.54s, MEM: 250.32 MB peak
Yosys 0.9+3578 (git sha1 ed579038, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 19% 18x read_verilog (2 sec), 16% 8x techmap (2 sec), ...
nextpnr-ecp5 --pre-pack clk_constraint.py --json pulse_gen.json --textcfg pulse_gen_out.config --um5g-85k --package CABGA381 --lpf ecp5.lpf
Info: constraining clock net 'clk' to 50.00 MHz
Info: constraining clock net 'clk_pll' to 100.00 MHz

Info: Logic utilisation before packing:
Info:     Total LUT4s:       605/83640     0%
Info:         logic LUTs:    345/83640     0%
Info:         carry LUTs:    260/83640     0%
Info:           RAM LUTs:      0/41820     0%
Info:          RAMW LUTs:      0/20910     0%

Info:      Total DFFs:       314/83640     0%

Info: Packing IOs..
Info: pin 'P2$tr_io' constrained to Bel 'X126/Y92/PIOB'.
Info: pin 'Pulse$tr_io' constrained to Bel 'X126/Y83/PIOA'.
Info: pin 'RS232_Rx$tr_io' constrained to Bel 'X0/Y92/PIOB'.
Info: pin 'RS232_Tx$tr_io' constrained to Bel 'X0/Y92/PIOC'.
Info: pin 'Sync$tr_io' constrained to Bel 'X126/Y83/PIOD'.
Info: pin 'clk$tr_io' constrained to Bel 'X65/Y0/PIOA'.
Info: pin 'clk_uart$tr_io' constrained to Bel 'X63/Y0/PIOA'.
Info: pin 'recv$tr_io' constrained to Bel 'X126/Y92/PIOC'.
Info: pin 'resetn$tr_io' constrained to Bel 'X126/Y83/PIOB'.
Info: pin 'led[0]$tr_io' constrained to Bel 'X76/Y0/PIOB'.
Info: pin 'led[1]$tr_io' constrained to Bel 'X76/Y0/PIOA'.
Info: pin 'led[2]$tr_io' constrained to Bel 'X119/Y0/PIOB'.
Info: pin 'led[3]$tr_io' constrained to Bel 'X119/Y0/PIOA'.
Info: pin 'led[4]$tr_io' constrained to Bel 'X116/Y0/PIOB'.
Info: pin 'led[5]$tr_io' constrained to Bel 'X114/Y0/PIOB'.
Info: pin 'led[6]$tr_io' constrained to Bel 'X116/Y0/PIOA'.
Info: pin 'led[7]$tr_io' constrained to Bel 'X114/Y0/PIOA'.
Info: Packing constants..
Info: Packing carries...
Info: Finding LUTFF pairs...
Info: Packing LUT5-7s...
Info: Finding LUT-LUT pairs...
Info: Packing paired LUTs into a SLICE...
Info: Packing unpaired LUTs into a SLICE...
Info: Packing unpaired FFs into a SLICE...
Info: Generating derived timing constraints...
Info:     Input frequency of PLL 'ecppll.pll_i' is constrained to 50.0 MHz
Info: Promoting globals...
Info:     promoting clock net clk_uart$TRELLIS_IO_IN to global network
Info:     promoting clock net clk_pll to global network
Info: Checksum: 0xbffef9ab

Info: Annotating ports with timing budgets for target frequency 12.00 MHz
Info: Checksum: 0x23b04355

Info: Device utilisation:
Info: 	       TRELLIS_SLICE:   367/41820     0%
Info: 	          TRELLIS_IO:    17/  365     4%
Info: 	                DCCA:     2/   56     3%
Info: 	              DP16KD:     0/  208     0%
Info: 	          MULT18X18D:     0/  156     0%
Info: 	              ALU54B:     0/   78     0%
Info: 	             EHXPLLL:     1/    4    25%
Info: 	             EXTREFB:     0/    2     0%
Info: 	                DCUA:     0/    2     0%
Info: 	           PCSCLKDIV:     0/    2     0%
Info: 	             IOLOGIC:     0/  224     0%
Info: 	            SIOLOGIC:     0/  141     0%
Info: 	                 GSR:     0/    1     0%
Info: 	               JTAGG:     0/    1     0%
Info: 	                OSCG:     0/    1     0%
Info: 	               SEDGA:     0/    1     0%
Info: 	                 DTR:     0/    1     0%
Info: 	             USRMCLK:     0/    1     0%
Info: 	             CLKDIVF:     0/    4     0%
Info: 	           ECLKSYNCB:     0/   10     0%
Info: 	             DLLDELD:     0/    8     0%
Info: 	              DDRDLL:     0/    4     0%
Info: 	             DQSBUFM:     0/   14     0%
Info: 	     TRELLIS_ECLKBUF:     0/    8     0%
Info: 	        ECLKBRIDGECS:     0/    2     0%

Info: Placed 18 cells based on constraints.
Info: Creating initial analytic placement for 197 cells, random placement wirelen = 36521.
Info:     at initial placer iter 0, wirelen = 886
Info:     at initial placer iter 1, wirelen = 866
Info:     at initial placer iter 2, wirelen = 843
Info:     at initial placer iter 3, wirelen = 841
Info: Running main analytical placer.
Info:     at iteration #1, type TRELLIS_SLICE: wirelen solved = 873, spread = 2198, legal = 2281; time = 0.07s
Info:     at iteration #2, type TRELLIS_SLICE: wirelen solved = 873, spread = 2184, legal = 2290; time = 0.08s
Info:     at iteration #3, type TRELLIS_SLICE: wirelen solved = 937, spread = 2276, legal = 2367; time = 0.10s
Info:     at iteration #4, type TRELLIS_SLICE: wirelen solved = 1033, spread = 2294, legal = 2383; time = 0.12s
Info:     at iteration #5, type TRELLIS_SLICE: wirelen solved = 1051, spread = 2083, legal = 2388; time = 0.09s
Info:     at iteration #6, type TRELLIS_SLICE: wirelen solved = 1082, spread = 2150, legal = 2464; time = 0.09s
Info: HeAP Placer Time: 1.11s
Info:   of which solving equations: 0.51s
Info:   of which spreading cells: 0.06s
Info:   of which strict legalisation: 0.02s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 64, wirelen = 2281
Info:   at iteration #5: temp = 0.000000, timing cost = 43, wirelen = 1902
Info:   at iteration #10: temp = 0.000000, timing cost = 75, wirelen = 1796
Info:   at iteration #15: temp = 0.000000, timing cost = 69, wirelen = 1758
Info:   at iteration #20: temp = 0.000000, timing cost = 61, wirelen = 1724
Info:   at iteration #21: temp = 0.000000, timing cost = 62, wirelen = 1722 
Info: SA placement time 4.56s

Info: Max frequency for clock '$glbnet$clk_uart$TRELLIS_IO_IN': 197.36 MHz (PASS at 12.00 MHz)
Info: Max frequency for clock                '$glbnet$clk_pll': 255.30 MHz (PASS at 100.00 MHz)

Info: Max delay <async>                                -> posedge $glbnet$clk_uart$TRELLIS_IO_IN: 6.60 ns
Info: Max delay posedge $glbnet$clk_pll                -> <async>                               : 1.44 ns
Info: Max delay posedge $glbnet$clk_uart$TRELLIS_IO_IN -> <async>                               : 6.39 ns

Info: Slack histogram:
Info:  legend: * represents 3 endpoint(s)
Info:          + represents [1,3) endpoint(s)
Info: [  6083,   9909) |****************+
Info: [  9909,  13735) | 
Info: [ 13735,  17561) | 
Info: [ 17561,  21387) | 
Info: [ 21387,  25213) | 
Info: [ 25213,  29039) | 
Info: [ 29039,  32865) | 
Info: [ 32865,  36691) | 
Info: [ 36691,  40517) | 
Info: [ 40517,  44343) | 
Info: [ 44343,  48169) | 
Info: [ 48169,  51995) | 
Info: [ 51995,  55821) | 
Info: [ 55821,  59647) | 
Info: [ 59647,  63473) | 
Info: [ 63473,  67299) | 
Info: [ 67299,  71125) | 
Info: [ 71125,  74951) | 
Info: [ 74951,  78777) |**************************+
Info: [ 78777,  82603) |************************************************************ 
Info: Checksum: 0xdef80fd3
Info: Routing globals...
Info:     routing clock net $glbnet$clk_uart$TRELLIS_IO_IN using global 0
Info:     routing clock net $glbnet$clk_pll using global 1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 1860 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |        6        993 |    6   993 |       868|       2.69       2.69|
Info:       1877 |       10       1867 |    4   874 |         0|       2.77       5.46|
Info: Routing complete.
Info: Router1 time 5.46s
Info: Checksum: 0x118aa380

Info: Critical path report for clock '$glbnet$clk_uart$TRELLIS_IO_IN' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_PFUMX_Z_2_SLICE.Q0
Info:  1.0  1.3    Net control.uart0.rx_clk[3] budget 13.520000 ns (77,92) -> (79,92)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_1$CCU2_SLICE.A1
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:98.39-98.45
Info:                  pulse_control.v:82.7-94.4
Info:  0.3  1.5  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_1$CCU2_SLICE.FCO
Info:  0.0  1.5    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_1_COUT[2] budget 0.000000 ns (79,92) -> (79,92)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_S1_CCU2C_S1$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:145.22-145.35
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_S1_CCU2C_S1$CCU2_SLICE.FCO
Info:  0.0  1.6    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_1_COUT[4] budget 0.000000 ns (79,92) -> (80,92)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:145.22-145.35
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.6  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT$CCU2_SLICE.FCO
Info:  0.0  1.6    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_1_COUT[6] budget 0.000000 ns (80,92) -> (80,92)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:145.22-145.35
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0$CCU2_SLICE.FCO
Info:  0.0  1.7    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_1_COUT[8] budget 0.000000 ns (80,92) -> (80,92)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_3$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:145.22-145.35
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.0  1.7  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_3$CCU2_SLICE.FCO
Info:  0.0  1.7    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_1_COUT[10] budget 0.000000 ns (80,92) -> (80,92)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_2$CCU2_SLICE.FCI
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:145.22-145.35
Info:                  pulse_control.v:82.7-94.4
Info:                  /usr/local/bin/../share/yosys/ecp5/arith_map.v:63.22-63.23
Info:  0.3  2.0  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_2$CCU2_SLICE.F0
Info:  0.7  2.7    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_CCU2C_S0_COUT_CCU2C_COUT_S0[2] budget 13.520000 ns (80,92) -> (77,91)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_L6MUX21_SD_D1_PFUMX_Z_SLICE.M0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  2.8  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_L6MUX21_SD_D1_PFUMX_Z_SLICE.OFX0
Info:  0.0  2.8    Net control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_L6MUX21_SD_D1 budget 0.000000 ns (77,91) -> (77,91)
Info:                Sink control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_L6MUX21_SD_D1_PFUMX_Z_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  3.0  Source control.uart0.rx_data_TRELLIS_FF_Q_7_LSR_LUT4_Z_C_LUT4_A_Z_PFUMX_ALUT_Z_LUT4_Z_D_L6MUX21_SD_D1_PFUMX_Z_SLICE.OFX1
Info:  1.0  4.0    Net RS232_Rx_LUT4_A_1_B[2] budget 16.232000 ns (77,91) -> (76,93)
Info:                Sink RS232_Rx_LUT4_A_1_Z_PFUMX_ALUT_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  4.2  Source RS232_Rx_LUT4_A_1_Z_PFUMX_ALUT_SLICE.OFX0
Info:  0.0  4.2    Net RS232_Rx_LUT4_D_Z_L6MUX21_Z_1_D1 budget 0.000000 ns (76,93) -> (76,93)
Info:                Sink RS232_Rx_LUT4_A_1_Z_PFUMX_ALUT_SLICE.FXB
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:142.38-142.40
Info:  0.1  4.3  Source RS232_Rx_LUT4_A_1_Z_PFUMX_ALUT_SLICE.OFX1
Info:  1.0  5.3    Net RS232_Rx_LUT4_D_Z[4] budget 20.292999 ns (76,93) -> (72,92)
Info:                Sink control.uart0.rx_bits_remaining_TRELLIS_FF_Q_DI_LUT4_Z_2_SLICE.LSR
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  5.5  Setup control.uart0.rx_bits_remaining_TRELLIS_FF_Q_DI_LUT4_Z_2_SLICE.LSR
Info: 1.9 ns logic, 3.6 ns routing

Info: Critical path report for clock '$glbnet$clk_pll' (posedge -> posedge):
Info: curr total
Info:  0.3  0.3  Source pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_6$CCU2_SLICE.Q1
Info:  0.8  1.1    Net pulses.counter[27] budget 1.627000 ns (123,85) -> (123,86)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_LUT4_Z_A_LUT4_B_Z_PFUMX_ALUT_Z_LUT4_Z_SLICE.C1
Info:                Defined in:
Info:                  pulse_gen.v:87.9-110.4
Info:                  pulses.v:48.18-48.25
Info:  0.1  1.3  Source pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_LUT4_Z_A_LUT4_B_Z_PFUMX_ALUT_Z_LUT4_Z_SLICE.F1
Info:  0.9  2.2    Net pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_LUT4_Z_A_LUT4_B_Z_PFUMX_ALUT_Z_LUT4_Z_A[0] budget 1.627000 ns (123,86) -> (123,86)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_LUT4_Z_A_LUT4_B_Z_PFUMX_ALUT_Z_LUT4_Z_SLICE.A0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  2.3  Source pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_LUT4_Z_A_LUT4_B_Z_PFUMX_ALUT_Z_LUT4_Z_SLICE.F0
Info:  0.2  2.5    Net pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_LUT4_Z_A_LUT4_B_Z_PFUMX_ALUT_Z[1] budget 1.627000 ns (123,86) -> (123,86)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_C_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  2.7  Source pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_C_LUT4_B_Z_PFUMX_ALUT_Z_PFUMX_Z_SLICE.OFX0
Info:  0.3  3.0    Net pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D[2] budget 1.627000 ns (123,86) -> (122,86)
Info:                Sink pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_PFUMX_C0_SLICE.D1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  3.3  Source pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_PFUMX_C0_SLICE.OFX0
Info:  0.6  3.9    Net pulses.pulses_TRELLIS_FF_Q_LSR_LUT4_Z_A_LUT4_Z_D_PFUMX_C0_Z budget 1.627000 ns (122,86) -> (123,85)
Info:                Sink pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.LSR
Info:  0.2  4.1  Setup pulses.counter_TRELLIS_FF_Q_DI_CCU2C_S0_5$CCU2_SLICE.LSR
Info: 1.3 ns logic, 2.8 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge $glbnet$clk_uart$TRELLIS_IO_IN':
Info: curr total
Info:  0.0  0.0  Source RS232_Rx$tr_io.O
Info:  3.6  3.6    Net RS232_Rx$TRELLIS_IO_IN budget 27.608999 ns (0,92) -> (73,92)
Info:                Sink RS232_Rx_LUT4_A_2_SLICE.A0
Info:                Defined in:
Info:                  pulse_gen.v:64.16-83.4
Info:                  uart.v:53.11-53.13
Info:                  pulse_control.v:82.7-94.4
Info:  0.1  3.8  Source RS232_Rx_LUT4_A_2_SLICE.F0
Info:  1.0  4.8    Net RS232_Rx_LUT4_A_2_Z[2] budget 27.650999 ns (73,92) -> (75,92)
Info:                Sink control.uart0.rx_samples_TRELLIS_FF_Q_CE_PFUMX_Z_SLICE.C1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.2  5.0  Source control.uart0.rx_samples_TRELLIS_FF_Q_CE_PFUMX_Z_SLICE.OFX0
Info:  0.5  5.5    Net control.uart0.rx_samples_TRELLIS_FF_Q_CE budget 16.299000 ns (75,92) -> (74,93)
Info:                Sink control.uart0.rx_samples_TRELLIS_FF_Q_2_LSR_LUT4_Z_SLICE.CE
Info:  0.0  5.5  Setup control.uart0.rx_samples_TRELLIS_FF_Q_2_LSR_LUT4_Z_SLICE.CE
Info: 0.4 ns logic, 5.1 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_pll' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source pulses.inh_TRELLIS_FF_Q_DI_LUT4_Z_SLICE.Q0
Info:  0.7  1.1    Net P2$TRELLIS_IO_OUT budget 83.024002 ns (124,86) -> (126,92)
Info:                Sink P2$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:87.9-110.4
Info:                  pulses.v:45.13-45.18
Info: 0.3 ns logic, 0.7 ns routing

Info: Critical path report for cross-domain path 'posedge $glbnet$clk_uart$TRELLIS_IO_IN' -> '<async>':
Info: curr total
Info:  0.3  0.3  Source control.uart0.recv_state_TRELLIS_FF_Q_2_DI_LUT4_Z_SLICE.Q0
Info:  0.7  1.0    Net control.uart0.recv_state[2] budget 16.447001 ns (75,89) -> (75,89)
Info:                Sink control.led_LUT4_Z_SLICE.C0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ecp5/cells_map.v:109.23-109.24
Info:  0.1  1.2  Source control.led_LUT4_Z_SLICE.F0
Info:  4.1  5.3    Net led[0]$TRELLIS_IO_OUT budget 41.441002 ns (75,89) -> (76,0)
Info:                Sink led[0]$tr_io.I
Info:                Defined in:
Info:                  pulse_gen.v:7.15-7.18
Info: 0.4 ns logic, 4.9 ns routing

Info: Max frequency for clock '$glbnet$clk_uart$TRELLIS_IO_IN': 181.00 MHz (PASS at 12.00 MHz)
Info: Max frequency for clock                '$glbnet$clk_pll': 244.38 MHz (PASS at 100.00 MHz)

Info: Max delay <async>                                -> posedge $glbnet$clk_uart$TRELLIS_IO_IN: 5.51 ns
Info: Max delay posedge $glbnet$clk_pll                -> <async>                               : 1.05 ns
Info: Max delay posedge $glbnet$clk_uart$TRELLIS_IO_IN -> <async>                               : 5.31 ns

Info: Slack histogram:
Info:  legend: * represents 2 endpoint(s)
Info:          + represents [1,2) endpoint(s)
Info: [  5908,   9744) |******************+
Info: [  9744,  13580) | 
Info: [ 13580,  17416) | 
Info: [ 17416,  21252) | 
Info: [ 21252,  25088) | 
Info: [ 25088,  28924) | 
Info: [ 28924,  32760) | 
Info: [ 32760,  36596) | 
Info: [ 36596,  40432) | 
Info: [ 40432,  44268) | 
Info: [ 44268,  48104) | 
Info: [ 48104,  51940) | 
Info: [ 51940,  55776) | 
Info: [ 55776,  59612) | 
Info: [ 59612,  63448) | 
Info: [ 63448,  67284) | 
Info: [ 67284,  71120) | 
Info: [ 71120,  74956) | 
Info: [ 74956,  78792) |*********************************+
Info: [ 78792,  82628) |************************************************************ 
ecppack --svf pulse_gen.svf pulse_gen_out.config pulse_gen.bit
rm pulse_gen_out.config pulse_gen.json
